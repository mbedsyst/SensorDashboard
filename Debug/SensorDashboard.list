
SensorDashboard.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004600  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000370  080047a0  080047a0  000057a0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004b10  08004b10  000061c8  2**0
                  CONTENTS
  4 .ARM          00000008  08004b10  08004b10  00005b10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004b18  08004b18  000061c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004b18  08004b18  00005b18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004b1c  08004b1c  00005b1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001c8  20000000  08004b20  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000190  200001c8  08004ce8  000061c8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000358  08004ce8  00006358  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000061c8  2**0
                  CONTENTS, READONLY
 12 .debug_info   000017bf  00000000  00000000  000061f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000850  00000000  00000000  000079b7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000248  00000000  00000000  00008208  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000192  00000000  00000000  00008450  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001692  00000000  00000000  000085e2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002e97  00000000  00000000  00009c74  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000556de  00000000  00000000  0000cb0b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000621e9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001824  00000000  00000000  0006222c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000063  00000000  00000000  00063a50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001c8 	.word	0x200001c8
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08004788 	.word	0x08004788

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001cc 	.word	0x200001cc
 80001dc:	08004788 	.word	0x08004788

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	@ 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_frsub>:
 8000bb8:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000bbc:	e002      	b.n	8000bc4 <__addsf3>
 8000bbe:	bf00      	nop

08000bc0 <__aeabi_fsub>:
 8000bc0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000bc4 <__addsf3>:
 8000bc4:	0042      	lsls	r2, r0, #1
 8000bc6:	bf1f      	itttt	ne
 8000bc8:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000bcc:	ea92 0f03 	teqne	r2, r3
 8000bd0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000bd4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000bd8:	d06a      	beq.n	8000cb0 <__addsf3+0xec>
 8000bda:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000bde:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000be2:	bfc1      	itttt	gt
 8000be4:	18d2      	addgt	r2, r2, r3
 8000be6:	4041      	eorgt	r1, r0
 8000be8:	4048      	eorgt	r0, r1
 8000bea:	4041      	eorgt	r1, r0
 8000bec:	bfb8      	it	lt
 8000bee:	425b      	neglt	r3, r3
 8000bf0:	2b19      	cmp	r3, #25
 8000bf2:	bf88      	it	hi
 8000bf4:	4770      	bxhi	lr
 8000bf6:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000bfa:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000bfe:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000c02:	bf18      	it	ne
 8000c04:	4240      	negne	r0, r0
 8000c06:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000c0a:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000c0e:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000c12:	bf18      	it	ne
 8000c14:	4249      	negne	r1, r1
 8000c16:	ea92 0f03 	teq	r2, r3
 8000c1a:	d03f      	beq.n	8000c9c <__addsf3+0xd8>
 8000c1c:	f1a2 0201 	sub.w	r2, r2, #1
 8000c20:	fa41 fc03 	asr.w	ip, r1, r3
 8000c24:	eb10 000c 	adds.w	r0, r0, ip
 8000c28:	f1c3 0320 	rsb	r3, r3, #32
 8000c2c:	fa01 f103 	lsl.w	r1, r1, r3
 8000c30:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000c34:	d502      	bpl.n	8000c3c <__addsf3+0x78>
 8000c36:	4249      	negs	r1, r1
 8000c38:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c3c:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000c40:	d313      	bcc.n	8000c6a <__addsf3+0xa6>
 8000c42:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000c46:	d306      	bcc.n	8000c56 <__addsf3+0x92>
 8000c48:	0840      	lsrs	r0, r0, #1
 8000c4a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000c4e:	f102 0201 	add.w	r2, r2, #1
 8000c52:	2afe      	cmp	r2, #254	@ 0xfe
 8000c54:	d251      	bcs.n	8000cfa <__addsf3+0x136>
 8000c56:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000c5a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c5e:	bf08      	it	eq
 8000c60:	f020 0001 	biceq.w	r0, r0, #1
 8000c64:	ea40 0003 	orr.w	r0, r0, r3
 8000c68:	4770      	bx	lr
 8000c6a:	0049      	lsls	r1, r1, #1
 8000c6c:	eb40 0000 	adc.w	r0, r0, r0
 8000c70:	3a01      	subs	r2, #1
 8000c72:	bf28      	it	cs
 8000c74:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000c78:	d2ed      	bcs.n	8000c56 <__addsf3+0x92>
 8000c7a:	fab0 fc80 	clz	ip, r0
 8000c7e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c82:	ebb2 020c 	subs.w	r2, r2, ip
 8000c86:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c8a:	bfaa      	itet	ge
 8000c8c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c90:	4252      	neglt	r2, r2
 8000c92:	4318      	orrge	r0, r3
 8000c94:	bfbc      	itt	lt
 8000c96:	40d0      	lsrlt	r0, r2
 8000c98:	4318      	orrlt	r0, r3
 8000c9a:	4770      	bx	lr
 8000c9c:	f092 0f00 	teq	r2, #0
 8000ca0:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000ca4:	bf06      	itte	eq
 8000ca6:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000caa:	3201      	addeq	r2, #1
 8000cac:	3b01      	subne	r3, #1
 8000cae:	e7b5      	b.n	8000c1c <__addsf3+0x58>
 8000cb0:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000cb4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000cb8:	bf18      	it	ne
 8000cba:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000cbe:	d021      	beq.n	8000d04 <__addsf3+0x140>
 8000cc0:	ea92 0f03 	teq	r2, r3
 8000cc4:	d004      	beq.n	8000cd0 <__addsf3+0x10c>
 8000cc6:	f092 0f00 	teq	r2, #0
 8000cca:	bf08      	it	eq
 8000ccc:	4608      	moveq	r0, r1
 8000cce:	4770      	bx	lr
 8000cd0:	ea90 0f01 	teq	r0, r1
 8000cd4:	bf1c      	itt	ne
 8000cd6:	2000      	movne	r0, #0
 8000cd8:	4770      	bxne	lr
 8000cda:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000cde:	d104      	bne.n	8000cea <__addsf3+0x126>
 8000ce0:	0040      	lsls	r0, r0, #1
 8000ce2:	bf28      	it	cs
 8000ce4:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000ce8:	4770      	bx	lr
 8000cea:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000cee:	bf3c      	itt	cc
 8000cf0:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000cf4:	4770      	bxcc	lr
 8000cf6:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000cfa:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000cfe:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000d02:	4770      	bx	lr
 8000d04:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000d08:	bf16      	itet	ne
 8000d0a:	4608      	movne	r0, r1
 8000d0c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000d10:	4601      	movne	r1, r0
 8000d12:	0242      	lsls	r2, r0, #9
 8000d14:	bf06      	itte	eq
 8000d16:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000d1a:	ea90 0f01 	teqeq	r0, r1
 8000d1e:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000d22:	4770      	bx	lr

08000d24 <__aeabi_ui2f>:
 8000d24:	f04f 0300 	mov.w	r3, #0
 8000d28:	e004      	b.n	8000d34 <__aeabi_i2f+0x8>
 8000d2a:	bf00      	nop

08000d2c <__aeabi_i2f>:
 8000d2c:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000d30:	bf48      	it	mi
 8000d32:	4240      	negmi	r0, r0
 8000d34:	ea5f 0c00 	movs.w	ip, r0
 8000d38:	bf08      	it	eq
 8000d3a:	4770      	bxeq	lr
 8000d3c:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000d40:	4601      	mov	r1, r0
 8000d42:	f04f 0000 	mov.w	r0, #0
 8000d46:	e01c      	b.n	8000d82 <__aeabi_l2f+0x2a>

08000d48 <__aeabi_ul2f>:
 8000d48:	ea50 0201 	orrs.w	r2, r0, r1
 8000d4c:	bf08      	it	eq
 8000d4e:	4770      	bxeq	lr
 8000d50:	f04f 0300 	mov.w	r3, #0
 8000d54:	e00a      	b.n	8000d6c <__aeabi_l2f+0x14>
 8000d56:	bf00      	nop

08000d58 <__aeabi_l2f>:
 8000d58:	ea50 0201 	orrs.w	r2, r0, r1
 8000d5c:	bf08      	it	eq
 8000d5e:	4770      	bxeq	lr
 8000d60:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000d64:	d502      	bpl.n	8000d6c <__aeabi_l2f+0x14>
 8000d66:	4240      	negs	r0, r0
 8000d68:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d6c:	ea5f 0c01 	movs.w	ip, r1
 8000d70:	bf02      	ittt	eq
 8000d72:	4684      	moveq	ip, r0
 8000d74:	4601      	moveq	r1, r0
 8000d76:	2000      	moveq	r0, #0
 8000d78:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000d7c:	bf08      	it	eq
 8000d7e:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000d82:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000d86:	fabc f28c 	clz	r2, ip
 8000d8a:	3a08      	subs	r2, #8
 8000d8c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d90:	db10      	blt.n	8000db4 <__aeabi_l2f+0x5c>
 8000d92:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d96:	4463      	add	r3, ip
 8000d98:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d9c:	f1c2 0220 	rsb	r2, r2, #32
 8000da0:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000da4:	fa20 f202 	lsr.w	r2, r0, r2
 8000da8:	eb43 0002 	adc.w	r0, r3, r2
 8000dac:	bf08      	it	eq
 8000dae:	f020 0001 	biceq.w	r0, r0, #1
 8000db2:	4770      	bx	lr
 8000db4:	f102 0220 	add.w	r2, r2, #32
 8000db8:	fa01 fc02 	lsl.w	ip, r1, r2
 8000dbc:	f1c2 0220 	rsb	r2, r2, #32
 8000dc0:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000dc4:	fa21 f202 	lsr.w	r2, r1, r2
 8000dc8:	eb43 0002 	adc.w	r0, r3, r2
 8000dcc:	bf08      	it	eq
 8000dce:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000dd2:	4770      	bx	lr

08000dd4 <__aeabi_ldivmod>:
 8000dd4:	b97b      	cbnz	r3, 8000df6 <__aeabi_ldivmod+0x22>
 8000dd6:	b972      	cbnz	r2, 8000df6 <__aeabi_ldivmod+0x22>
 8000dd8:	2900      	cmp	r1, #0
 8000dda:	bfbe      	ittt	lt
 8000ddc:	2000      	movlt	r0, #0
 8000dde:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 8000de2:	e006      	blt.n	8000df2 <__aeabi_ldivmod+0x1e>
 8000de4:	bf08      	it	eq
 8000de6:	2800      	cmpeq	r0, #0
 8000de8:	bf1c      	itt	ne
 8000dea:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 8000dee:	f04f 30ff 	movne.w	r0, #4294967295
 8000df2:	f000 b99d 	b.w	8001130 <__aeabi_idiv0>
 8000df6:	f1ad 0c08 	sub.w	ip, sp, #8
 8000dfa:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000dfe:	2900      	cmp	r1, #0
 8000e00:	db09      	blt.n	8000e16 <__aeabi_ldivmod+0x42>
 8000e02:	2b00      	cmp	r3, #0
 8000e04:	db1a      	blt.n	8000e3c <__aeabi_ldivmod+0x68>
 8000e06:	f000 f835 	bl	8000e74 <__udivmoddi4>
 8000e0a:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000e0e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000e12:	b004      	add	sp, #16
 8000e14:	4770      	bx	lr
 8000e16:	4240      	negs	r0, r0
 8000e18:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000e1c:	2b00      	cmp	r3, #0
 8000e1e:	db1b      	blt.n	8000e58 <__aeabi_ldivmod+0x84>
 8000e20:	f000 f828 	bl	8000e74 <__udivmoddi4>
 8000e24:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000e28:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000e2c:	b004      	add	sp, #16
 8000e2e:	4240      	negs	r0, r0
 8000e30:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000e34:	4252      	negs	r2, r2
 8000e36:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000e3a:	4770      	bx	lr
 8000e3c:	4252      	negs	r2, r2
 8000e3e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000e42:	f000 f817 	bl	8000e74 <__udivmoddi4>
 8000e46:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000e4a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000e4e:	b004      	add	sp, #16
 8000e50:	4240      	negs	r0, r0
 8000e52:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000e56:	4770      	bx	lr
 8000e58:	4252      	negs	r2, r2
 8000e5a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000e5e:	f000 f809 	bl	8000e74 <__udivmoddi4>
 8000e62:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000e66:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000e6a:	b004      	add	sp, #16
 8000e6c:	4252      	negs	r2, r2
 8000e6e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000e72:	4770      	bx	lr

08000e74 <__udivmoddi4>:
 8000e74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e78:	9d08      	ldr	r5, [sp, #32]
 8000e7a:	460c      	mov	r4, r1
 8000e7c:	2b00      	cmp	r3, #0
 8000e7e:	d14e      	bne.n	8000f1e <__udivmoddi4+0xaa>
 8000e80:	4694      	mov	ip, r2
 8000e82:	458c      	cmp	ip, r1
 8000e84:	4686      	mov	lr, r0
 8000e86:	fab2 f282 	clz	r2, r2
 8000e8a:	d962      	bls.n	8000f52 <__udivmoddi4+0xde>
 8000e8c:	b14a      	cbz	r2, 8000ea2 <__udivmoddi4+0x2e>
 8000e8e:	f1c2 0320 	rsb	r3, r2, #32
 8000e92:	4091      	lsls	r1, r2
 8000e94:	fa20 f303 	lsr.w	r3, r0, r3
 8000e98:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e9c:	4319      	orrs	r1, r3
 8000e9e:	fa00 fe02 	lsl.w	lr, r0, r2
 8000ea2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ea6:	fa1f f68c 	uxth.w	r6, ip
 8000eaa:	fbb1 f4f7 	udiv	r4, r1, r7
 8000eae:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000eb2:	fb07 1114 	mls	r1, r7, r4, r1
 8000eb6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000eba:	fb04 f106 	mul.w	r1, r4, r6
 8000ebe:	4299      	cmp	r1, r3
 8000ec0:	d90a      	bls.n	8000ed8 <__udivmoddi4+0x64>
 8000ec2:	eb1c 0303 	adds.w	r3, ip, r3
 8000ec6:	f104 30ff 	add.w	r0, r4, #4294967295
 8000eca:	f080 8112 	bcs.w	80010f2 <__udivmoddi4+0x27e>
 8000ece:	4299      	cmp	r1, r3
 8000ed0:	f240 810f 	bls.w	80010f2 <__udivmoddi4+0x27e>
 8000ed4:	3c02      	subs	r4, #2
 8000ed6:	4463      	add	r3, ip
 8000ed8:	1a59      	subs	r1, r3, r1
 8000eda:	fa1f f38e 	uxth.w	r3, lr
 8000ede:	fbb1 f0f7 	udiv	r0, r1, r7
 8000ee2:	fb07 1110 	mls	r1, r7, r0, r1
 8000ee6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000eea:	fb00 f606 	mul.w	r6, r0, r6
 8000eee:	429e      	cmp	r6, r3
 8000ef0:	d90a      	bls.n	8000f08 <__udivmoddi4+0x94>
 8000ef2:	eb1c 0303 	adds.w	r3, ip, r3
 8000ef6:	f100 31ff 	add.w	r1, r0, #4294967295
 8000efa:	f080 80fc 	bcs.w	80010f6 <__udivmoddi4+0x282>
 8000efe:	429e      	cmp	r6, r3
 8000f00:	f240 80f9 	bls.w	80010f6 <__udivmoddi4+0x282>
 8000f04:	4463      	add	r3, ip
 8000f06:	3802      	subs	r0, #2
 8000f08:	1b9b      	subs	r3, r3, r6
 8000f0a:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000f0e:	2100      	movs	r1, #0
 8000f10:	b11d      	cbz	r5, 8000f1a <__udivmoddi4+0xa6>
 8000f12:	40d3      	lsrs	r3, r2
 8000f14:	2200      	movs	r2, #0
 8000f16:	e9c5 3200 	strd	r3, r2, [r5]
 8000f1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f1e:	428b      	cmp	r3, r1
 8000f20:	d905      	bls.n	8000f2e <__udivmoddi4+0xba>
 8000f22:	b10d      	cbz	r5, 8000f28 <__udivmoddi4+0xb4>
 8000f24:	e9c5 0100 	strd	r0, r1, [r5]
 8000f28:	2100      	movs	r1, #0
 8000f2a:	4608      	mov	r0, r1
 8000f2c:	e7f5      	b.n	8000f1a <__udivmoddi4+0xa6>
 8000f2e:	fab3 f183 	clz	r1, r3
 8000f32:	2900      	cmp	r1, #0
 8000f34:	d146      	bne.n	8000fc4 <__udivmoddi4+0x150>
 8000f36:	42a3      	cmp	r3, r4
 8000f38:	d302      	bcc.n	8000f40 <__udivmoddi4+0xcc>
 8000f3a:	4290      	cmp	r0, r2
 8000f3c:	f0c0 80f0 	bcc.w	8001120 <__udivmoddi4+0x2ac>
 8000f40:	1a86      	subs	r6, r0, r2
 8000f42:	eb64 0303 	sbc.w	r3, r4, r3
 8000f46:	2001      	movs	r0, #1
 8000f48:	2d00      	cmp	r5, #0
 8000f4a:	d0e6      	beq.n	8000f1a <__udivmoddi4+0xa6>
 8000f4c:	e9c5 6300 	strd	r6, r3, [r5]
 8000f50:	e7e3      	b.n	8000f1a <__udivmoddi4+0xa6>
 8000f52:	2a00      	cmp	r2, #0
 8000f54:	f040 8090 	bne.w	8001078 <__udivmoddi4+0x204>
 8000f58:	eba1 040c 	sub.w	r4, r1, ip
 8000f5c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000f60:	fa1f f78c 	uxth.w	r7, ip
 8000f64:	2101      	movs	r1, #1
 8000f66:	fbb4 f6f8 	udiv	r6, r4, r8
 8000f6a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000f6e:	fb08 4416 	mls	r4, r8, r6, r4
 8000f72:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000f76:	fb07 f006 	mul.w	r0, r7, r6
 8000f7a:	4298      	cmp	r0, r3
 8000f7c:	d908      	bls.n	8000f90 <__udivmoddi4+0x11c>
 8000f7e:	eb1c 0303 	adds.w	r3, ip, r3
 8000f82:	f106 34ff 	add.w	r4, r6, #4294967295
 8000f86:	d202      	bcs.n	8000f8e <__udivmoddi4+0x11a>
 8000f88:	4298      	cmp	r0, r3
 8000f8a:	f200 80cd 	bhi.w	8001128 <__udivmoddi4+0x2b4>
 8000f8e:	4626      	mov	r6, r4
 8000f90:	1a1c      	subs	r4, r3, r0
 8000f92:	fa1f f38e 	uxth.w	r3, lr
 8000f96:	fbb4 f0f8 	udiv	r0, r4, r8
 8000f9a:	fb08 4410 	mls	r4, r8, r0, r4
 8000f9e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000fa2:	fb00 f707 	mul.w	r7, r0, r7
 8000fa6:	429f      	cmp	r7, r3
 8000fa8:	d908      	bls.n	8000fbc <__udivmoddi4+0x148>
 8000faa:	eb1c 0303 	adds.w	r3, ip, r3
 8000fae:	f100 34ff 	add.w	r4, r0, #4294967295
 8000fb2:	d202      	bcs.n	8000fba <__udivmoddi4+0x146>
 8000fb4:	429f      	cmp	r7, r3
 8000fb6:	f200 80b0 	bhi.w	800111a <__udivmoddi4+0x2a6>
 8000fba:	4620      	mov	r0, r4
 8000fbc:	1bdb      	subs	r3, r3, r7
 8000fbe:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000fc2:	e7a5      	b.n	8000f10 <__udivmoddi4+0x9c>
 8000fc4:	f1c1 0620 	rsb	r6, r1, #32
 8000fc8:	408b      	lsls	r3, r1
 8000fca:	fa22 f706 	lsr.w	r7, r2, r6
 8000fce:	431f      	orrs	r7, r3
 8000fd0:	fa20 fc06 	lsr.w	ip, r0, r6
 8000fd4:	fa04 f301 	lsl.w	r3, r4, r1
 8000fd8:	ea43 030c 	orr.w	r3, r3, ip
 8000fdc:	40f4      	lsrs	r4, r6
 8000fde:	fa00 f801 	lsl.w	r8, r0, r1
 8000fe2:	0c38      	lsrs	r0, r7, #16
 8000fe4:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000fe8:	fbb4 fef0 	udiv	lr, r4, r0
 8000fec:	fa1f fc87 	uxth.w	ip, r7
 8000ff0:	fb00 441e 	mls	r4, r0, lr, r4
 8000ff4:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000ff8:	fb0e f90c 	mul.w	r9, lr, ip
 8000ffc:	45a1      	cmp	r9, r4
 8000ffe:	fa02 f201 	lsl.w	r2, r2, r1
 8001002:	d90a      	bls.n	800101a <__udivmoddi4+0x1a6>
 8001004:	193c      	adds	r4, r7, r4
 8001006:	f10e 3aff 	add.w	sl, lr, #4294967295
 800100a:	f080 8084 	bcs.w	8001116 <__udivmoddi4+0x2a2>
 800100e:	45a1      	cmp	r9, r4
 8001010:	f240 8081 	bls.w	8001116 <__udivmoddi4+0x2a2>
 8001014:	f1ae 0e02 	sub.w	lr, lr, #2
 8001018:	443c      	add	r4, r7
 800101a:	eba4 0409 	sub.w	r4, r4, r9
 800101e:	fa1f f983 	uxth.w	r9, r3
 8001022:	fbb4 f3f0 	udiv	r3, r4, r0
 8001026:	fb00 4413 	mls	r4, r0, r3, r4
 800102a:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800102e:	fb03 fc0c 	mul.w	ip, r3, ip
 8001032:	45a4      	cmp	ip, r4
 8001034:	d907      	bls.n	8001046 <__udivmoddi4+0x1d2>
 8001036:	193c      	adds	r4, r7, r4
 8001038:	f103 30ff 	add.w	r0, r3, #4294967295
 800103c:	d267      	bcs.n	800110e <__udivmoddi4+0x29a>
 800103e:	45a4      	cmp	ip, r4
 8001040:	d965      	bls.n	800110e <__udivmoddi4+0x29a>
 8001042:	3b02      	subs	r3, #2
 8001044:	443c      	add	r4, r7
 8001046:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 800104a:	fba0 9302 	umull	r9, r3, r0, r2
 800104e:	eba4 040c 	sub.w	r4, r4, ip
 8001052:	429c      	cmp	r4, r3
 8001054:	46ce      	mov	lr, r9
 8001056:	469c      	mov	ip, r3
 8001058:	d351      	bcc.n	80010fe <__udivmoddi4+0x28a>
 800105a:	d04e      	beq.n	80010fa <__udivmoddi4+0x286>
 800105c:	b155      	cbz	r5, 8001074 <__udivmoddi4+0x200>
 800105e:	ebb8 030e 	subs.w	r3, r8, lr
 8001062:	eb64 040c 	sbc.w	r4, r4, ip
 8001066:	fa04 f606 	lsl.w	r6, r4, r6
 800106a:	40cb      	lsrs	r3, r1
 800106c:	431e      	orrs	r6, r3
 800106e:	40cc      	lsrs	r4, r1
 8001070:	e9c5 6400 	strd	r6, r4, [r5]
 8001074:	2100      	movs	r1, #0
 8001076:	e750      	b.n	8000f1a <__udivmoddi4+0xa6>
 8001078:	f1c2 0320 	rsb	r3, r2, #32
 800107c:	fa20 f103 	lsr.w	r1, r0, r3
 8001080:	fa0c fc02 	lsl.w	ip, ip, r2
 8001084:	fa24 f303 	lsr.w	r3, r4, r3
 8001088:	4094      	lsls	r4, r2
 800108a:	430c      	orrs	r4, r1
 800108c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8001090:	fa00 fe02 	lsl.w	lr, r0, r2
 8001094:	fa1f f78c 	uxth.w	r7, ip
 8001098:	fbb3 f0f8 	udiv	r0, r3, r8
 800109c:	fb08 3110 	mls	r1, r8, r0, r3
 80010a0:	0c23      	lsrs	r3, r4, #16
 80010a2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80010a6:	fb00 f107 	mul.w	r1, r0, r7
 80010aa:	4299      	cmp	r1, r3
 80010ac:	d908      	bls.n	80010c0 <__udivmoddi4+0x24c>
 80010ae:	eb1c 0303 	adds.w	r3, ip, r3
 80010b2:	f100 36ff 	add.w	r6, r0, #4294967295
 80010b6:	d22c      	bcs.n	8001112 <__udivmoddi4+0x29e>
 80010b8:	4299      	cmp	r1, r3
 80010ba:	d92a      	bls.n	8001112 <__udivmoddi4+0x29e>
 80010bc:	3802      	subs	r0, #2
 80010be:	4463      	add	r3, ip
 80010c0:	1a5b      	subs	r3, r3, r1
 80010c2:	b2a4      	uxth	r4, r4
 80010c4:	fbb3 f1f8 	udiv	r1, r3, r8
 80010c8:	fb08 3311 	mls	r3, r8, r1, r3
 80010cc:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80010d0:	fb01 f307 	mul.w	r3, r1, r7
 80010d4:	42a3      	cmp	r3, r4
 80010d6:	d908      	bls.n	80010ea <__udivmoddi4+0x276>
 80010d8:	eb1c 0404 	adds.w	r4, ip, r4
 80010dc:	f101 36ff 	add.w	r6, r1, #4294967295
 80010e0:	d213      	bcs.n	800110a <__udivmoddi4+0x296>
 80010e2:	42a3      	cmp	r3, r4
 80010e4:	d911      	bls.n	800110a <__udivmoddi4+0x296>
 80010e6:	3902      	subs	r1, #2
 80010e8:	4464      	add	r4, ip
 80010ea:	1ae4      	subs	r4, r4, r3
 80010ec:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80010f0:	e739      	b.n	8000f66 <__udivmoddi4+0xf2>
 80010f2:	4604      	mov	r4, r0
 80010f4:	e6f0      	b.n	8000ed8 <__udivmoddi4+0x64>
 80010f6:	4608      	mov	r0, r1
 80010f8:	e706      	b.n	8000f08 <__udivmoddi4+0x94>
 80010fa:	45c8      	cmp	r8, r9
 80010fc:	d2ae      	bcs.n	800105c <__udivmoddi4+0x1e8>
 80010fe:	ebb9 0e02 	subs.w	lr, r9, r2
 8001102:	eb63 0c07 	sbc.w	ip, r3, r7
 8001106:	3801      	subs	r0, #1
 8001108:	e7a8      	b.n	800105c <__udivmoddi4+0x1e8>
 800110a:	4631      	mov	r1, r6
 800110c:	e7ed      	b.n	80010ea <__udivmoddi4+0x276>
 800110e:	4603      	mov	r3, r0
 8001110:	e799      	b.n	8001046 <__udivmoddi4+0x1d2>
 8001112:	4630      	mov	r0, r6
 8001114:	e7d4      	b.n	80010c0 <__udivmoddi4+0x24c>
 8001116:	46d6      	mov	lr, sl
 8001118:	e77f      	b.n	800101a <__udivmoddi4+0x1a6>
 800111a:	4463      	add	r3, ip
 800111c:	3802      	subs	r0, #2
 800111e:	e74d      	b.n	8000fbc <__udivmoddi4+0x148>
 8001120:	4606      	mov	r6, r0
 8001122:	4623      	mov	r3, r4
 8001124:	4608      	mov	r0, r1
 8001126:	e70f      	b.n	8000f48 <__udivmoddi4+0xd4>
 8001128:	3e02      	subs	r6, #2
 800112a:	4463      	add	r3, ip
 800112c:	e730      	b.n	8000f90 <__udivmoddi4+0x11c>
 800112e:	bf00      	nop

08001130 <__aeabi_idiv0>:
 8001130:	4770      	bx	lr
 8001132:	bf00      	nop

08001134 <main>:

float temperature = 0.0f;
float pressure = 0.0f;

int main(void)
{
 8001134:	b580      	push	{r7, lr}
 8001136:	af00      	add	r7, sp, #0
    I2C1_Init();
 8001138:	f000 f8b4 	bl	80012a4 <I2C1_Init>

    if (BMP280_Init() != 0)
 800113c:	f000 fb22 	bl	8001784 <BMP280_Init>
 8001140:	4603      	mov	r3, r0
 8001142:	2b00      	cmp	r3, #0
 8001144:	d001      	beq.n	800114a <main+0x16>
    {
        while (1);
 8001146:	bf00      	nop
 8001148:	e7fd      	b.n	8001146 <main+0x12>
    }

    while (1)
    {
        if (BMP280_ReadTemperature(&temperature) != 0)
 800114a:	480b      	ldr	r0, [pc, #44]	@ (8001178 <main+0x44>)
 800114c:	f000 fe4e 	bl	8001dec <BMP280_ReadTemperature>
 8001150:	4603      	mov	r3, r0
 8001152:	2b00      	cmp	r3, #0
 8001154:	d002      	beq.n	800115c <main+0x28>
        {
            temperature = -999.99f;
 8001156:	4b08      	ldr	r3, [pc, #32]	@ (8001178 <main+0x44>)
 8001158:	4a08      	ldr	r2, [pc, #32]	@ (800117c <main+0x48>)
 800115a:	601a      	str	r2, [r3, #0]
        }

        if (BMP280_ReadPressure(&pressure) != 0)
 800115c:	4808      	ldr	r0, [pc, #32]	@ (8001180 <main+0x4c>)
 800115e:	f000 fe59 	bl	8001e14 <BMP280_ReadPressure>
 8001162:	4603      	mov	r3, r0
 8001164:	2b00      	cmp	r3, #0
 8001166:	d002      	beq.n	800116e <main+0x3a>
        {
            pressure = -99999.99f;
 8001168:	4b05      	ldr	r3, [pc, #20]	@ (8001180 <main+0x4c>)
 800116a:	4a06      	ldr	r2, [pc, #24]	@ (8001184 <main+0x50>)
 800116c:	601a      	str	r2, [r3, #0]
        }
        delay_ms(1000);
 800116e:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8001172:	f000 f991 	bl	8001498 <delay_ms>
        if (BMP280_ReadTemperature(&temperature) != 0)
 8001176:	e7e8      	b.n	800114a <main+0x16>
 8001178:	200001e4 	.word	0x200001e4
 800117c:	c479ff5c 	.word	0xc479ff5c
 8001180:	200001e8 	.word	0x200001e8
 8001184:	c7c34fff 	.word	0xc7c34fff

08001188 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001188:	b480      	push	{r7}
 800118a:	af00      	add	r7, sp, #0
  return 1;
 800118c:	2301      	movs	r3, #1
}
 800118e:	4618      	mov	r0, r3
 8001190:	46bd      	mov	sp, r7
 8001192:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001196:	4770      	bx	lr

08001198 <_kill>:

int _kill(int pid, int sig)
{
 8001198:	b580      	push	{r7, lr}
 800119a:	b082      	sub	sp, #8
 800119c:	af00      	add	r7, sp, #0
 800119e:	6078      	str	r0, [r7, #4]
 80011a0:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80011a2:	f001 fc23 	bl	80029ec <__errno>
 80011a6:	4603      	mov	r3, r0
 80011a8:	2216      	movs	r2, #22
 80011aa:	601a      	str	r2, [r3, #0]
  return -1;
 80011ac:	f04f 33ff 	mov.w	r3, #4294967295
}
 80011b0:	4618      	mov	r0, r3
 80011b2:	3708      	adds	r7, #8
 80011b4:	46bd      	mov	sp, r7
 80011b6:	bd80      	pop	{r7, pc}

080011b8 <_exit>:

void _exit (int status)
{
 80011b8:	b580      	push	{r7, lr}
 80011ba:	b082      	sub	sp, #8
 80011bc:	af00      	add	r7, sp, #0
 80011be:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80011c0:	f04f 31ff 	mov.w	r1, #4294967295
 80011c4:	6878      	ldr	r0, [r7, #4]
 80011c6:	f7ff ffe7 	bl	8001198 <_kill>
  while (1) {}    /* Make sure we hang here */
 80011ca:	bf00      	nop
 80011cc:	e7fd      	b.n	80011ca <_exit+0x12>

080011ce <_close>:
  }
  return len;
}

int _close(int file)
{
 80011ce:	b480      	push	{r7}
 80011d0:	b083      	sub	sp, #12
 80011d2:	af00      	add	r7, sp, #0
 80011d4:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80011d6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80011da:	4618      	mov	r0, r3
 80011dc:	370c      	adds	r7, #12
 80011de:	46bd      	mov	sp, r7
 80011e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011e4:	4770      	bx	lr

080011e6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80011e6:	b480      	push	{r7}
 80011e8:	b083      	sub	sp, #12
 80011ea:	af00      	add	r7, sp, #0
 80011ec:	6078      	str	r0, [r7, #4]
 80011ee:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80011f0:	683b      	ldr	r3, [r7, #0]
 80011f2:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80011f6:	605a      	str	r2, [r3, #4]
  return 0;
 80011f8:	2300      	movs	r3, #0
}
 80011fa:	4618      	mov	r0, r3
 80011fc:	370c      	adds	r7, #12
 80011fe:	46bd      	mov	sp, r7
 8001200:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001204:	4770      	bx	lr

08001206 <_isatty>:

int _isatty(int file)
{
 8001206:	b480      	push	{r7}
 8001208:	b083      	sub	sp, #12
 800120a:	af00      	add	r7, sp, #0
 800120c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800120e:	2301      	movs	r3, #1
}
 8001210:	4618      	mov	r0, r3
 8001212:	370c      	adds	r7, #12
 8001214:	46bd      	mov	sp, r7
 8001216:	f85d 7b04 	ldr.w	r7, [sp], #4
 800121a:	4770      	bx	lr

0800121c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800121c:	b480      	push	{r7}
 800121e:	b085      	sub	sp, #20
 8001220:	af00      	add	r7, sp, #0
 8001222:	60f8      	str	r0, [r7, #12]
 8001224:	60b9      	str	r1, [r7, #8]
 8001226:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001228:	2300      	movs	r3, #0
}
 800122a:	4618      	mov	r0, r3
 800122c:	3714      	adds	r7, #20
 800122e:	46bd      	mov	sp, r7
 8001230:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001234:	4770      	bx	lr
	...

08001238 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001238:	b580      	push	{r7, lr}
 800123a:	b086      	sub	sp, #24
 800123c:	af00      	add	r7, sp, #0
 800123e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001240:	4a14      	ldr	r2, [pc, #80]	@ (8001294 <_sbrk+0x5c>)
 8001242:	4b15      	ldr	r3, [pc, #84]	@ (8001298 <_sbrk+0x60>)
 8001244:	1ad3      	subs	r3, r2, r3
 8001246:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001248:	697b      	ldr	r3, [r7, #20]
 800124a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800124c:	4b13      	ldr	r3, [pc, #76]	@ (800129c <_sbrk+0x64>)
 800124e:	681b      	ldr	r3, [r3, #0]
 8001250:	2b00      	cmp	r3, #0
 8001252:	d102      	bne.n	800125a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001254:	4b11      	ldr	r3, [pc, #68]	@ (800129c <_sbrk+0x64>)
 8001256:	4a12      	ldr	r2, [pc, #72]	@ (80012a0 <_sbrk+0x68>)
 8001258:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800125a:	4b10      	ldr	r3, [pc, #64]	@ (800129c <_sbrk+0x64>)
 800125c:	681a      	ldr	r2, [r3, #0]
 800125e:	687b      	ldr	r3, [r7, #4]
 8001260:	4413      	add	r3, r2
 8001262:	693a      	ldr	r2, [r7, #16]
 8001264:	429a      	cmp	r2, r3
 8001266:	d207      	bcs.n	8001278 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001268:	f001 fbc0 	bl	80029ec <__errno>
 800126c:	4603      	mov	r3, r0
 800126e:	220c      	movs	r2, #12
 8001270:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001272:	f04f 33ff 	mov.w	r3, #4294967295
 8001276:	e009      	b.n	800128c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001278:	4b08      	ldr	r3, [pc, #32]	@ (800129c <_sbrk+0x64>)
 800127a:	681b      	ldr	r3, [r3, #0]
 800127c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800127e:	4b07      	ldr	r3, [pc, #28]	@ (800129c <_sbrk+0x64>)
 8001280:	681a      	ldr	r2, [r3, #0]
 8001282:	687b      	ldr	r3, [r7, #4]
 8001284:	4413      	add	r3, r2
 8001286:	4a05      	ldr	r2, [pc, #20]	@ (800129c <_sbrk+0x64>)
 8001288:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800128a:	68fb      	ldr	r3, [r7, #12]
}
 800128c:	4618      	mov	r0, r3
 800128e:	3718      	adds	r7, #24
 8001290:	46bd      	mov	sp, r7
 8001292:	bd80      	pop	{r7, pc}
 8001294:	20018000 	.word	0x20018000
 8001298:	00000400 	.word	0x00000400
 800129c:	200001ec 	.word	0x200001ec
 80012a0:	20000358 	.word	0x20000358

080012a4 <I2C1_Init>:
#include "Driver/I2C.h"

void I2C1_Init(void)
{
 80012a4:	b480      	push	{r7}
 80012a6:	af00      	add	r7, sp, #0
    // Enable the I2C1 and GPIOB clocks
    RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;  // Enable I2C1 clock
 80012a8:	4b27      	ldr	r3, [pc, #156]	@ (8001348 <I2C1_Init+0xa4>)
 80012aa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80012ac:	4a26      	ldr	r2, [pc, #152]	@ (8001348 <I2C1_Init+0xa4>)
 80012ae:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80012b2:	6413      	str	r3, [r2, #64]	@ 0x40
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN; // Enable GPIOB clock
 80012b4:	4b24      	ldr	r3, [pc, #144]	@ (8001348 <I2C1_Init+0xa4>)
 80012b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80012b8:	4a23      	ldr	r2, [pc, #140]	@ (8001348 <I2C1_Init+0xa4>)
 80012ba:	f043 0302 	orr.w	r3, r3, #2
 80012be:	6313      	str	r3, [r2, #48]	@ 0x30
    // Configure PB8 (SCL) and PB9 (SDA) for I2C alternate function
    GPIOB->MODER &= ~((3U << 2 * 8) | (3U << 2 * 9));  // Clear bits
 80012c0:	4b22      	ldr	r3, [pc, #136]	@ (800134c <I2C1_Init+0xa8>)
 80012c2:	681b      	ldr	r3, [r3, #0]
 80012c4:	4a21      	ldr	r2, [pc, #132]	@ (800134c <I2C1_Init+0xa8>)
 80012c6:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
 80012ca:	6013      	str	r3, [r2, #0]
    GPIOB->MODER |= (2U << 2 * 8) | (2U << 2 * 9);     // Set to AF mode (10)
 80012cc:	4b1f      	ldr	r3, [pc, #124]	@ (800134c <I2C1_Init+0xa8>)
 80012ce:	681b      	ldr	r3, [r3, #0]
 80012d0:	4a1e      	ldr	r2, [pc, #120]	@ (800134c <I2C1_Init+0xa8>)
 80012d2:	f443 2320 	orr.w	r3, r3, #655360	@ 0xa0000
 80012d6:	6013      	str	r3, [r2, #0]
    GPIOB->AFR[1] |= (4U << 4 * (8 - 8)) | (4U << 4 * (9 - 8));  // Set AF4 (I2C) for PB8 and PB9
 80012d8:	4b1c      	ldr	r3, [pc, #112]	@ (800134c <I2C1_Init+0xa8>)
 80012da:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80012dc:	4a1b      	ldr	r2, [pc, #108]	@ (800134c <I2C1_Init+0xa8>)
 80012de:	f043 0344 	orr.w	r3, r3, #68	@ 0x44
 80012e2:	6253      	str	r3, [r2, #36]	@ 0x24
    GPIOB->OTYPER |= (1U << 8) | (1U << 9);            // Open-drain for I2C
 80012e4:	4b19      	ldr	r3, [pc, #100]	@ (800134c <I2C1_Init+0xa8>)
 80012e6:	685b      	ldr	r3, [r3, #4]
 80012e8:	4a18      	ldr	r2, [pc, #96]	@ (800134c <I2C1_Init+0xa8>)
 80012ea:	f443 7340 	orr.w	r3, r3, #768	@ 0x300
 80012ee:	6053      	str	r3, [r2, #4]
    GPIOB->OSPEEDR |= (3U << 2 * 8) | (3U << 2 * 9);   // High speed
 80012f0:	4b16      	ldr	r3, [pc, #88]	@ (800134c <I2C1_Init+0xa8>)
 80012f2:	689b      	ldr	r3, [r3, #8]
 80012f4:	4a15      	ldr	r2, [pc, #84]	@ (800134c <I2C1_Init+0xa8>)
 80012f6:	f443 2370 	orr.w	r3, r3, #983040	@ 0xf0000
 80012fa:	6093      	str	r3, [r2, #8]
    GPIOB->PUPDR |= (1U << 2 * 8) | (1U << 2 * 9);     // Pull-up resistors
 80012fc:	4b13      	ldr	r3, [pc, #76]	@ (800134c <I2C1_Init+0xa8>)
 80012fe:	68db      	ldr	r3, [r3, #12]
 8001300:	4a12      	ldr	r2, [pc, #72]	@ (800134c <I2C1_Init+0xa8>)
 8001302:	f443 23a0 	orr.w	r3, r3, #327680	@ 0x50000
 8001306:	60d3      	str	r3, [r2, #12]
    // Reset I2C1 to clear any previous settings
    I2C1->CR1 |= I2C_CR1_SWRST;
 8001308:	4b11      	ldr	r3, [pc, #68]	@ (8001350 <I2C1_Init+0xac>)
 800130a:	681b      	ldr	r3, [r3, #0]
 800130c:	4a10      	ldr	r2, [pc, #64]	@ (8001350 <I2C1_Init+0xac>)
 800130e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8001312:	6013      	str	r3, [r2, #0]
    I2C1->CR1 &= ~I2C_CR1_SWRST;
 8001314:	4b0e      	ldr	r3, [pc, #56]	@ (8001350 <I2C1_Init+0xac>)
 8001316:	681b      	ldr	r3, [r3, #0]
 8001318:	4a0d      	ldr	r2, [pc, #52]	@ (8001350 <I2C1_Init+0xac>)
 800131a:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 800131e:	6013      	str	r3, [r2, #0]
    // Set the I2C clock frequency (APB1 is running at 42MHz)
    I2C1->CR2 = 42;  // 42 MHz APB1 clock
 8001320:	4b0b      	ldr	r3, [pc, #44]	@ (8001350 <I2C1_Init+0xac>)
 8001322:	222a      	movs	r2, #42	@ 0x2a
 8001324:	605a      	str	r2, [r3, #4]
    // Configure clock control for 400kHz I2C operation
    I2C1->CCR = 0x50;  // CCR = 80, Fast mode, 400kHz (see reference manual for calculations)
 8001326:	4b0a      	ldr	r3, [pc, #40]	@ (8001350 <I2C1_Init+0xac>)
 8001328:	2250      	movs	r2, #80	@ 0x50
 800132a:	61da      	str	r2, [r3, #28]
    I2C1->TRISE = 43;  // Maximum rise time
 800132c:	4b08      	ldr	r3, [pc, #32]	@ (8001350 <I2C1_Init+0xac>)
 800132e:	222b      	movs	r2, #43	@ 0x2b
 8001330:	621a      	str	r2, [r3, #32]
    // Enable I2C1
    I2C1->CR1 |= I2C_CR1_PE;
 8001332:	4b07      	ldr	r3, [pc, #28]	@ (8001350 <I2C1_Init+0xac>)
 8001334:	681b      	ldr	r3, [r3, #0]
 8001336:	4a06      	ldr	r2, [pc, #24]	@ (8001350 <I2C1_Init+0xac>)
 8001338:	f043 0301 	orr.w	r3, r3, #1
 800133c:	6013      	str	r3, [r2, #0]
}
 800133e:	bf00      	nop
 8001340:	46bd      	mov	sp, r7
 8001342:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001346:	4770      	bx	lr
 8001348:	40023800 	.word	0x40023800
 800134c:	40020400 	.word	0x40020400
 8001350:	40005400 	.word	0x40005400

08001354 <I2C1_Start>:

// Function to generate a start condition on I2C1
void I2C1_Start(void)
{
 8001354:	b480      	push	{r7}
 8001356:	af00      	add	r7, sp, #0
    I2C1->CR1 |= I2C_CR1_START;  // Generate start condition
 8001358:	4b09      	ldr	r3, [pc, #36]	@ (8001380 <I2C1_Start+0x2c>)
 800135a:	681b      	ldr	r3, [r3, #0]
 800135c:	4a08      	ldr	r2, [pc, #32]	@ (8001380 <I2C1_Start+0x2c>)
 800135e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001362:	6013      	str	r3, [r2, #0]
    while (!(I2C1->SR1 & I2C_SR1_SB));  // Wait for start condition generated
 8001364:	bf00      	nop
 8001366:	4b06      	ldr	r3, [pc, #24]	@ (8001380 <I2C1_Start+0x2c>)
 8001368:	695b      	ldr	r3, [r3, #20]
 800136a:	f003 0301 	and.w	r3, r3, #1
 800136e:	2b00      	cmp	r3, #0
 8001370:	d0f9      	beq.n	8001366 <I2C1_Start+0x12>
}
 8001372:	bf00      	nop
 8001374:	bf00      	nop
 8001376:	46bd      	mov	sp, r7
 8001378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800137c:	4770      	bx	lr
 800137e:	bf00      	nop
 8001380:	40005400 	.word	0x40005400

08001384 <I2C1_SendAddress>:

// Function to send the EEPROM address and wait for acknowledgment
void I2C1_SendAddress(uint8_t address, bool mode)
{
 8001384:	b480      	push	{r7}
 8001386:	b083      	sub	sp, #12
 8001388:	af00      	add	r7, sp, #0
 800138a:	4603      	mov	r3, r0
 800138c:	460a      	mov	r2, r1
 800138e:	71fb      	strb	r3, [r7, #7]
 8001390:	4613      	mov	r3, r2
 8001392:	71bb      	strb	r3, [r7, #6]
	if(mode) // Execute in READ Mode
 8001394:	79bb      	ldrb	r3, [r7, #6]
 8001396:	2b00      	cmp	r3, #0
 8001398:	d006      	beq.n	80013a8 <I2C1_SendAddress+0x24>
	{
		// Send the 7-bit address with the read bit
		I2C1->DR = ((address << 1) | 0x01);
 800139a:	79fb      	ldrb	r3, [r7, #7]
 800139c:	005b      	lsls	r3, r3, #1
 800139e:	f043 0201 	orr.w	r2, r3, #1
 80013a2:	4b0b      	ldr	r3, [pc, #44]	@ (80013d0 <I2C1_SendAddress+0x4c>)
 80013a4:	611a      	str	r2, [r3, #16]
 80013a6:	e003      	b.n	80013b0 <I2C1_SendAddress+0x2c>
	}
	else     // Execute in WRITE Mode
	{
		// Send the 7-bit address with the write bit
		I2C1->DR = (address << 1);
 80013a8:	79fb      	ldrb	r3, [r7, #7]
 80013aa:	4a09      	ldr	r2, [pc, #36]	@ (80013d0 <I2C1_SendAddress+0x4c>)
 80013ac:	005b      	lsls	r3, r3, #1
 80013ae:	6113      	str	r3, [r2, #16]
	}
	// Wait for address acknowledgment
    while (!(I2C1->SR1 & I2C_SR1_ADDR));
 80013b0:	bf00      	nop
 80013b2:	4b07      	ldr	r3, [pc, #28]	@ (80013d0 <I2C1_SendAddress+0x4c>)
 80013b4:	695b      	ldr	r3, [r3, #20]
 80013b6:	f003 0302 	and.w	r3, r3, #2
 80013ba:	2b00      	cmp	r3, #0
 80013bc:	d0f9      	beq.n	80013b2 <I2C1_SendAddress+0x2e>
    // Clear the ADDR flag by reading SR2
    (void)I2C1->SR2;
 80013be:	4b04      	ldr	r3, [pc, #16]	@ (80013d0 <I2C1_SendAddress+0x4c>)
 80013c0:	699b      	ldr	r3, [r3, #24]
}
 80013c2:	bf00      	nop
 80013c4:	370c      	adds	r7, #12
 80013c6:	46bd      	mov	sp, r7
 80013c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013cc:	4770      	bx	lr
 80013ce:	bf00      	nop
 80013d0:	40005400 	.word	0x40005400

080013d4 <I2C1_SendData>:

// Function to send a byte of data on I2C1
void I2C1_SendData(uint8_t data)
{
 80013d4:	b480      	push	{r7}
 80013d6:	b083      	sub	sp, #12
 80013d8:	af00      	add	r7, sp, #0
 80013da:	4603      	mov	r3, r0
 80013dc:	71fb      	strb	r3, [r7, #7]
    while (!(I2C1->SR1 & I2C_SR1_TXE));  // Wait for data register empty
 80013de:	bf00      	nop
 80013e0:	4b07      	ldr	r3, [pc, #28]	@ (8001400 <I2C1_SendData+0x2c>)
 80013e2:	695b      	ldr	r3, [r3, #20]
 80013e4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80013e8:	2b00      	cmp	r3, #0
 80013ea:	d0f9      	beq.n	80013e0 <I2C1_SendData+0xc>
    I2C1->DR = data;  // Load data into the data register
 80013ec:	4a04      	ldr	r2, [pc, #16]	@ (8001400 <I2C1_SendData+0x2c>)
 80013ee:	79fb      	ldrb	r3, [r7, #7]
 80013f0:	6113      	str	r3, [r2, #16]
}
 80013f2:	bf00      	nop
 80013f4:	370c      	adds	r7, #12
 80013f6:	46bd      	mov	sp, r7
 80013f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013fc:	4770      	bx	lr
 80013fe:	bf00      	nop
 8001400:	40005400 	.word	0x40005400

08001404 <I2C1_EnableACK>:

void I2C1_EnableACK(void)
{
 8001404:	b480      	push	{r7}
 8001406:	af00      	add	r7, sp, #0
	//Disable acknowledgment
	I2C1->CR1 |= I2C_CR1_ACK;
 8001408:	4b06      	ldr	r3, [pc, #24]	@ (8001424 <I2C1_EnableACK+0x20>)
 800140a:	681b      	ldr	r3, [r3, #0]
 800140c:	4a05      	ldr	r2, [pc, #20]	@ (8001424 <I2C1_EnableACK+0x20>)
 800140e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001412:	6013      	str	r3, [r2, #0]
	// Clear SR2
	(void)I2C1->SR2;
 8001414:	4b03      	ldr	r3, [pc, #12]	@ (8001424 <I2C1_EnableACK+0x20>)
 8001416:	699b      	ldr	r3, [r3, #24]
}
 8001418:	bf00      	nop
 800141a:	46bd      	mov	sp, r7
 800141c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001420:	4770      	bx	lr
 8001422:	bf00      	nop
 8001424:	40005400 	.word	0x40005400

08001428 <I2C1_DisableACK>:

void I2C1_DisableACK(void)
{
 8001428:	b480      	push	{r7}
 800142a:	af00      	add	r7, sp, #0
	//Disable acknowledgment
	I2C1->CR1 &= ~I2C_CR1_ACK;
 800142c:	4b06      	ldr	r3, [pc, #24]	@ (8001448 <I2C1_DisableACK+0x20>)
 800142e:	681b      	ldr	r3, [r3, #0]
 8001430:	4a05      	ldr	r2, [pc, #20]	@ (8001448 <I2C1_DisableACK+0x20>)
 8001432:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8001436:	6013      	str	r3, [r2, #0]
	// Clear SR2
	(void)I2C1->SR2;
 8001438:	4b03      	ldr	r3, [pc, #12]	@ (8001448 <I2C1_DisableACK+0x20>)
 800143a:	699b      	ldr	r3, [r3, #24]
}
 800143c:	bf00      	nop
 800143e:	46bd      	mov	sp, r7
 8001440:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001444:	4770      	bx	lr
 8001446:	bf00      	nop
 8001448:	40005400 	.word	0x40005400

0800144c <I2C1_ReadData>:

// Function to receive a byte of data on I2C1
uint8_t I2C1_ReadData(void)
{
 800144c:	b480      	push	{r7}
 800144e:	b083      	sub	sp, #12
 8001450:	af00      	add	r7, sp, #0
	// Wait for data register to be filled
	while (!(I2C1->SR1 & I2C_SR1_RXNE));
 8001452:	bf00      	nop
 8001454:	4b07      	ldr	r3, [pc, #28]	@ (8001474 <I2C1_ReadData+0x28>)
 8001456:	695b      	ldr	r3, [r3, #20]
 8001458:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800145c:	2b00      	cmp	r3, #0
 800145e:	d0f9      	beq.n	8001454 <I2C1_ReadData+0x8>
	// Load data into the variable
    uint8_t data = I2C1->DR;
 8001460:	4b04      	ldr	r3, [pc, #16]	@ (8001474 <I2C1_ReadData+0x28>)
 8001462:	691b      	ldr	r3, [r3, #16]
 8001464:	71fb      	strb	r3, [r7, #7]
    // Return the 8-bit Data
    return data;
 8001466:	79fb      	ldrb	r3, [r7, #7]
}
 8001468:	4618      	mov	r0, r3
 800146a:	370c      	adds	r7, #12
 800146c:	46bd      	mov	sp, r7
 800146e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001472:	4770      	bx	lr
 8001474:	40005400 	.word	0x40005400

08001478 <I2C1_Stop>:

// Function to generate a stop condition on I2C1
void I2C1_Stop(void)
{
 8001478:	b480      	push	{r7}
 800147a:	af00      	add	r7, sp, #0
    I2C1->CR1 |= I2C_CR1_STOP;  // Generate stop condition
 800147c:	4b05      	ldr	r3, [pc, #20]	@ (8001494 <I2C1_Stop+0x1c>)
 800147e:	681b      	ldr	r3, [r3, #0]
 8001480:	4a04      	ldr	r2, [pc, #16]	@ (8001494 <I2C1_Stop+0x1c>)
 8001482:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001486:	6013      	str	r3, [r2, #0]
}
 8001488:	bf00      	nop
 800148a:	46bd      	mov	sp, r7
 800148c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001490:	4770      	bx	lr
 8001492:	bf00      	nop
 8001494:	40005400 	.word	0x40005400

08001498 <delay_ms>:
#include "Driver/SYSTICK.h"

void delay_ms(uint32_t ms)
{
 8001498:	b480      	push	{r7}
 800149a:	b085      	sub	sp, #20
 800149c:	af00      	add	r7, sp, #0
 800149e:	6078      	str	r0, [r7, #4]
	uint32_t i;
	SysTick->CTRL |= (1<<0) | (1<<2) ;
 80014a0:	4b13      	ldr	r3, [pc, #76]	@ (80014f0 <delay_ms+0x58>)
 80014a2:	681b      	ldr	r3, [r3, #0]
 80014a4:	4a12      	ldr	r2, [pc, #72]	@ (80014f0 <delay_ms+0x58>)
 80014a6:	f043 0305 	orr.w	r3, r3, #5
 80014aa:	6013      	str	r3, [r2, #0]
	SysTick->LOAD  = 15999;
 80014ac:	4b10      	ldr	r3, [pc, #64]	@ (80014f0 <delay_ms+0x58>)
 80014ae:	f643 627f 	movw	r2, #15999	@ 0x3e7f
 80014b2:	605a      	str	r2, [r3, #4]
	for(i=0; i<ms; i++)
 80014b4:	2300      	movs	r3, #0
 80014b6:	60fb      	str	r3, [r7, #12]
 80014b8:	e009      	b.n	80014ce <delay_ms+0x36>
	{
		while(!(SysTick->CTRL & (1<<16)));
 80014ba:	bf00      	nop
 80014bc:	4b0c      	ldr	r3, [pc, #48]	@ (80014f0 <delay_ms+0x58>)
 80014be:	681b      	ldr	r3, [r3, #0]
 80014c0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80014c4:	2b00      	cmp	r3, #0
 80014c6:	d0f9      	beq.n	80014bc <delay_ms+0x24>
	for(i=0; i<ms; i++)
 80014c8:	68fb      	ldr	r3, [r7, #12]
 80014ca:	3301      	adds	r3, #1
 80014cc:	60fb      	str	r3, [r7, #12]
 80014ce:	68fa      	ldr	r2, [r7, #12]
 80014d0:	687b      	ldr	r3, [r7, #4]
 80014d2:	429a      	cmp	r2, r3
 80014d4:	d3f1      	bcc.n	80014ba <delay_ms+0x22>
	}
	SysTick->CTRL &=~(1U<<0) ;
 80014d6:	4b06      	ldr	r3, [pc, #24]	@ (80014f0 <delay_ms+0x58>)
 80014d8:	681b      	ldr	r3, [r3, #0]
 80014da:	4a05      	ldr	r2, [pc, #20]	@ (80014f0 <delay_ms+0x58>)
 80014dc:	f023 0301 	bic.w	r3, r3, #1
 80014e0:	6013      	str	r3, [r2, #0]
}
 80014e2:	bf00      	nop
 80014e4:	3714      	adds	r7, #20
 80014e6:	46bd      	mov	sp, r7
 80014e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014ec:	4770      	bx	lr
 80014ee:	bf00      	nop
 80014f0:	e000e010 	.word	0xe000e010

080014f4 <UART2_TxChar>:
    /* Enable TX, RX, and UART */
    USART2->CR1 |= USART_CR1_TE | USART_CR1_RE | USART_CR1_UE;
}

void UART2_TxChar(char ch)
{
 80014f4:	b480      	push	{r7}
 80014f6:	b083      	sub	sp, #12
 80014f8:	af00      	add	r7, sp, #0
 80014fa:	4603      	mov	r3, r0
 80014fc:	71fb      	strb	r3, [r7, #7]
	/*Wait for Transmit Data Register to be empty*/
	while(!(USART2->SR & USART_SR_TXE));
 80014fe:	bf00      	nop
 8001500:	4b07      	ldr	r3, [pc, #28]	@ (8001520 <UART2_TxChar+0x2c>)
 8001502:	681b      	ldr	r3, [r3, #0]
 8001504:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001508:	2b00      	cmp	r3, #0
 800150a:	d0f9      	beq.n	8001500 <UART2_TxChar+0xc>
	/*Write to the Transmit Data Register*/
	USART2->DR = (ch & 0xFF);
 800150c:	4a04      	ldr	r2, [pc, #16]	@ (8001520 <UART2_TxChar+0x2c>)
 800150e:	79fb      	ldrb	r3, [r7, #7]
 8001510:	6053      	str	r3, [r2, #4]
}
 8001512:	bf00      	nop
 8001514:	370c      	adds	r7, #12
 8001516:	46bd      	mov	sp, r7
 8001518:	f85d 7b04 	ldr.w	r7, [sp], #4
 800151c:	4770      	bx	lr
 800151e:	bf00      	nop
 8001520:	40004400 	.word	0x40004400

08001524 <UART2_RxChar>:
		UART2_TxChar(*str++);
	}
}

uint8_t UART2_RxChar(void)
{
 8001524:	b480      	push	{r7}
 8001526:	af00      	add	r7, sp, #0
    while(!(USART2->SR & USART_SR_RXNE)); // Wait for RXNE flag (data received)
 8001528:	bf00      	nop
 800152a:	4b07      	ldr	r3, [pc, #28]	@ (8001548 <UART2_RxChar+0x24>)
 800152c:	681b      	ldr	r3, [r3, #0]
 800152e:	f003 0320 	and.w	r3, r3, #32
 8001532:	2b00      	cmp	r3, #0
 8001534:	d0f9      	beq.n	800152a <UART2_RxChar+0x6>
    return (uint8_t)(USART2->DR & 0xFF); // Return the received data
 8001536:	4b04      	ldr	r3, [pc, #16]	@ (8001548 <UART2_RxChar+0x24>)
 8001538:	685b      	ldr	r3, [r3, #4]
 800153a:	b2db      	uxtb	r3, r3
}
 800153c:	4618      	mov	r0, r3
 800153e:	46bd      	mov	sp, r7
 8001540:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001544:	4770      	bx	lr
 8001546:	bf00      	nop
 8001548:	40004400 	.word	0x40004400

0800154c <_write>:

int _write(int file, char *ptr, int len)
{
 800154c:	b580      	push	{r7, lr}
 800154e:	b086      	sub	sp, #24
 8001550:	af00      	add	r7, sp, #0
 8001552:	60f8      	str	r0, [r7, #12]
 8001554:	60b9      	str	r1, [r7, #8]
 8001556:	607a      	str	r2, [r7, #4]
    for (int i = 0; i < len; i++)
 8001558:	2300      	movs	r3, #0
 800155a:	617b      	str	r3, [r7, #20]
 800155c:	e009      	b.n	8001572 <_write+0x26>
    {
        UART2_TxChar(ptr[i]);  // Transmit each character via UART2
 800155e:	697b      	ldr	r3, [r7, #20]
 8001560:	68ba      	ldr	r2, [r7, #8]
 8001562:	4413      	add	r3, r2
 8001564:	781b      	ldrb	r3, [r3, #0]
 8001566:	4618      	mov	r0, r3
 8001568:	f7ff ffc4 	bl	80014f4 <UART2_TxChar>
    for (int i = 0; i < len; i++)
 800156c:	697b      	ldr	r3, [r7, #20]
 800156e:	3301      	adds	r3, #1
 8001570:	617b      	str	r3, [r7, #20]
 8001572:	697a      	ldr	r2, [r7, #20]
 8001574:	687b      	ldr	r3, [r7, #4]
 8001576:	429a      	cmp	r2, r3
 8001578:	dbf1      	blt.n	800155e <_write+0x12>
    }
    return len;  // Return the number of characters written
 800157a:	687b      	ldr	r3, [r7, #4]
}
 800157c:	4618      	mov	r0, r3
 800157e:	3718      	adds	r7, #24
 8001580:	46bd      	mov	sp, r7
 8001582:	bd80      	pop	{r7, pc}

08001584 <_read>:

int _read(int file, char *ptr, int len)
{
 8001584:	b590      	push	{r4, r7, lr}
 8001586:	b087      	sub	sp, #28
 8001588:	af00      	add	r7, sp, #0
 800158a:	60f8      	str	r0, [r7, #12]
 800158c:	60b9      	str	r1, [r7, #8]
 800158e:	607a      	str	r2, [r7, #4]
    for (int i = 0; i < len; i++)
 8001590:	2300      	movs	r3, #0
 8001592:	617b      	str	r3, [r7, #20]
 8001594:	e017      	b.n	80015c6 <_read+0x42>
    {
        ptr[i] = UART2_RxChar();  // Read each character via UART2
 8001596:	697b      	ldr	r3, [r7, #20]
 8001598:	68ba      	ldr	r2, [r7, #8]
 800159a:	18d4      	adds	r4, r2, r3
 800159c:	f7ff ffc2 	bl	8001524 <UART2_RxChar>
 80015a0:	4603      	mov	r3, r0
 80015a2:	7023      	strb	r3, [r4, #0]
        if (ptr[i] == '\r')      // Handle Enter key as a newline
 80015a4:	697b      	ldr	r3, [r7, #20]
 80015a6:	68ba      	ldr	r2, [r7, #8]
 80015a8:	4413      	add	r3, r2
 80015aa:	781b      	ldrb	r3, [r3, #0]
 80015ac:	2b0d      	cmp	r3, #13
 80015ae:	d107      	bne.n	80015c0 <_read+0x3c>
        {
            ptr[i] = '\n';       // Convert '\r' to '\n' for standard behavior
 80015b0:	697b      	ldr	r3, [r7, #20]
 80015b2:	68ba      	ldr	r2, [r7, #8]
 80015b4:	4413      	add	r3, r2
 80015b6:	220a      	movs	r2, #10
 80015b8:	701a      	strb	r2, [r3, #0]
            return i + 1;        // Return number of characters read
 80015ba:	697b      	ldr	r3, [r7, #20]
 80015bc:	3301      	adds	r3, #1
 80015be:	e007      	b.n	80015d0 <_read+0x4c>
    for (int i = 0; i < len; i++)
 80015c0:	697b      	ldr	r3, [r7, #20]
 80015c2:	3301      	adds	r3, #1
 80015c4:	617b      	str	r3, [r7, #20]
 80015c6:	697a      	ldr	r2, [r7, #20]
 80015c8:	687b      	ldr	r3, [r7, #4]
 80015ca:	429a      	cmp	r2, r3
 80015cc:	dbe3      	blt.n	8001596 <_read+0x12>
        }
    }
    return len;  // Return number of characters read
 80015ce:	687b      	ldr	r3, [r7, #4]
}
 80015d0:	4618      	mov	r0, r3
 80015d2:	371c      	adds	r7, #28
 80015d4:	46bd      	mov	sp, r7
 80015d6:	bd90      	pop	{r4, r7, pc}

080015d8 <BMP280_ReadRegister>:
static BMP280_CalibData bmp280_calib;
static int32_t t_fine;

// Function to read multiple bytes from BMP280
static void BMP280_ReadRegister(uint8_t reg, uint8_t* data, uint8_t length)
{
 80015d8:	b590      	push	{r4, r7, lr}
 80015da:	b085      	sub	sp, #20
 80015dc:	af00      	add	r7, sp, #0
 80015de:	4603      	mov	r3, r0
 80015e0:	6039      	str	r1, [r7, #0]
 80015e2:	71fb      	strb	r3, [r7, #7]
 80015e4:	4613      	mov	r3, r2
 80015e6:	71bb      	strb	r3, [r7, #6]
    I2C1_Start();
 80015e8:	f7ff feb4 	bl	8001354 <I2C1_Start>
    I2C1_SendAddress(BMP280_I2C_ADDR, false);
 80015ec:	2100      	movs	r1, #0
 80015ee:	2076      	movs	r0, #118	@ 0x76
 80015f0:	f7ff fec8 	bl	8001384 <I2C1_SendAddress>
    I2C1_SendData(reg);
 80015f4:	79fb      	ldrb	r3, [r7, #7]
 80015f6:	4618      	mov	r0, r3
 80015f8:	f7ff feec 	bl	80013d4 <I2C1_SendData>
    I2C1_Start(); // Repeated Start
 80015fc:	f7ff feaa 	bl	8001354 <I2C1_Start>
    I2C1_SendAddress(BMP280_I2C_ADDR, true);
 8001600:	2101      	movs	r1, #1
 8001602:	2076      	movs	r0, #118	@ 0x76
 8001604:	f7ff febe 	bl	8001384 <I2C1_SendAddress>

    for (uint8_t i = 0; i < length - 1; i++) {
 8001608:	2300      	movs	r3, #0
 800160a:	73fb      	strb	r3, [r7, #15]
 800160c:	e00b      	b.n	8001626 <BMP280_ReadRegister+0x4e>
        I2C1_EnableACK();
 800160e:	f7ff fef9 	bl	8001404 <I2C1_EnableACK>
        data[i] = I2C1_ReadData();
 8001612:	7bfb      	ldrb	r3, [r7, #15]
 8001614:	683a      	ldr	r2, [r7, #0]
 8001616:	18d4      	adds	r4, r2, r3
 8001618:	f7ff ff18 	bl	800144c <I2C1_ReadData>
 800161c:	4603      	mov	r3, r0
 800161e:	7023      	strb	r3, [r4, #0]
    for (uint8_t i = 0; i < length - 1; i++) {
 8001620:	7bfb      	ldrb	r3, [r7, #15]
 8001622:	3301      	adds	r3, #1
 8001624:	73fb      	strb	r3, [r7, #15]
 8001626:	7bfa      	ldrb	r2, [r7, #15]
 8001628:	79bb      	ldrb	r3, [r7, #6]
 800162a:	3b01      	subs	r3, #1
 800162c:	429a      	cmp	r2, r3
 800162e:	dbee      	blt.n	800160e <BMP280_ReadRegister+0x36>
    }

    I2C1_DisableACK();
 8001630:	f7ff fefa 	bl	8001428 <I2C1_DisableACK>
    data[length - 1] = I2C1_ReadData();
 8001634:	79bb      	ldrb	r3, [r7, #6]
 8001636:	3b01      	subs	r3, #1
 8001638:	683a      	ldr	r2, [r7, #0]
 800163a:	18d4      	adds	r4, r2, r3
 800163c:	f7ff ff06 	bl	800144c <I2C1_ReadData>
 8001640:	4603      	mov	r3, r0
 8001642:	7023      	strb	r3, [r4, #0]
    I2C1_Stop();
 8001644:	f7ff ff18 	bl	8001478 <I2C1_Stop>
}
 8001648:	bf00      	nop
 800164a:	3714      	adds	r7, #20
 800164c:	46bd      	mov	sp, r7
 800164e:	bd90      	pop	{r4, r7, pc}

08001650 <BMP280_WriteRegister>:

// Function to write a byte to BMP280
static void BMP280_WriteRegister(uint8_t reg, uint8_t value)
{
 8001650:	b580      	push	{r7, lr}
 8001652:	b082      	sub	sp, #8
 8001654:	af00      	add	r7, sp, #0
 8001656:	4603      	mov	r3, r0
 8001658:	460a      	mov	r2, r1
 800165a:	71fb      	strb	r3, [r7, #7]
 800165c:	4613      	mov	r3, r2
 800165e:	71bb      	strb	r3, [r7, #6]
    I2C1_Start();
 8001660:	f7ff fe78 	bl	8001354 <I2C1_Start>
    I2C1_SendAddress(BMP280_I2C_ADDR, false);
 8001664:	2100      	movs	r1, #0
 8001666:	2076      	movs	r0, #118	@ 0x76
 8001668:	f7ff fe8c 	bl	8001384 <I2C1_SendAddress>
    I2C1_SendData(reg);
 800166c:	79fb      	ldrb	r3, [r7, #7]
 800166e:	4618      	mov	r0, r3
 8001670:	f7ff feb0 	bl	80013d4 <I2C1_SendData>
    I2C1_SendData(value);
 8001674:	79bb      	ldrb	r3, [r7, #6]
 8001676:	4618      	mov	r0, r3
 8001678:	f7ff feac 	bl	80013d4 <I2C1_SendData>
    I2C1_Stop();
 800167c:	f7ff fefc 	bl	8001478 <I2C1_Stop>
}
 8001680:	bf00      	nop
 8001682:	3708      	adds	r7, #8
 8001684:	46bd      	mov	sp, r7
 8001686:	bd80      	pop	{r7, pc}

08001688 <BMP280_ReadCalibrationData>:

// Function to read the BMP280 calibration data
static void BMP280_ReadCalibrationData(void)
{
 8001688:	b580      	push	{r7, lr}
 800168a:	b086      	sub	sp, #24
 800168c:	af00      	add	r7, sp, #0
    uint8_t calib[24];
    BMP280_ReadRegister(BMP280_REG_CALIB, calib, 24);
 800168e:	463b      	mov	r3, r7
 8001690:	2218      	movs	r2, #24
 8001692:	4619      	mov	r1, r3
 8001694:	2088      	movs	r0, #136	@ 0x88
 8001696:	f7ff ff9f 	bl	80015d8 <BMP280_ReadRegister>

    bmp280_calib.dig_T1 = (calib[1] << 8) | calib[0];
 800169a:	787b      	ldrb	r3, [r7, #1]
 800169c:	021b      	lsls	r3, r3, #8
 800169e:	b21a      	sxth	r2, r3
 80016a0:	783b      	ldrb	r3, [r7, #0]
 80016a2:	b21b      	sxth	r3, r3
 80016a4:	4313      	orrs	r3, r2
 80016a6:	b21b      	sxth	r3, r3
 80016a8:	b29a      	uxth	r2, r3
 80016aa:	4b35      	ldr	r3, [pc, #212]	@ (8001780 <BMP280_ReadCalibrationData+0xf8>)
 80016ac:	801a      	strh	r2, [r3, #0]
    bmp280_calib.dig_T2 = (calib[3] << 8) | calib[2];
 80016ae:	78fb      	ldrb	r3, [r7, #3]
 80016b0:	021b      	lsls	r3, r3, #8
 80016b2:	b21a      	sxth	r2, r3
 80016b4:	78bb      	ldrb	r3, [r7, #2]
 80016b6:	b21b      	sxth	r3, r3
 80016b8:	4313      	orrs	r3, r2
 80016ba:	b21a      	sxth	r2, r3
 80016bc:	4b30      	ldr	r3, [pc, #192]	@ (8001780 <BMP280_ReadCalibrationData+0xf8>)
 80016be:	805a      	strh	r2, [r3, #2]
    bmp280_calib.dig_T3 = (calib[5] << 8) | calib[4];
 80016c0:	797b      	ldrb	r3, [r7, #5]
 80016c2:	021b      	lsls	r3, r3, #8
 80016c4:	b21a      	sxth	r2, r3
 80016c6:	793b      	ldrb	r3, [r7, #4]
 80016c8:	b21b      	sxth	r3, r3
 80016ca:	4313      	orrs	r3, r2
 80016cc:	b21a      	sxth	r2, r3
 80016ce:	4b2c      	ldr	r3, [pc, #176]	@ (8001780 <BMP280_ReadCalibrationData+0xf8>)
 80016d0:	809a      	strh	r2, [r3, #4]
    bmp280_calib.dig_P1 = (calib[7] << 8) | calib[6];
 80016d2:	79fb      	ldrb	r3, [r7, #7]
 80016d4:	021b      	lsls	r3, r3, #8
 80016d6:	b21a      	sxth	r2, r3
 80016d8:	79bb      	ldrb	r3, [r7, #6]
 80016da:	b21b      	sxth	r3, r3
 80016dc:	4313      	orrs	r3, r2
 80016de:	b21b      	sxth	r3, r3
 80016e0:	b29a      	uxth	r2, r3
 80016e2:	4b27      	ldr	r3, [pc, #156]	@ (8001780 <BMP280_ReadCalibrationData+0xf8>)
 80016e4:	80da      	strh	r2, [r3, #6]
    bmp280_calib.dig_P2 = (calib[9] << 8) | calib[8];
 80016e6:	7a7b      	ldrb	r3, [r7, #9]
 80016e8:	021b      	lsls	r3, r3, #8
 80016ea:	b21a      	sxth	r2, r3
 80016ec:	7a3b      	ldrb	r3, [r7, #8]
 80016ee:	b21b      	sxth	r3, r3
 80016f0:	4313      	orrs	r3, r2
 80016f2:	b21a      	sxth	r2, r3
 80016f4:	4b22      	ldr	r3, [pc, #136]	@ (8001780 <BMP280_ReadCalibrationData+0xf8>)
 80016f6:	811a      	strh	r2, [r3, #8]
    bmp280_calib.dig_P3 = (calib[11] << 8) | calib[10];
 80016f8:	7afb      	ldrb	r3, [r7, #11]
 80016fa:	021b      	lsls	r3, r3, #8
 80016fc:	b21a      	sxth	r2, r3
 80016fe:	7abb      	ldrb	r3, [r7, #10]
 8001700:	b21b      	sxth	r3, r3
 8001702:	4313      	orrs	r3, r2
 8001704:	b21a      	sxth	r2, r3
 8001706:	4b1e      	ldr	r3, [pc, #120]	@ (8001780 <BMP280_ReadCalibrationData+0xf8>)
 8001708:	815a      	strh	r2, [r3, #10]
    bmp280_calib.dig_P4 = (calib[13] << 8) | calib[12];
 800170a:	7b7b      	ldrb	r3, [r7, #13]
 800170c:	021b      	lsls	r3, r3, #8
 800170e:	b21a      	sxth	r2, r3
 8001710:	7b3b      	ldrb	r3, [r7, #12]
 8001712:	b21b      	sxth	r3, r3
 8001714:	4313      	orrs	r3, r2
 8001716:	b21a      	sxth	r2, r3
 8001718:	4b19      	ldr	r3, [pc, #100]	@ (8001780 <BMP280_ReadCalibrationData+0xf8>)
 800171a:	819a      	strh	r2, [r3, #12]
    bmp280_calib.dig_P5 = (calib[15] << 8) | calib[14];
 800171c:	7bfb      	ldrb	r3, [r7, #15]
 800171e:	021b      	lsls	r3, r3, #8
 8001720:	b21a      	sxth	r2, r3
 8001722:	7bbb      	ldrb	r3, [r7, #14]
 8001724:	b21b      	sxth	r3, r3
 8001726:	4313      	orrs	r3, r2
 8001728:	b21a      	sxth	r2, r3
 800172a:	4b15      	ldr	r3, [pc, #84]	@ (8001780 <BMP280_ReadCalibrationData+0xf8>)
 800172c:	81da      	strh	r2, [r3, #14]
    bmp280_calib.dig_P6 = (calib[17] << 8) | calib[16];
 800172e:	7c7b      	ldrb	r3, [r7, #17]
 8001730:	021b      	lsls	r3, r3, #8
 8001732:	b21a      	sxth	r2, r3
 8001734:	7c3b      	ldrb	r3, [r7, #16]
 8001736:	b21b      	sxth	r3, r3
 8001738:	4313      	orrs	r3, r2
 800173a:	b21a      	sxth	r2, r3
 800173c:	4b10      	ldr	r3, [pc, #64]	@ (8001780 <BMP280_ReadCalibrationData+0xf8>)
 800173e:	821a      	strh	r2, [r3, #16]
    bmp280_calib.dig_P7 = (calib[19] << 8) | calib[18];
 8001740:	7cfb      	ldrb	r3, [r7, #19]
 8001742:	021b      	lsls	r3, r3, #8
 8001744:	b21a      	sxth	r2, r3
 8001746:	7cbb      	ldrb	r3, [r7, #18]
 8001748:	b21b      	sxth	r3, r3
 800174a:	4313      	orrs	r3, r2
 800174c:	b21a      	sxth	r2, r3
 800174e:	4b0c      	ldr	r3, [pc, #48]	@ (8001780 <BMP280_ReadCalibrationData+0xf8>)
 8001750:	825a      	strh	r2, [r3, #18]
    bmp280_calib.dig_P8 = (calib[21] << 8) | calib[20];
 8001752:	7d7b      	ldrb	r3, [r7, #21]
 8001754:	021b      	lsls	r3, r3, #8
 8001756:	b21a      	sxth	r2, r3
 8001758:	7d3b      	ldrb	r3, [r7, #20]
 800175a:	b21b      	sxth	r3, r3
 800175c:	4313      	orrs	r3, r2
 800175e:	b21a      	sxth	r2, r3
 8001760:	4b07      	ldr	r3, [pc, #28]	@ (8001780 <BMP280_ReadCalibrationData+0xf8>)
 8001762:	829a      	strh	r2, [r3, #20]
    bmp280_calib.dig_P9 = (calib[23] << 8) | calib[22];
 8001764:	7dfb      	ldrb	r3, [r7, #23]
 8001766:	021b      	lsls	r3, r3, #8
 8001768:	b21a      	sxth	r2, r3
 800176a:	7dbb      	ldrb	r3, [r7, #22]
 800176c:	b21b      	sxth	r3, r3
 800176e:	4313      	orrs	r3, r2
 8001770:	b21a      	sxth	r2, r3
 8001772:	4b03      	ldr	r3, [pc, #12]	@ (8001780 <BMP280_ReadCalibrationData+0xf8>)
 8001774:	82da      	strh	r2, [r3, #22]
}
 8001776:	bf00      	nop
 8001778:	3718      	adds	r7, #24
 800177a:	46bd      	mov	sp, r7
 800177c:	bd80      	pop	{r7, pc}
 800177e:	bf00      	nop
 8001780:	200001f0 	.word	0x200001f0

08001784 <BMP280_Init>:

// Function to initialize BMP280
bool BMP280_Init(void)
{
 8001784:	b580      	push	{r7, lr}
 8001786:	b082      	sub	sp, #8
 8001788:	af00      	add	r7, sp, #0
    uint8_t id;
    BMP280_ReadRegister(BMP280_REG_ID, &id, 1);
 800178a:	1dfb      	adds	r3, r7, #7
 800178c:	2201      	movs	r2, #1
 800178e:	4619      	mov	r1, r3
 8001790:	20d0      	movs	r0, #208	@ 0xd0
 8001792:	f7ff ff21 	bl	80015d8 <BMP280_ReadRegister>

    if (id != 0x58) { // BMP280 should return ID = 0x58
 8001796:	79fb      	ldrb	r3, [r7, #7]
 8001798:	2b58      	cmp	r3, #88	@ 0x58
 800179a:	d001      	beq.n	80017a0 <BMP280_Init+0x1c>
        return false;
 800179c:	2300      	movs	r3, #0
 800179e:	e00a      	b.n	80017b6 <BMP280_Init+0x32>
    }

    BMP280_ReadCalibrationData();
 80017a0:	f7ff ff72 	bl	8001688 <BMP280_ReadCalibrationData>

    // Set mode to Normal, Temperature oversampling x1, Pressure oversampling x1
    BMP280_WriteRegister(BMP280_REG_CTRL_MEAS, 0x27);
 80017a4:	2127      	movs	r1, #39	@ 0x27
 80017a6:	20f4      	movs	r0, #244	@ 0xf4
 80017a8:	f7ff ff52 	bl	8001650 <BMP280_WriteRegister>

    // Set standby time to 0.5ms, IIR filter off
    BMP280_WriteRegister(BMP280_REG_CONFIG, 0x00);
 80017ac:	2100      	movs	r1, #0
 80017ae:	20f5      	movs	r0, #245	@ 0xf5
 80017b0:	f7ff ff4e 	bl	8001650 <BMP280_WriteRegister>

    return true;
 80017b4:	2301      	movs	r3, #1
}
 80017b6:	4618      	mov	r0, r3
 80017b8:	3708      	adds	r7, #8
 80017ba:	46bd      	mov	sp, r7
 80017bc:	bd80      	pop	{r7, pc}

080017be <BMP280_ReadRawTemperature>:

// Function to read raw temperature data
static int32_t BMP280_ReadRawTemperature(void)
{
 80017be:	b580      	push	{r7, lr}
 80017c0:	b082      	sub	sp, #8
 80017c2:	af00      	add	r7, sp, #0
    uint8_t data[3];
    BMP280_ReadRegister(BMP280_REG_TEMP_MSB, data, 3);
 80017c4:	1d3b      	adds	r3, r7, #4
 80017c6:	2203      	movs	r2, #3
 80017c8:	4619      	mov	r1, r3
 80017ca:	20fa      	movs	r0, #250	@ 0xfa
 80017cc:	f7ff ff04 	bl	80015d8 <BMP280_ReadRegister>
    return (int32_t)((data[0] << 16) | (data[1] << 8) | data[2]) >> 4;
 80017d0:	793b      	ldrb	r3, [r7, #4]
 80017d2:	041a      	lsls	r2, r3, #16
 80017d4:	797b      	ldrb	r3, [r7, #5]
 80017d6:	021b      	lsls	r3, r3, #8
 80017d8:	4313      	orrs	r3, r2
 80017da:	79ba      	ldrb	r2, [r7, #6]
 80017dc:	4313      	orrs	r3, r2
 80017de:	111b      	asrs	r3, r3, #4
}
 80017e0:	4618      	mov	r0, r3
 80017e2:	3708      	adds	r7, #8
 80017e4:	46bd      	mov	sp, r7
 80017e6:	bd80      	pop	{r7, pc}

080017e8 <BMP280_ReadRawPressure>:

// Function to read raw pressure data
static int32_t BMP280_ReadRawPressure(void)
{
 80017e8:	b580      	push	{r7, lr}
 80017ea:	b082      	sub	sp, #8
 80017ec:	af00      	add	r7, sp, #0
    uint8_t data[3];
    BMP280_ReadRegister(BMP280_REG_PRESS_MSB, data, 3);
 80017ee:	1d3b      	adds	r3, r7, #4
 80017f0:	2203      	movs	r2, #3
 80017f2:	4619      	mov	r1, r3
 80017f4:	20f7      	movs	r0, #247	@ 0xf7
 80017f6:	f7ff feef 	bl	80015d8 <BMP280_ReadRegister>
    return (int32_t)((data[0] << 16) | (data[1] << 8) | data[2]) >> 4;
 80017fa:	793b      	ldrb	r3, [r7, #4]
 80017fc:	041a      	lsls	r2, r3, #16
 80017fe:	797b      	ldrb	r3, [r7, #5]
 8001800:	021b      	lsls	r3, r3, #8
 8001802:	4313      	orrs	r3, r2
 8001804:	79ba      	ldrb	r2, [r7, #6]
 8001806:	4313      	orrs	r3, r2
 8001808:	111b      	asrs	r3, r3, #4
}
 800180a:	4618      	mov	r0, r3
 800180c:	3708      	adds	r7, #8
 800180e:	46bd      	mov	sp, r7
 8001810:	bd80      	pop	{r7, pc}
	...

08001814 <BMP280_CompensateTemperature>:

// Function to compensate temperature
static float BMP280_CompensateTemperature(int32_t raw_temp)
{
 8001814:	b480      	push	{r7}
 8001816:	b085      	sub	sp, #20
 8001818:	af00      	add	r7, sp, #0
 800181a:	6078      	str	r0, [r7, #4]
    int32_t var1, var2;
    var1 = ((((raw_temp >> 3) - ((int32_t)bmp280_calib.dig_T1 << 1))) * ((int32_t)bmp280_calib.dig_T2)) >> 11;
 800181c:	687b      	ldr	r3, [r7, #4]
 800181e:	10da      	asrs	r2, r3, #3
 8001820:	4b1d      	ldr	r3, [pc, #116]	@ (8001898 <BMP280_CompensateTemperature+0x84>)
 8001822:	881b      	ldrh	r3, [r3, #0]
 8001824:	005b      	lsls	r3, r3, #1
 8001826:	1ad3      	subs	r3, r2, r3
 8001828:	4a1b      	ldr	r2, [pc, #108]	@ (8001898 <BMP280_CompensateTemperature+0x84>)
 800182a:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 800182e:	fb02 f303 	mul.w	r3, r2, r3
 8001832:	12db      	asrs	r3, r3, #11
 8001834:	60fb      	str	r3, [r7, #12]
    var2 = (((((raw_temp >> 4) - ((int32_t)bmp280_calib.dig_T1)) * ((raw_temp >> 4) - ((int32_t)bmp280_calib.dig_T1))) >> 12) * ((int32_t)bmp280_calib.dig_T3)) >> 14;
 8001836:	687b      	ldr	r3, [r7, #4]
 8001838:	111b      	asrs	r3, r3, #4
 800183a:	4a17      	ldr	r2, [pc, #92]	@ (8001898 <BMP280_CompensateTemperature+0x84>)
 800183c:	8812      	ldrh	r2, [r2, #0]
 800183e:	1a9b      	subs	r3, r3, r2
 8001840:	687a      	ldr	r2, [r7, #4]
 8001842:	1112      	asrs	r2, r2, #4
 8001844:	4914      	ldr	r1, [pc, #80]	@ (8001898 <BMP280_CompensateTemperature+0x84>)
 8001846:	8809      	ldrh	r1, [r1, #0]
 8001848:	1a52      	subs	r2, r2, r1
 800184a:	fb02 f303 	mul.w	r3, r2, r3
 800184e:	131b      	asrs	r3, r3, #12
 8001850:	4a11      	ldr	r2, [pc, #68]	@ (8001898 <BMP280_CompensateTemperature+0x84>)
 8001852:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 8001856:	fb02 f303 	mul.w	r3, r2, r3
 800185a:	139b      	asrs	r3, r3, #14
 800185c:	60bb      	str	r3, [r7, #8]
    t_fine = var1 + var2;
 800185e:	68fa      	ldr	r2, [r7, #12]
 8001860:	68bb      	ldr	r3, [r7, #8]
 8001862:	4413      	add	r3, r2
 8001864:	4a0d      	ldr	r2, [pc, #52]	@ (800189c <BMP280_CompensateTemperature+0x88>)
 8001866:	6013      	str	r3, [r2, #0]
    return (float)((t_fine * 5 + 128) >> 8) / 100.0f;
 8001868:	4b0c      	ldr	r3, [pc, #48]	@ (800189c <BMP280_CompensateTemperature+0x88>)
 800186a:	681a      	ldr	r2, [r3, #0]
 800186c:	4613      	mov	r3, r2
 800186e:	009b      	lsls	r3, r3, #2
 8001870:	4413      	add	r3, r2
 8001872:	3380      	adds	r3, #128	@ 0x80
 8001874:	121b      	asrs	r3, r3, #8
 8001876:	ee07 3a90 	vmov	s15, r3
 800187a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800187e:	ed9f 7a08 	vldr	s14, [pc, #32]	@ 80018a0 <BMP280_CompensateTemperature+0x8c>
 8001882:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8001886:	eef0 7a66 	vmov.f32	s15, s13
}
 800188a:	eeb0 0a67 	vmov.f32	s0, s15
 800188e:	3714      	adds	r7, #20
 8001890:	46bd      	mov	sp, r7
 8001892:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001896:	4770      	bx	lr
 8001898:	200001f0 	.word	0x200001f0
 800189c:	20000208 	.word	0x20000208
 80018a0:	42c80000 	.word	0x42c80000

080018a4 <BMP280_CompensatePressure>:

// Function to compensate pressure
static float BMP280_CompensatePressure(int32_t raw_pressure)
{
 80018a4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80018a8:	b0c6      	sub	sp, #280	@ 0x118
 80018aa:	af00      	add	r7, sp, #0
 80018ac:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
    int64_t var1, var2, p;
    var1 = ((int64_t)t_fine) - 128000;
 80018b0:	4bae      	ldr	r3, [pc, #696]	@ (8001b6c <BMP280_CompensatePressure+0x2c8>)
 80018b2:	681b      	ldr	r3, [r3, #0]
 80018b4:	17da      	asrs	r2, r3, #31
 80018b6:	461c      	mov	r4, r3
 80018b8:	4615      	mov	r5, r2
 80018ba:	f5b4 3afa 	subs.w	sl, r4, #128000	@ 0x1f400
 80018be:	f145 3bff 	adc.w	fp, r5, #4294967295
 80018c2:	e9c7 ab44 	strd	sl, fp, [r7, #272]	@ 0x110
    var2 = var1 * var1 * (int64_t)bmp280_calib.dig_P6;
 80018c6:	f8d7 2114 	ldr.w	r2, [r7, #276]	@ 0x114
 80018ca:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 80018ce:	fb03 f102 	mul.w	r1, r3, r2
 80018d2:	f8d7 2114 	ldr.w	r2, [r7, #276]	@ 0x114
 80018d6:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 80018da:	fb02 f303 	mul.w	r3, r2, r3
 80018de:	18ca      	adds	r2, r1, r3
 80018e0:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 80018e4:	fba3 8903 	umull	r8, r9, r3, r3
 80018e8:	eb02 0309 	add.w	r3, r2, r9
 80018ec:	4699      	mov	r9, r3
 80018ee:	4ba0      	ldr	r3, [pc, #640]	@ (8001b70 <BMP280_CompensatePressure+0x2cc>)
 80018f0:	f9b3 3010 	ldrsh.w	r3, [r3, #16]
 80018f4:	b21b      	sxth	r3, r3
 80018f6:	17da      	asrs	r2, r3, #31
 80018f8:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80018fc:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8001900:	e9d7 012a 	ldrd	r0, r1, [r7, #168]	@ 0xa8
 8001904:	4603      	mov	r3, r0
 8001906:	fb03 f209 	mul.w	r2, r3, r9
 800190a:	460b      	mov	r3, r1
 800190c:	fb08 f303 	mul.w	r3, r8, r3
 8001910:	4413      	add	r3, r2
 8001912:	4602      	mov	r2, r0
 8001914:	fba8 1202 	umull	r1, r2, r8, r2
 8001918:	f8c7 20b4 	str.w	r2, [r7, #180]	@ 0xb4
 800191c:	460a      	mov	r2, r1
 800191e:	f8c7 20b0 	str.w	r2, [r7, #176]	@ 0xb0
 8001922:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8001926:	4413      	add	r3, r2
 8001928:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800192c:	e9d7 342c 	ldrd	r3, r4, [r7, #176]	@ 0xb0
 8001930:	e9c7 3442 	strd	r3, r4, [r7, #264]	@ 0x108
 8001934:	e9c7 3442 	strd	r3, r4, [r7, #264]	@ 0x108
    var2 += ((var1 * (int64_t)bmp280_calib.dig_P5) << 17);
 8001938:	4b8d      	ldr	r3, [pc, #564]	@ (8001b70 <BMP280_CompensatePressure+0x2cc>)
 800193a:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 800193e:	b21b      	sxth	r3, r3
 8001940:	17da      	asrs	r2, r3, #31
 8001942:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8001946:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 800194a:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 800194e:	e9d7 4528 	ldrd	r4, r5, [r7, #160]	@ 0xa0
 8001952:	462a      	mov	r2, r5
 8001954:	fb02 f203 	mul.w	r2, r2, r3
 8001958:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800195c:	4621      	mov	r1, r4
 800195e:	fb01 f303 	mul.w	r3, r1, r3
 8001962:	441a      	add	r2, r3
 8001964:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 8001968:	4621      	mov	r1, r4
 800196a:	fba3 1301 	umull	r1, r3, r3, r1
 800196e:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 8001972:	460b      	mov	r3, r1
 8001974:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 8001978:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800197c:	18d3      	adds	r3, r2, r3
 800197e:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 8001982:	f04f 0000 	mov.w	r0, #0
 8001986:	f04f 0100 	mov.w	r1, #0
 800198a:	e9d7 453c 	ldrd	r4, r5, [r7, #240]	@ 0xf0
 800198e:	462b      	mov	r3, r5
 8001990:	0459      	lsls	r1, r3, #17
 8001992:	4623      	mov	r3, r4
 8001994:	ea41 31d3 	orr.w	r1, r1, r3, lsr #15
 8001998:	4623      	mov	r3, r4
 800199a:	0458      	lsls	r0, r3, #17
 800199c:	e9d7 2342 	ldrd	r2, r3, [r7, #264]	@ 0x108
 80019a0:	1814      	adds	r4, r2, r0
 80019a2:	63bc      	str	r4, [r7, #56]	@ 0x38
 80019a4:	414b      	adcs	r3, r1
 80019a6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80019a8:	e9d7 340e 	ldrd	r3, r4, [r7, #56]	@ 0x38
 80019ac:	e9c7 3442 	strd	r3, r4, [r7, #264]	@ 0x108
    var2 += (((int64_t)bmp280_calib.dig_P4) << 35);
 80019b0:	4b6f      	ldr	r3, [pc, #444]	@ (8001b70 <BMP280_CompensatePressure+0x2cc>)
 80019b2:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 80019b6:	b21b      	sxth	r3, r3
 80019b8:	17da      	asrs	r2, r3, #31
 80019ba:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80019be:	f8c7 209c 	str.w	r2, [r7, #156]	@ 0x9c
 80019c2:	f04f 0000 	mov.w	r0, #0
 80019c6:	f04f 0100 	mov.w	r1, #0
 80019ca:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80019ce:	00d9      	lsls	r1, r3, #3
 80019d0:	2000      	movs	r0, #0
 80019d2:	e9d7 2342 	ldrd	r2, r3, [r7, #264]	@ 0x108
 80019d6:	1814      	adds	r4, r2, r0
 80019d8:	633c      	str	r4, [r7, #48]	@ 0x30
 80019da:	414b      	adcs	r3, r1
 80019dc:	637b      	str	r3, [r7, #52]	@ 0x34
 80019de:	e9d7 340c 	ldrd	r3, r4, [r7, #48]	@ 0x30
 80019e2:	e9c7 3442 	strd	r3, r4, [r7, #264]	@ 0x108
    var1 = ((var1 * var1 * (int64_t)bmp280_calib.dig_P3) >> 8) + ((var1 * (int64_t)bmp280_calib.dig_P2) << 12);
 80019e6:	f8d7 2114 	ldr.w	r2, [r7, #276]	@ 0x114
 80019ea:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 80019ee:	fb03 f102 	mul.w	r1, r3, r2
 80019f2:	f8d7 2114 	ldr.w	r2, [r7, #276]	@ 0x114
 80019f6:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 80019fa:	fb02 f303 	mul.w	r3, r2, r3
 80019fe:	18ca      	adds	r2, r1, r3
 8001a00:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 8001a04:	fba3 1303 	umull	r1, r3, r3, r3
 8001a08:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 8001a0c:	460b      	mov	r3, r1
 8001a0e:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8001a12:	f8d7 30ec 	ldr.w	r3, [r7, #236]	@ 0xec
 8001a16:	18d3      	adds	r3, r2, r3
 8001a18:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 8001a1c:	4b54      	ldr	r3, [pc, #336]	@ (8001b70 <BMP280_CompensatePressure+0x2cc>)
 8001a1e:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8001a22:	b21b      	sxth	r3, r3
 8001a24:	17da      	asrs	r2, r3, #31
 8001a26:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8001a2a:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8001a2e:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8001a32:	462b      	mov	r3, r5
 8001a34:	e9d7 8924 	ldrd	r8, r9, [r7, #144]	@ 0x90
 8001a38:	4642      	mov	r2, r8
 8001a3a:	fb02 f203 	mul.w	r2, r2, r3
 8001a3e:	464b      	mov	r3, r9
 8001a40:	4621      	mov	r1, r4
 8001a42:	fb01 f303 	mul.w	r3, r1, r3
 8001a46:	4413      	add	r3, r2
 8001a48:	4622      	mov	r2, r4
 8001a4a:	4641      	mov	r1, r8
 8001a4c:	fba2 1201 	umull	r1, r2, r2, r1
 8001a50:	f8c7 20e4 	str.w	r2, [r7, #228]	@ 0xe4
 8001a54:	460a      	mov	r2, r1
 8001a56:	f8c7 20e0 	str.w	r2, [r7, #224]	@ 0xe0
 8001a5a:	f8d7 20e4 	ldr.w	r2, [r7, #228]	@ 0xe4
 8001a5e:	4413      	add	r3, r2
 8001a60:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8001a64:	f04f 0000 	mov.w	r0, #0
 8001a68:	f04f 0100 	mov.w	r1, #0
 8001a6c:	e9d7 4538 	ldrd	r4, r5, [r7, #224]	@ 0xe0
 8001a70:	4623      	mov	r3, r4
 8001a72:	0a18      	lsrs	r0, r3, #8
 8001a74:	462b      	mov	r3, r5
 8001a76:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
 8001a7a:	462b      	mov	r3, r5
 8001a7c:	1219      	asrs	r1, r3, #8
 8001a7e:	4b3c      	ldr	r3, [pc, #240]	@ (8001b70 <BMP280_CompensatePressure+0x2cc>)
 8001a80:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8001a84:	b21b      	sxth	r3, r3
 8001a86:	17da      	asrs	r2, r3, #31
 8001a88:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8001a8c:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8001a90:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 8001a94:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8001a98:	464a      	mov	r2, r9
 8001a9a:	fb02 f203 	mul.w	r2, r2, r3
 8001a9e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8001aa2:	4644      	mov	r4, r8
 8001aa4:	fb04 f303 	mul.w	r3, r4, r3
 8001aa8:	441a      	add	r2, r3
 8001aaa:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 8001aae:	4644      	mov	r4, r8
 8001ab0:	fba3 4304 	umull	r4, r3, r3, r4
 8001ab4:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8001ab8:	4623      	mov	r3, r4
 8001aba:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8001abe:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8001ac2:	18d3      	adds	r3, r2, r3
 8001ac4:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8001ac8:	f04f 0200 	mov.w	r2, #0
 8001acc:	f04f 0300 	mov.w	r3, #0
 8001ad0:	e9d7 8936 	ldrd	r8, r9, [r7, #216]	@ 0xd8
 8001ad4:	464c      	mov	r4, r9
 8001ad6:	0323      	lsls	r3, r4, #12
 8001ad8:	4644      	mov	r4, r8
 8001ada:	ea43 5314 	orr.w	r3, r3, r4, lsr #20
 8001ade:	4644      	mov	r4, r8
 8001ae0:	0322      	lsls	r2, r4, #12
 8001ae2:	1884      	adds	r4, r0, r2
 8001ae4:	62bc      	str	r4, [r7, #40]	@ 0x28
 8001ae6:	eb41 0303 	adc.w	r3, r1, r3
 8001aea:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001aec:	e9d7 340a 	ldrd	r3, r4, [r7, #40]	@ 0x28
 8001af0:	e9c7 3444 	strd	r3, r4, [r7, #272]	@ 0x110
    var1 = (((((int64_t)1) << 47) + var1)) * ((int64_t)bmp280_calib.dig_P1) >> 33;
 8001af4:	e9d7 2344 	ldrd	r2, r3, [r7, #272]	@ 0x110
 8001af8:	f503 4100 	add.w	r1, r3, #32768	@ 0x8000
 8001afc:	f8c7 1084 	str.w	r1, [r7, #132]	@ 0x84
 8001b00:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8001b04:	4b1a      	ldr	r3, [pc, #104]	@ (8001b70 <BMP280_CompensatePressure+0x2cc>)
 8001b06:	88db      	ldrh	r3, [r3, #6]
 8001b08:	b29b      	uxth	r3, r3
 8001b0a:	2200      	movs	r2, #0
 8001b0c:	67bb      	str	r3, [r7, #120]	@ 0x78
 8001b0e:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8001b10:	e9d7 4520 	ldrd	r4, r5, [r7, #128]	@ 0x80
 8001b14:	462b      	mov	r3, r5
 8001b16:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8001b1a:	4642      	mov	r2, r8
 8001b1c:	fb02 f203 	mul.w	r2, r2, r3
 8001b20:	464b      	mov	r3, r9
 8001b22:	4621      	mov	r1, r4
 8001b24:	fb01 f303 	mul.w	r3, r1, r3
 8001b28:	4413      	add	r3, r2
 8001b2a:	4622      	mov	r2, r4
 8001b2c:	4641      	mov	r1, r8
 8001b2e:	fba2 1201 	umull	r1, r2, r2, r1
 8001b32:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8001b36:	460a      	mov	r2, r1
 8001b38:	f8c7 20d0 	str.w	r2, [r7, #208]	@ 0xd0
 8001b3c:	f8d7 20d4 	ldr.w	r2, [r7, #212]	@ 0xd4
 8001b40:	4413      	add	r3, r2
 8001b42:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8001b46:	f04f 0200 	mov.w	r2, #0
 8001b4a:	f04f 0300 	mov.w	r3, #0
 8001b4e:	e9d7 4534 	ldrd	r4, r5, [r7, #208]	@ 0xd0
 8001b52:	4629      	mov	r1, r5
 8001b54:	104a      	asrs	r2, r1, #1
 8001b56:	4629      	mov	r1, r5
 8001b58:	17cb      	asrs	r3, r1, #31
 8001b5a:	e9c7 2344 	strd	r2, r3, [r7, #272]	@ 0x110

    if (var1 == 0) return 0; // Avoid division by zero
 8001b5e:	e9d7 2344 	ldrd	r2, r3, [r7, #272]	@ 0x110
 8001b62:	4313      	orrs	r3, r2
 8001b64:	d108      	bne.n	8001b78 <BMP280_CompensatePressure+0x2d4>
 8001b66:	eddf 7a03 	vldr	s15, [pc, #12]	@ 8001b74 <BMP280_CompensatePressure+0x2d0>
 8001b6a:	e134      	b.n	8001dd6 <BMP280_CompensatePressure+0x532>
 8001b6c:	20000208 	.word	0x20000208
 8001b70:	200001f0 	.word	0x200001f0
 8001b74:	00000000 	.word	0x00000000

    p = 1048576 - raw_pressure;
 8001b78:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8001b7c:	f5c3 1380 	rsb	r3, r3, #1048576	@ 0x100000
 8001b80:	17da      	asrs	r2, r3, #31
 8001b82:	623b      	str	r3, [r7, #32]
 8001b84:	627a      	str	r2, [r7, #36]	@ 0x24
 8001b86:	e9d7 3408 	ldrd	r3, r4, [r7, #32]
 8001b8a:	e9c7 3440 	strd	r3, r4, [r7, #256]	@ 0x100
    p = (((p << 31) - var2) * 3125) / var1;
 8001b8e:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 8001b92:	105b      	asrs	r3, r3, #1
 8001b94:	677b      	str	r3, [r7, #116]	@ 0x74
 8001b96:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 8001b9a:	07db      	lsls	r3, r3, #31
 8001b9c:	673b      	str	r3, [r7, #112]	@ 0x70
 8001b9e:	e9d7 2342 	ldrd	r2, r3, [r7, #264]	@ 0x108
 8001ba2:	e9d7 451c 	ldrd	r4, r5, [r7, #112]	@ 0x70
 8001ba6:	4621      	mov	r1, r4
 8001ba8:	1a89      	subs	r1, r1, r2
 8001baa:	66b9      	str	r1, [r7, #104]	@ 0x68
 8001bac:	4629      	mov	r1, r5
 8001bae:	eb61 0303 	sbc.w	r3, r1, r3
 8001bb2:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8001bb4:	e9d7 451a 	ldrd	r4, r5, [r7, #104]	@ 0x68
 8001bb8:	4622      	mov	r2, r4
 8001bba:	462b      	mov	r3, r5
 8001bbc:	1891      	adds	r1, r2, r2
 8001bbe:	61b9      	str	r1, [r7, #24]
 8001bc0:	415b      	adcs	r3, r3
 8001bc2:	61fb      	str	r3, [r7, #28]
 8001bc4:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8001bc8:	4621      	mov	r1, r4
 8001bca:	1851      	adds	r1, r2, r1
 8001bcc:	6139      	str	r1, [r7, #16]
 8001bce:	4629      	mov	r1, r5
 8001bd0:	414b      	adcs	r3, r1
 8001bd2:	617b      	str	r3, [r7, #20]
 8001bd4:	f04f 0200 	mov.w	r2, #0
 8001bd8:	f04f 0300 	mov.w	r3, #0
 8001bdc:	e9d7 8904 	ldrd	r8, r9, [r7, #16]
 8001be0:	4649      	mov	r1, r9
 8001be2:	018b      	lsls	r3, r1, #6
 8001be4:	4641      	mov	r1, r8
 8001be6:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8001bea:	4641      	mov	r1, r8
 8001bec:	018a      	lsls	r2, r1, #6
 8001bee:	4641      	mov	r1, r8
 8001bf0:	1889      	adds	r1, r1, r2
 8001bf2:	60b9      	str	r1, [r7, #8]
 8001bf4:	4649      	mov	r1, r9
 8001bf6:	eb43 0101 	adc.w	r1, r3, r1
 8001bfa:	60f9      	str	r1, [r7, #12]
 8001bfc:	f04f 0200 	mov.w	r2, #0
 8001c00:	f04f 0300 	mov.w	r3, #0
 8001c04:	e9d7 8902 	ldrd	r8, r9, [r7, #8]
 8001c08:	4649      	mov	r1, r9
 8001c0a:	008b      	lsls	r3, r1, #2
 8001c0c:	4641      	mov	r1, r8
 8001c0e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8001c12:	4641      	mov	r1, r8
 8001c14:	008a      	lsls	r2, r1, #2
 8001c16:	4610      	mov	r0, r2
 8001c18:	4619      	mov	r1, r3
 8001c1a:	4603      	mov	r3, r0
 8001c1c:	4622      	mov	r2, r4
 8001c1e:	189b      	adds	r3, r3, r2
 8001c20:	603b      	str	r3, [r7, #0]
 8001c22:	460b      	mov	r3, r1
 8001c24:	462a      	mov	r2, r5
 8001c26:	eb42 0303 	adc.w	r3, r2, r3
 8001c2a:	607b      	str	r3, [r7, #4]
 8001c2c:	f04f 0200 	mov.w	r2, #0
 8001c30:	f04f 0300 	mov.w	r3, #0
 8001c34:	e9d7 8900 	ldrd	r8, r9, [r7]
 8001c38:	4649      	mov	r1, r9
 8001c3a:	008b      	lsls	r3, r1, #2
 8001c3c:	4641      	mov	r1, r8
 8001c3e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8001c42:	4641      	mov	r1, r8
 8001c44:	008a      	lsls	r2, r1, #2
 8001c46:	4610      	mov	r0, r2
 8001c48:	4619      	mov	r1, r3
 8001c4a:	4603      	mov	r3, r0
 8001c4c:	4622      	mov	r2, r4
 8001c4e:	189b      	adds	r3, r3, r2
 8001c50:	663b      	str	r3, [r7, #96]	@ 0x60
 8001c52:	462b      	mov	r3, r5
 8001c54:	460a      	mov	r2, r1
 8001c56:	eb42 0303 	adc.w	r3, r2, r3
 8001c5a:	667b      	str	r3, [r7, #100]	@ 0x64
 8001c5c:	e9d7 2344 	ldrd	r2, r3, [r7, #272]	@ 0x110
 8001c60:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 8001c64:	f7ff f8b6 	bl	8000dd4 <__aeabi_ldivmod>
 8001c68:	4602      	mov	r2, r0
 8001c6a:	460b      	mov	r3, r1
 8001c6c:	e9c7 2340 	strd	r2, r3, [r7, #256]	@ 0x100
    var1 = (((int64_t)bmp280_calib.dig_P9) * (p >> 13) * (p >> 13)) >> 25;
 8001c70:	4b5c      	ldr	r3, [pc, #368]	@ (8001de4 <BMP280_CompensatePressure+0x540>)
 8001c72:	f9b3 3016 	ldrsh.w	r3, [r3, #22]
 8001c76:	b21b      	sxth	r3, r3
 8001c78:	17da      	asrs	r2, r3, #31
 8001c7a:	65bb      	str	r3, [r7, #88]	@ 0x58
 8001c7c:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8001c7e:	e9d7 2340 	ldrd	r2, r3, [r7, #256]	@ 0x100
 8001c82:	f04f 0000 	mov.w	r0, #0
 8001c86:	f04f 0100 	mov.w	r1, #0
 8001c8a:	0b50      	lsrs	r0, r2, #13
 8001c8c:	ea40 40c3 	orr.w	r0, r0, r3, lsl #19
 8001c90:	1359      	asrs	r1, r3, #13
 8001c92:	e9d7 4516 	ldrd	r4, r5, [r7, #88]	@ 0x58
 8001c96:	462b      	mov	r3, r5
 8001c98:	fb00 f203 	mul.w	r2, r0, r3
 8001c9c:	4623      	mov	r3, r4
 8001c9e:	fb03 f301 	mul.w	r3, r3, r1
 8001ca2:	4413      	add	r3, r2
 8001ca4:	4622      	mov	r2, r4
 8001ca6:	fba2 1200 	umull	r1, r2, r2, r0
 8001caa:	f8c7 20cc 	str.w	r2, [r7, #204]	@ 0xcc
 8001cae:	460a      	mov	r2, r1
 8001cb0:	f8c7 20c8 	str.w	r2, [r7, #200]	@ 0xc8
 8001cb4:	f8d7 20cc 	ldr.w	r2, [r7, #204]	@ 0xcc
 8001cb8:	4413      	add	r3, r2
 8001cba:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8001cbe:	e9d7 0140 	ldrd	r0, r1, [r7, #256]	@ 0x100
 8001cc2:	f04f 0200 	mov.w	r2, #0
 8001cc6:	f04f 0300 	mov.w	r3, #0
 8001cca:	0b42      	lsrs	r2, r0, #13
 8001ccc:	ea42 42c1 	orr.w	r2, r2, r1, lsl #19
 8001cd0:	134b      	asrs	r3, r1, #13
 8001cd2:	e9d7 4532 	ldrd	r4, r5, [r7, #200]	@ 0xc8
 8001cd6:	4629      	mov	r1, r5
 8001cd8:	fb02 f001 	mul.w	r0, r2, r1
 8001cdc:	4621      	mov	r1, r4
 8001cde:	fb01 f103 	mul.w	r1, r1, r3
 8001ce2:	4401      	add	r1, r0
 8001ce4:	4620      	mov	r0, r4
 8001ce6:	fba0 2302 	umull	r2, r3, r0, r2
 8001cea:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8001cee:	4613      	mov	r3, r2
 8001cf0:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8001cf4:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8001cf8:	18cb      	adds	r3, r1, r3
 8001cfa:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8001cfe:	f04f 0200 	mov.w	r2, #0
 8001d02:	f04f 0300 	mov.w	r3, #0
 8001d06:	e9d7 4530 	ldrd	r4, r5, [r7, #192]	@ 0xc0
 8001d0a:	4621      	mov	r1, r4
 8001d0c:	0e4a      	lsrs	r2, r1, #25
 8001d0e:	4629      	mov	r1, r5
 8001d10:	ea42 12c1 	orr.w	r2, r2, r1, lsl #7
 8001d14:	4629      	mov	r1, r5
 8001d16:	164b      	asrs	r3, r1, #25
 8001d18:	e9c7 2344 	strd	r2, r3, [r7, #272]	@ 0x110
    var2 = (((int64_t)bmp280_calib.dig_P8) * p) >> 19;
 8001d1c:	4b31      	ldr	r3, [pc, #196]	@ (8001de4 <BMP280_CompensatePressure+0x540>)
 8001d1e:	f9b3 3014 	ldrsh.w	r3, [r3, #20]
 8001d22:	b21b      	sxth	r3, r3
 8001d24:	17da      	asrs	r2, r3, #31
 8001d26:	653b      	str	r3, [r7, #80]	@ 0x50
 8001d28:	657a      	str	r2, [r7, #84]	@ 0x54
 8001d2a:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 8001d2e:	e9d7 4514 	ldrd	r4, r5, [r7, #80]	@ 0x50
 8001d32:	462a      	mov	r2, r5
 8001d34:	fb02 f203 	mul.w	r2, r2, r3
 8001d38:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8001d3c:	4621      	mov	r1, r4
 8001d3e:	fb01 f303 	mul.w	r3, r1, r3
 8001d42:	4413      	add	r3, r2
 8001d44:	f8d7 2100 	ldr.w	r2, [r7, #256]	@ 0x100
 8001d48:	4621      	mov	r1, r4
 8001d4a:	fba2 1201 	umull	r1, r2, r2, r1
 8001d4e:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8001d52:	460a      	mov	r2, r1
 8001d54:	f8c7 20b8 	str.w	r2, [r7, #184]	@ 0xb8
 8001d58:	f8d7 20bc 	ldr.w	r2, [r7, #188]	@ 0xbc
 8001d5c:	4413      	add	r3, r2
 8001d5e:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 8001d62:	f04f 0200 	mov.w	r2, #0
 8001d66:	f04f 0300 	mov.w	r3, #0
 8001d6a:	e9d7 452e 	ldrd	r4, r5, [r7, #184]	@ 0xb8
 8001d6e:	4621      	mov	r1, r4
 8001d70:	0cca      	lsrs	r2, r1, #19
 8001d72:	4629      	mov	r1, r5
 8001d74:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
 8001d78:	4629      	mov	r1, r5
 8001d7a:	14cb      	asrs	r3, r1, #19
 8001d7c:	e9c7 2342 	strd	r2, r3, [r7, #264]	@ 0x108
    return ((p + var1 + var2) >> 8) / 256.0f;
 8001d80:	e9d7 0140 	ldrd	r0, r1, [r7, #256]	@ 0x100
 8001d84:	e9d7 2344 	ldrd	r2, r3, [r7, #272]	@ 0x110
 8001d88:	1884      	adds	r4, r0, r2
 8001d8a:	64bc      	str	r4, [r7, #72]	@ 0x48
 8001d8c:	eb41 0303 	adc.w	r3, r1, r3
 8001d90:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8001d92:	e9d7 2342 	ldrd	r2, r3, [r7, #264]	@ 0x108
 8001d96:	e9d7 4512 	ldrd	r4, r5, [r7, #72]	@ 0x48
 8001d9a:	4621      	mov	r1, r4
 8001d9c:	1889      	adds	r1, r1, r2
 8001d9e:	6439      	str	r1, [r7, #64]	@ 0x40
 8001da0:	4629      	mov	r1, r5
 8001da2:	eb43 0101 	adc.w	r1, r3, r1
 8001da6:	6479      	str	r1, [r7, #68]	@ 0x44
 8001da8:	f04f 0200 	mov.w	r2, #0
 8001dac:	f04f 0300 	mov.w	r3, #0
 8001db0:	e9d7 4510 	ldrd	r4, r5, [r7, #64]	@ 0x40
 8001db4:	4621      	mov	r1, r4
 8001db6:	0a0a      	lsrs	r2, r1, #8
 8001db8:	4629      	mov	r1, r5
 8001dba:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8001dbe:	4629      	mov	r1, r5
 8001dc0:	120b      	asrs	r3, r1, #8
 8001dc2:	4610      	mov	r0, r2
 8001dc4:	4619      	mov	r1, r3
 8001dc6:	f7fe ffc7 	bl	8000d58 <__aeabi_l2f>
 8001dca:	ee06 0a90 	vmov	s13, r0
 8001dce:	ed9f 7a06 	vldr	s14, [pc, #24]	@ 8001de8 <BMP280_CompensatePressure+0x544>
 8001dd2:	eec6 7a87 	vdiv.f32	s15, s13, s14
}
 8001dd6:	eeb0 0a67 	vmov.f32	s0, s15
 8001dda:	f507 778c 	add.w	r7, r7, #280	@ 0x118
 8001dde:	46bd      	mov	sp, r7
 8001de0:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8001de4:	200001f0 	.word	0x200001f0
 8001de8:	43800000 	.word	0x43800000

08001dec <BMP280_ReadTemperature>:

// Public functions to get temperature and pressure
bool BMP280_ReadTemperature(float* temperature)
{
 8001dec:	b580      	push	{r7, lr}
 8001dee:	b082      	sub	sp, #8
 8001df0:	af00      	add	r7, sp, #0
 8001df2:	6078      	str	r0, [r7, #4]
    *temperature = BMP280_CompensateTemperature(BMP280_ReadRawTemperature());
 8001df4:	f7ff fce3 	bl	80017be <BMP280_ReadRawTemperature>
 8001df8:	4603      	mov	r3, r0
 8001dfa:	4618      	mov	r0, r3
 8001dfc:	f7ff fd0a 	bl	8001814 <BMP280_CompensateTemperature>
 8001e00:	eef0 7a40 	vmov.f32	s15, s0
 8001e04:	687b      	ldr	r3, [r7, #4]
 8001e06:	edc3 7a00 	vstr	s15, [r3]
    return true;
 8001e0a:	2301      	movs	r3, #1
}
 8001e0c:	4618      	mov	r0, r3
 8001e0e:	3708      	adds	r7, #8
 8001e10:	46bd      	mov	sp, r7
 8001e12:	bd80      	pop	{r7, pc}

08001e14 <BMP280_ReadPressure>:

bool BMP280_ReadPressure(float* pressure)
{
 8001e14:	b580      	push	{r7, lr}
 8001e16:	b082      	sub	sp, #8
 8001e18:	af00      	add	r7, sp, #0
 8001e1a:	6078      	str	r0, [r7, #4]
    *pressure = BMP280_CompensatePressure(BMP280_ReadRawPressure());
 8001e1c:	f7ff fce4 	bl	80017e8 <BMP280_ReadRawPressure>
 8001e20:	4603      	mov	r3, r0
 8001e22:	4618      	mov	r0, r3
 8001e24:	f7ff fd3e 	bl	80018a4 <BMP280_CompensatePressure>
 8001e28:	eef0 7a40 	vmov.f32	s15, s0
 8001e2c:	687b      	ldr	r3, [r7, #4]
 8001e2e:	edc3 7a00 	vstr	s15, [r3]
    return true;
 8001e32:	2301      	movs	r3, #1
}
 8001e34:	4618      	mov	r0, r3
 8001e36:	3708      	adds	r7, #8
 8001e38:	46bd      	mov	sp, r7
 8001e3a:	bd80      	pop	{r7, pc}

08001e3c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001e3c:	480d      	ldr	r0, [pc, #52]	@ (8001e74 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001e3e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001e40:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001e44:	480c      	ldr	r0, [pc, #48]	@ (8001e78 <LoopForever+0x6>)
  ldr r1, =_edata
 8001e46:	490d      	ldr	r1, [pc, #52]	@ (8001e7c <LoopForever+0xa>)
  ldr r2, =_sidata
 8001e48:	4a0d      	ldr	r2, [pc, #52]	@ (8001e80 <LoopForever+0xe>)
  movs r3, #0
 8001e4a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001e4c:	e002      	b.n	8001e54 <LoopCopyDataInit>

08001e4e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001e4e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001e50:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001e52:	3304      	adds	r3, #4

08001e54 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001e54:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001e56:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001e58:	d3f9      	bcc.n	8001e4e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001e5a:	4a0a      	ldr	r2, [pc, #40]	@ (8001e84 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001e5c:	4c0a      	ldr	r4, [pc, #40]	@ (8001e88 <LoopForever+0x16>)
  movs r3, #0
 8001e5e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001e60:	e001      	b.n	8001e66 <LoopFillZerobss>

08001e62 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001e62:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001e64:	3204      	adds	r2, #4

08001e66 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001e66:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001e68:	d3fb      	bcc.n	8001e62 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8001e6a:	f000 fdc5 	bl	80029f8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001e6e:	f7ff f961 	bl	8001134 <main>

08001e72 <LoopForever>:

LoopForever:
  b LoopForever
 8001e72:	e7fe      	b.n	8001e72 <LoopForever>
  ldr   r0, =_estack
 8001e74:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8001e78:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001e7c:	200001c8 	.word	0x200001c8
  ldr r2, =_sidata
 8001e80:	08004b20 	.word	0x08004b20
  ldr r2, =_sbss
 8001e84:	200001c8 	.word	0x200001c8
  ldr r4, =_ebss
 8001e88:	20000358 	.word	0x20000358

08001e8c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001e8c:	e7fe      	b.n	8001e8c <ADC_IRQHandler>

08001e8e <__cvt>:
 8001e8e:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001e92:	ec57 6b10 	vmov	r6, r7, d0
 8001e96:	2f00      	cmp	r7, #0
 8001e98:	460c      	mov	r4, r1
 8001e9a:	4619      	mov	r1, r3
 8001e9c:	463b      	mov	r3, r7
 8001e9e:	bfbb      	ittet	lt
 8001ea0:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8001ea4:	461f      	movlt	r7, r3
 8001ea6:	2300      	movge	r3, #0
 8001ea8:	232d      	movlt	r3, #45	@ 0x2d
 8001eaa:	700b      	strb	r3, [r1, #0]
 8001eac:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001eae:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8001eb2:	4691      	mov	r9, r2
 8001eb4:	f023 0820 	bic.w	r8, r3, #32
 8001eb8:	bfbc      	itt	lt
 8001eba:	4632      	movlt	r2, r6
 8001ebc:	4616      	movlt	r6, r2
 8001ebe:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001ec2:	d005      	beq.n	8001ed0 <__cvt+0x42>
 8001ec4:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8001ec8:	d100      	bne.n	8001ecc <__cvt+0x3e>
 8001eca:	3401      	adds	r4, #1
 8001ecc:	2102      	movs	r1, #2
 8001ece:	e000      	b.n	8001ed2 <__cvt+0x44>
 8001ed0:	2103      	movs	r1, #3
 8001ed2:	ab03      	add	r3, sp, #12
 8001ed4:	9301      	str	r3, [sp, #4]
 8001ed6:	ab02      	add	r3, sp, #8
 8001ed8:	9300      	str	r3, [sp, #0]
 8001eda:	ec47 6b10 	vmov	d0, r6, r7
 8001ede:	4653      	mov	r3, sl
 8001ee0:	4622      	mov	r2, r4
 8001ee2:	f000 fe39 	bl	8002b58 <_dtoa_r>
 8001ee6:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8001eea:	4605      	mov	r5, r0
 8001eec:	d119      	bne.n	8001f22 <__cvt+0x94>
 8001eee:	f019 0f01 	tst.w	r9, #1
 8001ef2:	d00e      	beq.n	8001f12 <__cvt+0x84>
 8001ef4:	eb00 0904 	add.w	r9, r0, r4
 8001ef8:	2200      	movs	r2, #0
 8001efa:	2300      	movs	r3, #0
 8001efc:	4630      	mov	r0, r6
 8001efe:	4639      	mov	r1, r7
 8001f00:	f7fe fdea 	bl	8000ad8 <__aeabi_dcmpeq>
 8001f04:	b108      	cbz	r0, 8001f0a <__cvt+0x7c>
 8001f06:	f8cd 900c 	str.w	r9, [sp, #12]
 8001f0a:	2230      	movs	r2, #48	@ 0x30
 8001f0c:	9b03      	ldr	r3, [sp, #12]
 8001f0e:	454b      	cmp	r3, r9
 8001f10:	d31e      	bcc.n	8001f50 <__cvt+0xc2>
 8001f12:	9b03      	ldr	r3, [sp, #12]
 8001f14:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8001f16:	1b5b      	subs	r3, r3, r5
 8001f18:	4628      	mov	r0, r5
 8001f1a:	6013      	str	r3, [r2, #0]
 8001f1c:	b004      	add	sp, #16
 8001f1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001f22:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001f26:	eb00 0904 	add.w	r9, r0, r4
 8001f2a:	d1e5      	bne.n	8001ef8 <__cvt+0x6a>
 8001f2c:	7803      	ldrb	r3, [r0, #0]
 8001f2e:	2b30      	cmp	r3, #48	@ 0x30
 8001f30:	d10a      	bne.n	8001f48 <__cvt+0xba>
 8001f32:	2200      	movs	r2, #0
 8001f34:	2300      	movs	r3, #0
 8001f36:	4630      	mov	r0, r6
 8001f38:	4639      	mov	r1, r7
 8001f3a:	f7fe fdcd 	bl	8000ad8 <__aeabi_dcmpeq>
 8001f3e:	b918      	cbnz	r0, 8001f48 <__cvt+0xba>
 8001f40:	f1c4 0401 	rsb	r4, r4, #1
 8001f44:	f8ca 4000 	str.w	r4, [sl]
 8001f48:	f8da 3000 	ldr.w	r3, [sl]
 8001f4c:	4499      	add	r9, r3
 8001f4e:	e7d3      	b.n	8001ef8 <__cvt+0x6a>
 8001f50:	1c59      	adds	r1, r3, #1
 8001f52:	9103      	str	r1, [sp, #12]
 8001f54:	701a      	strb	r2, [r3, #0]
 8001f56:	e7d9      	b.n	8001f0c <__cvt+0x7e>

08001f58 <__exponent>:
 8001f58:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001f5a:	2900      	cmp	r1, #0
 8001f5c:	bfba      	itte	lt
 8001f5e:	4249      	neglt	r1, r1
 8001f60:	232d      	movlt	r3, #45	@ 0x2d
 8001f62:	232b      	movge	r3, #43	@ 0x2b
 8001f64:	2909      	cmp	r1, #9
 8001f66:	7002      	strb	r2, [r0, #0]
 8001f68:	7043      	strb	r3, [r0, #1]
 8001f6a:	dd29      	ble.n	8001fc0 <__exponent+0x68>
 8001f6c:	f10d 0307 	add.w	r3, sp, #7
 8001f70:	461d      	mov	r5, r3
 8001f72:	270a      	movs	r7, #10
 8001f74:	461a      	mov	r2, r3
 8001f76:	fbb1 f6f7 	udiv	r6, r1, r7
 8001f7a:	fb07 1416 	mls	r4, r7, r6, r1
 8001f7e:	3430      	adds	r4, #48	@ 0x30
 8001f80:	f802 4c01 	strb.w	r4, [r2, #-1]
 8001f84:	460c      	mov	r4, r1
 8001f86:	2c63      	cmp	r4, #99	@ 0x63
 8001f88:	f103 33ff 	add.w	r3, r3, #4294967295
 8001f8c:	4631      	mov	r1, r6
 8001f8e:	dcf1      	bgt.n	8001f74 <__exponent+0x1c>
 8001f90:	3130      	adds	r1, #48	@ 0x30
 8001f92:	1e94      	subs	r4, r2, #2
 8001f94:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001f98:	1c41      	adds	r1, r0, #1
 8001f9a:	4623      	mov	r3, r4
 8001f9c:	42ab      	cmp	r3, r5
 8001f9e:	d30a      	bcc.n	8001fb6 <__exponent+0x5e>
 8001fa0:	f10d 0309 	add.w	r3, sp, #9
 8001fa4:	1a9b      	subs	r3, r3, r2
 8001fa6:	42ac      	cmp	r4, r5
 8001fa8:	bf88      	it	hi
 8001faa:	2300      	movhi	r3, #0
 8001fac:	3302      	adds	r3, #2
 8001fae:	4403      	add	r3, r0
 8001fb0:	1a18      	subs	r0, r3, r0
 8001fb2:	b003      	add	sp, #12
 8001fb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001fb6:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001fba:	f801 6f01 	strb.w	r6, [r1, #1]!
 8001fbe:	e7ed      	b.n	8001f9c <__exponent+0x44>
 8001fc0:	2330      	movs	r3, #48	@ 0x30
 8001fc2:	3130      	adds	r1, #48	@ 0x30
 8001fc4:	7083      	strb	r3, [r0, #2]
 8001fc6:	70c1      	strb	r1, [r0, #3]
 8001fc8:	1d03      	adds	r3, r0, #4
 8001fca:	e7f1      	b.n	8001fb0 <__exponent+0x58>

08001fcc <_printf_float>:
 8001fcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001fd0:	b08d      	sub	sp, #52	@ 0x34
 8001fd2:	460c      	mov	r4, r1
 8001fd4:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8001fd8:	4616      	mov	r6, r2
 8001fda:	461f      	mov	r7, r3
 8001fdc:	4605      	mov	r5, r0
 8001fde:	f000 fcbb 	bl	8002958 <_localeconv_r>
 8001fe2:	6803      	ldr	r3, [r0, #0]
 8001fe4:	9304      	str	r3, [sp, #16]
 8001fe6:	4618      	mov	r0, r3
 8001fe8:	f7fe f94a 	bl	8000280 <strlen>
 8001fec:	2300      	movs	r3, #0
 8001fee:	930a      	str	r3, [sp, #40]	@ 0x28
 8001ff0:	f8d8 3000 	ldr.w	r3, [r8]
 8001ff4:	9005      	str	r0, [sp, #20]
 8001ff6:	3307      	adds	r3, #7
 8001ff8:	f023 0307 	bic.w	r3, r3, #7
 8001ffc:	f103 0208 	add.w	r2, r3, #8
 8002000:	f894 a018 	ldrb.w	sl, [r4, #24]
 8002004:	f8d4 b000 	ldr.w	fp, [r4]
 8002008:	f8c8 2000 	str.w	r2, [r8]
 800200c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8002010:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8002014:	9307      	str	r3, [sp, #28]
 8002016:	f8cd 8018 	str.w	r8, [sp, #24]
 800201a:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800201e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002022:	4b9c      	ldr	r3, [pc, #624]	@ (8002294 <_printf_float+0x2c8>)
 8002024:	f04f 32ff 	mov.w	r2, #4294967295
 8002028:	f7fe fd88 	bl	8000b3c <__aeabi_dcmpun>
 800202c:	bb70      	cbnz	r0, 800208c <_printf_float+0xc0>
 800202e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002032:	4b98      	ldr	r3, [pc, #608]	@ (8002294 <_printf_float+0x2c8>)
 8002034:	f04f 32ff 	mov.w	r2, #4294967295
 8002038:	f7fe fd62 	bl	8000b00 <__aeabi_dcmple>
 800203c:	bb30      	cbnz	r0, 800208c <_printf_float+0xc0>
 800203e:	2200      	movs	r2, #0
 8002040:	2300      	movs	r3, #0
 8002042:	4640      	mov	r0, r8
 8002044:	4649      	mov	r1, r9
 8002046:	f7fe fd51 	bl	8000aec <__aeabi_dcmplt>
 800204a:	b110      	cbz	r0, 8002052 <_printf_float+0x86>
 800204c:	232d      	movs	r3, #45	@ 0x2d
 800204e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002052:	4a91      	ldr	r2, [pc, #580]	@ (8002298 <_printf_float+0x2cc>)
 8002054:	4b91      	ldr	r3, [pc, #580]	@ (800229c <_printf_float+0x2d0>)
 8002056:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800205a:	bf94      	ite	ls
 800205c:	4690      	movls	r8, r2
 800205e:	4698      	movhi	r8, r3
 8002060:	2303      	movs	r3, #3
 8002062:	6123      	str	r3, [r4, #16]
 8002064:	f02b 0304 	bic.w	r3, fp, #4
 8002068:	6023      	str	r3, [r4, #0]
 800206a:	f04f 0900 	mov.w	r9, #0
 800206e:	9700      	str	r7, [sp, #0]
 8002070:	4633      	mov	r3, r6
 8002072:	aa0b      	add	r2, sp, #44	@ 0x2c
 8002074:	4621      	mov	r1, r4
 8002076:	4628      	mov	r0, r5
 8002078:	f000 f9d2 	bl	8002420 <_printf_common>
 800207c:	3001      	adds	r0, #1
 800207e:	f040 808d 	bne.w	800219c <_printf_float+0x1d0>
 8002082:	f04f 30ff 	mov.w	r0, #4294967295
 8002086:	b00d      	add	sp, #52	@ 0x34
 8002088:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800208c:	4642      	mov	r2, r8
 800208e:	464b      	mov	r3, r9
 8002090:	4640      	mov	r0, r8
 8002092:	4649      	mov	r1, r9
 8002094:	f7fe fd52 	bl	8000b3c <__aeabi_dcmpun>
 8002098:	b140      	cbz	r0, 80020ac <_printf_float+0xe0>
 800209a:	464b      	mov	r3, r9
 800209c:	2b00      	cmp	r3, #0
 800209e:	bfbc      	itt	lt
 80020a0:	232d      	movlt	r3, #45	@ 0x2d
 80020a2:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 80020a6:	4a7e      	ldr	r2, [pc, #504]	@ (80022a0 <_printf_float+0x2d4>)
 80020a8:	4b7e      	ldr	r3, [pc, #504]	@ (80022a4 <_printf_float+0x2d8>)
 80020aa:	e7d4      	b.n	8002056 <_printf_float+0x8a>
 80020ac:	6863      	ldr	r3, [r4, #4]
 80020ae:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 80020b2:	9206      	str	r2, [sp, #24]
 80020b4:	1c5a      	adds	r2, r3, #1
 80020b6:	d13b      	bne.n	8002130 <_printf_float+0x164>
 80020b8:	2306      	movs	r3, #6
 80020ba:	6063      	str	r3, [r4, #4]
 80020bc:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 80020c0:	2300      	movs	r3, #0
 80020c2:	6022      	str	r2, [r4, #0]
 80020c4:	9303      	str	r3, [sp, #12]
 80020c6:	ab0a      	add	r3, sp, #40	@ 0x28
 80020c8:	e9cd a301 	strd	sl, r3, [sp, #4]
 80020cc:	ab09      	add	r3, sp, #36	@ 0x24
 80020ce:	9300      	str	r3, [sp, #0]
 80020d0:	6861      	ldr	r1, [r4, #4]
 80020d2:	ec49 8b10 	vmov	d0, r8, r9
 80020d6:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 80020da:	4628      	mov	r0, r5
 80020dc:	f7ff fed7 	bl	8001e8e <__cvt>
 80020e0:	9b06      	ldr	r3, [sp, #24]
 80020e2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80020e4:	2b47      	cmp	r3, #71	@ 0x47
 80020e6:	4680      	mov	r8, r0
 80020e8:	d129      	bne.n	800213e <_printf_float+0x172>
 80020ea:	1cc8      	adds	r0, r1, #3
 80020ec:	db02      	blt.n	80020f4 <_printf_float+0x128>
 80020ee:	6863      	ldr	r3, [r4, #4]
 80020f0:	4299      	cmp	r1, r3
 80020f2:	dd41      	ble.n	8002178 <_printf_float+0x1ac>
 80020f4:	f1aa 0a02 	sub.w	sl, sl, #2
 80020f8:	fa5f fa8a 	uxtb.w	sl, sl
 80020fc:	3901      	subs	r1, #1
 80020fe:	4652      	mov	r2, sl
 8002100:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8002104:	9109      	str	r1, [sp, #36]	@ 0x24
 8002106:	f7ff ff27 	bl	8001f58 <__exponent>
 800210a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800210c:	1813      	adds	r3, r2, r0
 800210e:	2a01      	cmp	r2, #1
 8002110:	4681      	mov	r9, r0
 8002112:	6123      	str	r3, [r4, #16]
 8002114:	dc02      	bgt.n	800211c <_printf_float+0x150>
 8002116:	6822      	ldr	r2, [r4, #0]
 8002118:	07d2      	lsls	r2, r2, #31
 800211a:	d501      	bpl.n	8002120 <_printf_float+0x154>
 800211c:	3301      	adds	r3, #1
 800211e:	6123      	str	r3, [r4, #16]
 8002120:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8002124:	2b00      	cmp	r3, #0
 8002126:	d0a2      	beq.n	800206e <_printf_float+0xa2>
 8002128:	232d      	movs	r3, #45	@ 0x2d
 800212a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800212e:	e79e      	b.n	800206e <_printf_float+0xa2>
 8002130:	9a06      	ldr	r2, [sp, #24]
 8002132:	2a47      	cmp	r2, #71	@ 0x47
 8002134:	d1c2      	bne.n	80020bc <_printf_float+0xf0>
 8002136:	2b00      	cmp	r3, #0
 8002138:	d1c0      	bne.n	80020bc <_printf_float+0xf0>
 800213a:	2301      	movs	r3, #1
 800213c:	e7bd      	b.n	80020ba <_printf_float+0xee>
 800213e:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8002142:	d9db      	bls.n	80020fc <_printf_float+0x130>
 8002144:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8002148:	d118      	bne.n	800217c <_printf_float+0x1b0>
 800214a:	2900      	cmp	r1, #0
 800214c:	6863      	ldr	r3, [r4, #4]
 800214e:	dd0b      	ble.n	8002168 <_printf_float+0x19c>
 8002150:	6121      	str	r1, [r4, #16]
 8002152:	b913      	cbnz	r3, 800215a <_printf_float+0x18e>
 8002154:	6822      	ldr	r2, [r4, #0]
 8002156:	07d0      	lsls	r0, r2, #31
 8002158:	d502      	bpl.n	8002160 <_printf_float+0x194>
 800215a:	3301      	adds	r3, #1
 800215c:	440b      	add	r3, r1
 800215e:	6123      	str	r3, [r4, #16]
 8002160:	65a1      	str	r1, [r4, #88]	@ 0x58
 8002162:	f04f 0900 	mov.w	r9, #0
 8002166:	e7db      	b.n	8002120 <_printf_float+0x154>
 8002168:	b913      	cbnz	r3, 8002170 <_printf_float+0x1a4>
 800216a:	6822      	ldr	r2, [r4, #0]
 800216c:	07d2      	lsls	r2, r2, #31
 800216e:	d501      	bpl.n	8002174 <_printf_float+0x1a8>
 8002170:	3302      	adds	r3, #2
 8002172:	e7f4      	b.n	800215e <_printf_float+0x192>
 8002174:	2301      	movs	r3, #1
 8002176:	e7f2      	b.n	800215e <_printf_float+0x192>
 8002178:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 800217c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800217e:	4299      	cmp	r1, r3
 8002180:	db05      	blt.n	800218e <_printf_float+0x1c2>
 8002182:	6823      	ldr	r3, [r4, #0]
 8002184:	6121      	str	r1, [r4, #16]
 8002186:	07d8      	lsls	r0, r3, #31
 8002188:	d5ea      	bpl.n	8002160 <_printf_float+0x194>
 800218a:	1c4b      	adds	r3, r1, #1
 800218c:	e7e7      	b.n	800215e <_printf_float+0x192>
 800218e:	2900      	cmp	r1, #0
 8002190:	bfd4      	ite	le
 8002192:	f1c1 0202 	rsble	r2, r1, #2
 8002196:	2201      	movgt	r2, #1
 8002198:	4413      	add	r3, r2
 800219a:	e7e0      	b.n	800215e <_printf_float+0x192>
 800219c:	6823      	ldr	r3, [r4, #0]
 800219e:	055a      	lsls	r2, r3, #21
 80021a0:	d407      	bmi.n	80021b2 <_printf_float+0x1e6>
 80021a2:	6923      	ldr	r3, [r4, #16]
 80021a4:	4642      	mov	r2, r8
 80021a6:	4631      	mov	r1, r6
 80021a8:	4628      	mov	r0, r5
 80021aa:	47b8      	blx	r7
 80021ac:	3001      	adds	r0, #1
 80021ae:	d12b      	bne.n	8002208 <_printf_float+0x23c>
 80021b0:	e767      	b.n	8002082 <_printf_float+0xb6>
 80021b2:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80021b6:	f240 80dd 	bls.w	8002374 <_printf_float+0x3a8>
 80021ba:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80021be:	2200      	movs	r2, #0
 80021c0:	2300      	movs	r3, #0
 80021c2:	f7fe fc89 	bl	8000ad8 <__aeabi_dcmpeq>
 80021c6:	2800      	cmp	r0, #0
 80021c8:	d033      	beq.n	8002232 <_printf_float+0x266>
 80021ca:	4a37      	ldr	r2, [pc, #220]	@ (80022a8 <_printf_float+0x2dc>)
 80021cc:	2301      	movs	r3, #1
 80021ce:	4631      	mov	r1, r6
 80021d0:	4628      	mov	r0, r5
 80021d2:	47b8      	blx	r7
 80021d4:	3001      	adds	r0, #1
 80021d6:	f43f af54 	beq.w	8002082 <_printf_float+0xb6>
 80021da:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 80021de:	4543      	cmp	r3, r8
 80021e0:	db02      	blt.n	80021e8 <_printf_float+0x21c>
 80021e2:	6823      	ldr	r3, [r4, #0]
 80021e4:	07d8      	lsls	r0, r3, #31
 80021e6:	d50f      	bpl.n	8002208 <_printf_float+0x23c>
 80021e8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80021ec:	4631      	mov	r1, r6
 80021ee:	4628      	mov	r0, r5
 80021f0:	47b8      	blx	r7
 80021f2:	3001      	adds	r0, #1
 80021f4:	f43f af45 	beq.w	8002082 <_printf_float+0xb6>
 80021f8:	f04f 0900 	mov.w	r9, #0
 80021fc:	f108 38ff 	add.w	r8, r8, #4294967295
 8002200:	f104 0a1a 	add.w	sl, r4, #26
 8002204:	45c8      	cmp	r8, r9
 8002206:	dc09      	bgt.n	800221c <_printf_float+0x250>
 8002208:	6823      	ldr	r3, [r4, #0]
 800220a:	079b      	lsls	r3, r3, #30
 800220c:	f100 8103 	bmi.w	8002416 <_printf_float+0x44a>
 8002210:	68e0      	ldr	r0, [r4, #12]
 8002212:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002214:	4298      	cmp	r0, r3
 8002216:	bfb8      	it	lt
 8002218:	4618      	movlt	r0, r3
 800221a:	e734      	b.n	8002086 <_printf_float+0xba>
 800221c:	2301      	movs	r3, #1
 800221e:	4652      	mov	r2, sl
 8002220:	4631      	mov	r1, r6
 8002222:	4628      	mov	r0, r5
 8002224:	47b8      	blx	r7
 8002226:	3001      	adds	r0, #1
 8002228:	f43f af2b 	beq.w	8002082 <_printf_float+0xb6>
 800222c:	f109 0901 	add.w	r9, r9, #1
 8002230:	e7e8      	b.n	8002204 <_printf_float+0x238>
 8002232:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002234:	2b00      	cmp	r3, #0
 8002236:	dc39      	bgt.n	80022ac <_printf_float+0x2e0>
 8002238:	4a1b      	ldr	r2, [pc, #108]	@ (80022a8 <_printf_float+0x2dc>)
 800223a:	2301      	movs	r3, #1
 800223c:	4631      	mov	r1, r6
 800223e:	4628      	mov	r0, r5
 8002240:	47b8      	blx	r7
 8002242:	3001      	adds	r0, #1
 8002244:	f43f af1d 	beq.w	8002082 <_printf_float+0xb6>
 8002248:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 800224c:	ea59 0303 	orrs.w	r3, r9, r3
 8002250:	d102      	bne.n	8002258 <_printf_float+0x28c>
 8002252:	6823      	ldr	r3, [r4, #0]
 8002254:	07d9      	lsls	r1, r3, #31
 8002256:	d5d7      	bpl.n	8002208 <_printf_float+0x23c>
 8002258:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800225c:	4631      	mov	r1, r6
 800225e:	4628      	mov	r0, r5
 8002260:	47b8      	blx	r7
 8002262:	3001      	adds	r0, #1
 8002264:	f43f af0d 	beq.w	8002082 <_printf_float+0xb6>
 8002268:	f04f 0a00 	mov.w	sl, #0
 800226c:	f104 0b1a 	add.w	fp, r4, #26
 8002270:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002272:	425b      	negs	r3, r3
 8002274:	4553      	cmp	r3, sl
 8002276:	dc01      	bgt.n	800227c <_printf_float+0x2b0>
 8002278:	464b      	mov	r3, r9
 800227a:	e793      	b.n	80021a4 <_printf_float+0x1d8>
 800227c:	2301      	movs	r3, #1
 800227e:	465a      	mov	r2, fp
 8002280:	4631      	mov	r1, r6
 8002282:	4628      	mov	r0, r5
 8002284:	47b8      	blx	r7
 8002286:	3001      	adds	r0, #1
 8002288:	f43f aefb 	beq.w	8002082 <_printf_float+0xb6>
 800228c:	f10a 0a01 	add.w	sl, sl, #1
 8002290:	e7ee      	b.n	8002270 <_printf_float+0x2a4>
 8002292:	bf00      	nop
 8002294:	7fefffff 	.word	0x7fefffff
 8002298:	080047a0 	.word	0x080047a0
 800229c:	080047a4 	.word	0x080047a4
 80022a0:	080047a8 	.word	0x080047a8
 80022a4:	080047ac 	.word	0x080047ac
 80022a8:	080047b0 	.word	0x080047b0
 80022ac:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80022ae:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 80022b2:	4553      	cmp	r3, sl
 80022b4:	bfa8      	it	ge
 80022b6:	4653      	movge	r3, sl
 80022b8:	2b00      	cmp	r3, #0
 80022ba:	4699      	mov	r9, r3
 80022bc:	dc36      	bgt.n	800232c <_printf_float+0x360>
 80022be:	f04f 0b00 	mov.w	fp, #0
 80022c2:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80022c6:	f104 021a 	add.w	r2, r4, #26
 80022ca:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80022cc:	9306      	str	r3, [sp, #24]
 80022ce:	eba3 0309 	sub.w	r3, r3, r9
 80022d2:	455b      	cmp	r3, fp
 80022d4:	dc31      	bgt.n	800233a <_printf_float+0x36e>
 80022d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80022d8:	459a      	cmp	sl, r3
 80022da:	dc3a      	bgt.n	8002352 <_printf_float+0x386>
 80022dc:	6823      	ldr	r3, [r4, #0]
 80022de:	07da      	lsls	r2, r3, #31
 80022e0:	d437      	bmi.n	8002352 <_printf_float+0x386>
 80022e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80022e4:	ebaa 0903 	sub.w	r9, sl, r3
 80022e8:	9b06      	ldr	r3, [sp, #24]
 80022ea:	ebaa 0303 	sub.w	r3, sl, r3
 80022ee:	4599      	cmp	r9, r3
 80022f0:	bfa8      	it	ge
 80022f2:	4699      	movge	r9, r3
 80022f4:	f1b9 0f00 	cmp.w	r9, #0
 80022f8:	dc33      	bgt.n	8002362 <_printf_float+0x396>
 80022fa:	f04f 0800 	mov.w	r8, #0
 80022fe:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002302:	f104 0b1a 	add.w	fp, r4, #26
 8002306:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002308:	ebaa 0303 	sub.w	r3, sl, r3
 800230c:	eba3 0309 	sub.w	r3, r3, r9
 8002310:	4543      	cmp	r3, r8
 8002312:	f77f af79 	ble.w	8002208 <_printf_float+0x23c>
 8002316:	2301      	movs	r3, #1
 8002318:	465a      	mov	r2, fp
 800231a:	4631      	mov	r1, r6
 800231c:	4628      	mov	r0, r5
 800231e:	47b8      	blx	r7
 8002320:	3001      	adds	r0, #1
 8002322:	f43f aeae 	beq.w	8002082 <_printf_float+0xb6>
 8002326:	f108 0801 	add.w	r8, r8, #1
 800232a:	e7ec      	b.n	8002306 <_printf_float+0x33a>
 800232c:	4642      	mov	r2, r8
 800232e:	4631      	mov	r1, r6
 8002330:	4628      	mov	r0, r5
 8002332:	47b8      	blx	r7
 8002334:	3001      	adds	r0, #1
 8002336:	d1c2      	bne.n	80022be <_printf_float+0x2f2>
 8002338:	e6a3      	b.n	8002082 <_printf_float+0xb6>
 800233a:	2301      	movs	r3, #1
 800233c:	4631      	mov	r1, r6
 800233e:	4628      	mov	r0, r5
 8002340:	9206      	str	r2, [sp, #24]
 8002342:	47b8      	blx	r7
 8002344:	3001      	adds	r0, #1
 8002346:	f43f ae9c 	beq.w	8002082 <_printf_float+0xb6>
 800234a:	9a06      	ldr	r2, [sp, #24]
 800234c:	f10b 0b01 	add.w	fp, fp, #1
 8002350:	e7bb      	b.n	80022ca <_printf_float+0x2fe>
 8002352:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002356:	4631      	mov	r1, r6
 8002358:	4628      	mov	r0, r5
 800235a:	47b8      	blx	r7
 800235c:	3001      	adds	r0, #1
 800235e:	d1c0      	bne.n	80022e2 <_printf_float+0x316>
 8002360:	e68f      	b.n	8002082 <_printf_float+0xb6>
 8002362:	9a06      	ldr	r2, [sp, #24]
 8002364:	464b      	mov	r3, r9
 8002366:	4442      	add	r2, r8
 8002368:	4631      	mov	r1, r6
 800236a:	4628      	mov	r0, r5
 800236c:	47b8      	blx	r7
 800236e:	3001      	adds	r0, #1
 8002370:	d1c3      	bne.n	80022fa <_printf_float+0x32e>
 8002372:	e686      	b.n	8002082 <_printf_float+0xb6>
 8002374:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8002378:	f1ba 0f01 	cmp.w	sl, #1
 800237c:	dc01      	bgt.n	8002382 <_printf_float+0x3b6>
 800237e:	07db      	lsls	r3, r3, #31
 8002380:	d536      	bpl.n	80023f0 <_printf_float+0x424>
 8002382:	2301      	movs	r3, #1
 8002384:	4642      	mov	r2, r8
 8002386:	4631      	mov	r1, r6
 8002388:	4628      	mov	r0, r5
 800238a:	47b8      	blx	r7
 800238c:	3001      	adds	r0, #1
 800238e:	f43f ae78 	beq.w	8002082 <_printf_float+0xb6>
 8002392:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002396:	4631      	mov	r1, r6
 8002398:	4628      	mov	r0, r5
 800239a:	47b8      	blx	r7
 800239c:	3001      	adds	r0, #1
 800239e:	f43f ae70 	beq.w	8002082 <_printf_float+0xb6>
 80023a2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80023a6:	2200      	movs	r2, #0
 80023a8:	2300      	movs	r3, #0
 80023aa:	f10a 3aff 	add.w	sl, sl, #4294967295
 80023ae:	f7fe fb93 	bl	8000ad8 <__aeabi_dcmpeq>
 80023b2:	b9c0      	cbnz	r0, 80023e6 <_printf_float+0x41a>
 80023b4:	4653      	mov	r3, sl
 80023b6:	f108 0201 	add.w	r2, r8, #1
 80023ba:	4631      	mov	r1, r6
 80023bc:	4628      	mov	r0, r5
 80023be:	47b8      	blx	r7
 80023c0:	3001      	adds	r0, #1
 80023c2:	d10c      	bne.n	80023de <_printf_float+0x412>
 80023c4:	e65d      	b.n	8002082 <_printf_float+0xb6>
 80023c6:	2301      	movs	r3, #1
 80023c8:	465a      	mov	r2, fp
 80023ca:	4631      	mov	r1, r6
 80023cc:	4628      	mov	r0, r5
 80023ce:	47b8      	blx	r7
 80023d0:	3001      	adds	r0, #1
 80023d2:	f43f ae56 	beq.w	8002082 <_printf_float+0xb6>
 80023d6:	f108 0801 	add.w	r8, r8, #1
 80023da:	45d0      	cmp	r8, sl
 80023dc:	dbf3      	blt.n	80023c6 <_printf_float+0x3fa>
 80023de:	464b      	mov	r3, r9
 80023e0:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 80023e4:	e6df      	b.n	80021a6 <_printf_float+0x1da>
 80023e6:	f04f 0800 	mov.w	r8, #0
 80023ea:	f104 0b1a 	add.w	fp, r4, #26
 80023ee:	e7f4      	b.n	80023da <_printf_float+0x40e>
 80023f0:	2301      	movs	r3, #1
 80023f2:	4642      	mov	r2, r8
 80023f4:	e7e1      	b.n	80023ba <_printf_float+0x3ee>
 80023f6:	2301      	movs	r3, #1
 80023f8:	464a      	mov	r2, r9
 80023fa:	4631      	mov	r1, r6
 80023fc:	4628      	mov	r0, r5
 80023fe:	47b8      	blx	r7
 8002400:	3001      	adds	r0, #1
 8002402:	f43f ae3e 	beq.w	8002082 <_printf_float+0xb6>
 8002406:	f108 0801 	add.w	r8, r8, #1
 800240a:	68e3      	ldr	r3, [r4, #12]
 800240c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800240e:	1a5b      	subs	r3, r3, r1
 8002410:	4543      	cmp	r3, r8
 8002412:	dcf0      	bgt.n	80023f6 <_printf_float+0x42a>
 8002414:	e6fc      	b.n	8002210 <_printf_float+0x244>
 8002416:	f04f 0800 	mov.w	r8, #0
 800241a:	f104 0919 	add.w	r9, r4, #25
 800241e:	e7f4      	b.n	800240a <_printf_float+0x43e>

08002420 <_printf_common>:
 8002420:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002424:	4616      	mov	r6, r2
 8002426:	4698      	mov	r8, r3
 8002428:	688a      	ldr	r2, [r1, #8]
 800242a:	690b      	ldr	r3, [r1, #16]
 800242c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8002430:	4293      	cmp	r3, r2
 8002432:	bfb8      	it	lt
 8002434:	4613      	movlt	r3, r2
 8002436:	6033      	str	r3, [r6, #0]
 8002438:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800243c:	4607      	mov	r7, r0
 800243e:	460c      	mov	r4, r1
 8002440:	b10a      	cbz	r2, 8002446 <_printf_common+0x26>
 8002442:	3301      	adds	r3, #1
 8002444:	6033      	str	r3, [r6, #0]
 8002446:	6823      	ldr	r3, [r4, #0]
 8002448:	0699      	lsls	r1, r3, #26
 800244a:	bf42      	ittt	mi
 800244c:	6833      	ldrmi	r3, [r6, #0]
 800244e:	3302      	addmi	r3, #2
 8002450:	6033      	strmi	r3, [r6, #0]
 8002452:	6825      	ldr	r5, [r4, #0]
 8002454:	f015 0506 	ands.w	r5, r5, #6
 8002458:	d106      	bne.n	8002468 <_printf_common+0x48>
 800245a:	f104 0a19 	add.w	sl, r4, #25
 800245e:	68e3      	ldr	r3, [r4, #12]
 8002460:	6832      	ldr	r2, [r6, #0]
 8002462:	1a9b      	subs	r3, r3, r2
 8002464:	42ab      	cmp	r3, r5
 8002466:	dc26      	bgt.n	80024b6 <_printf_common+0x96>
 8002468:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800246c:	6822      	ldr	r2, [r4, #0]
 800246e:	3b00      	subs	r3, #0
 8002470:	bf18      	it	ne
 8002472:	2301      	movne	r3, #1
 8002474:	0692      	lsls	r2, r2, #26
 8002476:	d42b      	bmi.n	80024d0 <_printf_common+0xb0>
 8002478:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800247c:	4641      	mov	r1, r8
 800247e:	4638      	mov	r0, r7
 8002480:	47c8      	blx	r9
 8002482:	3001      	adds	r0, #1
 8002484:	d01e      	beq.n	80024c4 <_printf_common+0xa4>
 8002486:	6823      	ldr	r3, [r4, #0]
 8002488:	6922      	ldr	r2, [r4, #16]
 800248a:	f003 0306 	and.w	r3, r3, #6
 800248e:	2b04      	cmp	r3, #4
 8002490:	bf02      	ittt	eq
 8002492:	68e5      	ldreq	r5, [r4, #12]
 8002494:	6833      	ldreq	r3, [r6, #0]
 8002496:	1aed      	subeq	r5, r5, r3
 8002498:	68a3      	ldr	r3, [r4, #8]
 800249a:	bf0c      	ite	eq
 800249c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80024a0:	2500      	movne	r5, #0
 80024a2:	4293      	cmp	r3, r2
 80024a4:	bfc4      	itt	gt
 80024a6:	1a9b      	subgt	r3, r3, r2
 80024a8:	18ed      	addgt	r5, r5, r3
 80024aa:	2600      	movs	r6, #0
 80024ac:	341a      	adds	r4, #26
 80024ae:	42b5      	cmp	r5, r6
 80024b0:	d11a      	bne.n	80024e8 <_printf_common+0xc8>
 80024b2:	2000      	movs	r0, #0
 80024b4:	e008      	b.n	80024c8 <_printf_common+0xa8>
 80024b6:	2301      	movs	r3, #1
 80024b8:	4652      	mov	r2, sl
 80024ba:	4641      	mov	r1, r8
 80024bc:	4638      	mov	r0, r7
 80024be:	47c8      	blx	r9
 80024c0:	3001      	adds	r0, #1
 80024c2:	d103      	bne.n	80024cc <_printf_common+0xac>
 80024c4:	f04f 30ff 	mov.w	r0, #4294967295
 80024c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80024cc:	3501      	adds	r5, #1
 80024ce:	e7c6      	b.n	800245e <_printf_common+0x3e>
 80024d0:	18e1      	adds	r1, r4, r3
 80024d2:	1c5a      	adds	r2, r3, #1
 80024d4:	2030      	movs	r0, #48	@ 0x30
 80024d6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80024da:	4422      	add	r2, r4
 80024dc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80024e0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80024e4:	3302      	adds	r3, #2
 80024e6:	e7c7      	b.n	8002478 <_printf_common+0x58>
 80024e8:	2301      	movs	r3, #1
 80024ea:	4622      	mov	r2, r4
 80024ec:	4641      	mov	r1, r8
 80024ee:	4638      	mov	r0, r7
 80024f0:	47c8      	blx	r9
 80024f2:	3001      	adds	r0, #1
 80024f4:	d0e6      	beq.n	80024c4 <_printf_common+0xa4>
 80024f6:	3601      	adds	r6, #1
 80024f8:	e7d9      	b.n	80024ae <_printf_common+0x8e>
	...

080024fc <_printf_i>:
 80024fc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002500:	7e0f      	ldrb	r7, [r1, #24]
 8002502:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8002504:	2f78      	cmp	r7, #120	@ 0x78
 8002506:	4691      	mov	r9, r2
 8002508:	4680      	mov	r8, r0
 800250a:	460c      	mov	r4, r1
 800250c:	469a      	mov	sl, r3
 800250e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8002512:	d807      	bhi.n	8002524 <_printf_i+0x28>
 8002514:	2f62      	cmp	r7, #98	@ 0x62
 8002516:	d80a      	bhi.n	800252e <_printf_i+0x32>
 8002518:	2f00      	cmp	r7, #0
 800251a:	f000 80d2 	beq.w	80026c2 <_printf_i+0x1c6>
 800251e:	2f58      	cmp	r7, #88	@ 0x58
 8002520:	f000 80b9 	beq.w	8002696 <_printf_i+0x19a>
 8002524:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002528:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800252c:	e03a      	b.n	80025a4 <_printf_i+0xa8>
 800252e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8002532:	2b15      	cmp	r3, #21
 8002534:	d8f6      	bhi.n	8002524 <_printf_i+0x28>
 8002536:	a101      	add	r1, pc, #4	@ (adr r1, 800253c <_printf_i+0x40>)
 8002538:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800253c:	08002595 	.word	0x08002595
 8002540:	080025a9 	.word	0x080025a9
 8002544:	08002525 	.word	0x08002525
 8002548:	08002525 	.word	0x08002525
 800254c:	08002525 	.word	0x08002525
 8002550:	08002525 	.word	0x08002525
 8002554:	080025a9 	.word	0x080025a9
 8002558:	08002525 	.word	0x08002525
 800255c:	08002525 	.word	0x08002525
 8002560:	08002525 	.word	0x08002525
 8002564:	08002525 	.word	0x08002525
 8002568:	080026a9 	.word	0x080026a9
 800256c:	080025d3 	.word	0x080025d3
 8002570:	08002663 	.word	0x08002663
 8002574:	08002525 	.word	0x08002525
 8002578:	08002525 	.word	0x08002525
 800257c:	080026cb 	.word	0x080026cb
 8002580:	08002525 	.word	0x08002525
 8002584:	080025d3 	.word	0x080025d3
 8002588:	08002525 	.word	0x08002525
 800258c:	08002525 	.word	0x08002525
 8002590:	0800266b 	.word	0x0800266b
 8002594:	6833      	ldr	r3, [r6, #0]
 8002596:	1d1a      	adds	r2, r3, #4
 8002598:	681b      	ldr	r3, [r3, #0]
 800259a:	6032      	str	r2, [r6, #0]
 800259c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80025a0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80025a4:	2301      	movs	r3, #1
 80025a6:	e09d      	b.n	80026e4 <_printf_i+0x1e8>
 80025a8:	6833      	ldr	r3, [r6, #0]
 80025aa:	6820      	ldr	r0, [r4, #0]
 80025ac:	1d19      	adds	r1, r3, #4
 80025ae:	6031      	str	r1, [r6, #0]
 80025b0:	0606      	lsls	r6, r0, #24
 80025b2:	d501      	bpl.n	80025b8 <_printf_i+0xbc>
 80025b4:	681d      	ldr	r5, [r3, #0]
 80025b6:	e003      	b.n	80025c0 <_printf_i+0xc4>
 80025b8:	0645      	lsls	r5, r0, #25
 80025ba:	d5fb      	bpl.n	80025b4 <_printf_i+0xb8>
 80025bc:	f9b3 5000 	ldrsh.w	r5, [r3]
 80025c0:	2d00      	cmp	r5, #0
 80025c2:	da03      	bge.n	80025cc <_printf_i+0xd0>
 80025c4:	232d      	movs	r3, #45	@ 0x2d
 80025c6:	426d      	negs	r5, r5
 80025c8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80025cc:	4859      	ldr	r0, [pc, #356]	@ (8002734 <_printf_i+0x238>)
 80025ce:	230a      	movs	r3, #10
 80025d0:	e011      	b.n	80025f6 <_printf_i+0xfa>
 80025d2:	6821      	ldr	r1, [r4, #0]
 80025d4:	6833      	ldr	r3, [r6, #0]
 80025d6:	0608      	lsls	r0, r1, #24
 80025d8:	f853 5b04 	ldr.w	r5, [r3], #4
 80025dc:	d402      	bmi.n	80025e4 <_printf_i+0xe8>
 80025de:	0649      	lsls	r1, r1, #25
 80025e0:	bf48      	it	mi
 80025e2:	b2ad      	uxthmi	r5, r5
 80025e4:	2f6f      	cmp	r7, #111	@ 0x6f
 80025e6:	4853      	ldr	r0, [pc, #332]	@ (8002734 <_printf_i+0x238>)
 80025e8:	6033      	str	r3, [r6, #0]
 80025ea:	bf14      	ite	ne
 80025ec:	230a      	movne	r3, #10
 80025ee:	2308      	moveq	r3, #8
 80025f0:	2100      	movs	r1, #0
 80025f2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80025f6:	6866      	ldr	r6, [r4, #4]
 80025f8:	60a6      	str	r6, [r4, #8]
 80025fa:	2e00      	cmp	r6, #0
 80025fc:	bfa2      	ittt	ge
 80025fe:	6821      	ldrge	r1, [r4, #0]
 8002600:	f021 0104 	bicge.w	r1, r1, #4
 8002604:	6021      	strge	r1, [r4, #0]
 8002606:	b90d      	cbnz	r5, 800260c <_printf_i+0x110>
 8002608:	2e00      	cmp	r6, #0
 800260a:	d04b      	beq.n	80026a4 <_printf_i+0x1a8>
 800260c:	4616      	mov	r6, r2
 800260e:	fbb5 f1f3 	udiv	r1, r5, r3
 8002612:	fb03 5711 	mls	r7, r3, r1, r5
 8002616:	5dc7      	ldrb	r7, [r0, r7]
 8002618:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800261c:	462f      	mov	r7, r5
 800261e:	42bb      	cmp	r3, r7
 8002620:	460d      	mov	r5, r1
 8002622:	d9f4      	bls.n	800260e <_printf_i+0x112>
 8002624:	2b08      	cmp	r3, #8
 8002626:	d10b      	bne.n	8002640 <_printf_i+0x144>
 8002628:	6823      	ldr	r3, [r4, #0]
 800262a:	07df      	lsls	r7, r3, #31
 800262c:	d508      	bpl.n	8002640 <_printf_i+0x144>
 800262e:	6923      	ldr	r3, [r4, #16]
 8002630:	6861      	ldr	r1, [r4, #4]
 8002632:	4299      	cmp	r1, r3
 8002634:	bfde      	ittt	le
 8002636:	2330      	movle	r3, #48	@ 0x30
 8002638:	f806 3c01 	strble.w	r3, [r6, #-1]
 800263c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8002640:	1b92      	subs	r2, r2, r6
 8002642:	6122      	str	r2, [r4, #16]
 8002644:	f8cd a000 	str.w	sl, [sp]
 8002648:	464b      	mov	r3, r9
 800264a:	aa03      	add	r2, sp, #12
 800264c:	4621      	mov	r1, r4
 800264e:	4640      	mov	r0, r8
 8002650:	f7ff fee6 	bl	8002420 <_printf_common>
 8002654:	3001      	adds	r0, #1
 8002656:	d14a      	bne.n	80026ee <_printf_i+0x1f2>
 8002658:	f04f 30ff 	mov.w	r0, #4294967295
 800265c:	b004      	add	sp, #16
 800265e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002662:	6823      	ldr	r3, [r4, #0]
 8002664:	f043 0320 	orr.w	r3, r3, #32
 8002668:	6023      	str	r3, [r4, #0]
 800266a:	4833      	ldr	r0, [pc, #204]	@ (8002738 <_printf_i+0x23c>)
 800266c:	2778      	movs	r7, #120	@ 0x78
 800266e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8002672:	6823      	ldr	r3, [r4, #0]
 8002674:	6831      	ldr	r1, [r6, #0]
 8002676:	061f      	lsls	r7, r3, #24
 8002678:	f851 5b04 	ldr.w	r5, [r1], #4
 800267c:	d402      	bmi.n	8002684 <_printf_i+0x188>
 800267e:	065f      	lsls	r7, r3, #25
 8002680:	bf48      	it	mi
 8002682:	b2ad      	uxthmi	r5, r5
 8002684:	6031      	str	r1, [r6, #0]
 8002686:	07d9      	lsls	r1, r3, #31
 8002688:	bf44      	itt	mi
 800268a:	f043 0320 	orrmi.w	r3, r3, #32
 800268e:	6023      	strmi	r3, [r4, #0]
 8002690:	b11d      	cbz	r5, 800269a <_printf_i+0x19e>
 8002692:	2310      	movs	r3, #16
 8002694:	e7ac      	b.n	80025f0 <_printf_i+0xf4>
 8002696:	4827      	ldr	r0, [pc, #156]	@ (8002734 <_printf_i+0x238>)
 8002698:	e7e9      	b.n	800266e <_printf_i+0x172>
 800269a:	6823      	ldr	r3, [r4, #0]
 800269c:	f023 0320 	bic.w	r3, r3, #32
 80026a0:	6023      	str	r3, [r4, #0]
 80026a2:	e7f6      	b.n	8002692 <_printf_i+0x196>
 80026a4:	4616      	mov	r6, r2
 80026a6:	e7bd      	b.n	8002624 <_printf_i+0x128>
 80026a8:	6833      	ldr	r3, [r6, #0]
 80026aa:	6825      	ldr	r5, [r4, #0]
 80026ac:	6961      	ldr	r1, [r4, #20]
 80026ae:	1d18      	adds	r0, r3, #4
 80026b0:	6030      	str	r0, [r6, #0]
 80026b2:	062e      	lsls	r6, r5, #24
 80026b4:	681b      	ldr	r3, [r3, #0]
 80026b6:	d501      	bpl.n	80026bc <_printf_i+0x1c0>
 80026b8:	6019      	str	r1, [r3, #0]
 80026ba:	e002      	b.n	80026c2 <_printf_i+0x1c6>
 80026bc:	0668      	lsls	r0, r5, #25
 80026be:	d5fb      	bpl.n	80026b8 <_printf_i+0x1bc>
 80026c0:	8019      	strh	r1, [r3, #0]
 80026c2:	2300      	movs	r3, #0
 80026c4:	6123      	str	r3, [r4, #16]
 80026c6:	4616      	mov	r6, r2
 80026c8:	e7bc      	b.n	8002644 <_printf_i+0x148>
 80026ca:	6833      	ldr	r3, [r6, #0]
 80026cc:	1d1a      	adds	r2, r3, #4
 80026ce:	6032      	str	r2, [r6, #0]
 80026d0:	681e      	ldr	r6, [r3, #0]
 80026d2:	6862      	ldr	r2, [r4, #4]
 80026d4:	2100      	movs	r1, #0
 80026d6:	4630      	mov	r0, r6
 80026d8:	f7fd fd82 	bl	80001e0 <memchr>
 80026dc:	b108      	cbz	r0, 80026e2 <_printf_i+0x1e6>
 80026de:	1b80      	subs	r0, r0, r6
 80026e0:	6060      	str	r0, [r4, #4]
 80026e2:	6863      	ldr	r3, [r4, #4]
 80026e4:	6123      	str	r3, [r4, #16]
 80026e6:	2300      	movs	r3, #0
 80026e8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80026ec:	e7aa      	b.n	8002644 <_printf_i+0x148>
 80026ee:	6923      	ldr	r3, [r4, #16]
 80026f0:	4632      	mov	r2, r6
 80026f2:	4649      	mov	r1, r9
 80026f4:	4640      	mov	r0, r8
 80026f6:	47d0      	blx	sl
 80026f8:	3001      	adds	r0, #1
 80026fa:	d0ad      	beq.n	8002658 <_printf_i+0x15c>
 80026fc:	6823      	ldr	r3, [r4, #0]
 80026fe:	079b      	lsls	r3, r3, #30
 8002700:	d413      	bmi.n	800272a <_printf_i+0x22e>
 8002702:	68e0      	ldr	r0, [r4, #12]
 8002704:	9b03      	ldr	r3, [sp, #12]
 8002706:	4298      	cmp	r0, r3
 8002708:	bfb8      	it	lt
 800270a:	4618      	movlt	r0, r3
 800270c:	e7a6      	b.n	800265c <_printf_i+0x160>
 800270e:	2301      	movs	r3, #1
 8002710:	4632      	mov	r2, r6
 8002712:	4649      	mov	r1, r9
 8002714:	4640      	mov	r0, r8
 8002716:	47d0      	blx	sl
 8002718:	3001      	adds	r0, #1
 800271a:	d09d      	beq.n	8002658 <_printf_i+0x15c>
 800271c:	3501      	adds	r5, #1
 800271e:	68e3      	ldr	r3, [r4, #12]
 8002720:	9903      	ldr	r1, [sp, #12]
 8002722:	1a5b      	subs	r3, r3, r1
 8002724:	42ab      	cmp	r3, r5
 8002726:	dcf2      	bgt.n	800270e <_printf_i+0x212>
 8002728:	e7eb      	b.n	8002702 <_printf_i+0x206>
 800272a:	2500      	movs	r5, #0
 800272c:	f104 0619 	add.w	r6, r4, #25
 8002730:	e7f5      	b.n	800271e <_printf_i+0x222>
 8002732:	bf00      	nop
 8002734:	080047b2 	.word	0x080047b2
 8002738:	080047c3 	.word	0x080047c3

0800273c <std>:
 800273c:	2300      	movs	r3, #0
 800273e:	b510      	push	{r4, lr}
 8002740:	4604      	mov	r4, r0
 8002742:	e9c0 3300 	strd	r3, r3, [r0]
 8002746:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800274a:	6083      	str	r3, [r0, #8]
 800274c:	8181      	strh	r1, [r0, #12]
 800274e:	6643      	str	r3, [r0, #100]	@ 0x64
 8002750:	81c2      	strh	r2, [r0, #14]
 8002752:	6183      	str	r3, [r0, #24]
 8002754:	4619      	mov	r1, r3
 8002756:	2208      	movs	r2, #8
 8002758:	305c      	adds	r0, #92	@ 0x5c
 800275a:	f000 f8f4 	bl	8002946 <memset>
 800275e:	4b0d      	ldr	r3, [pc, #52]	@ (8002794 <std+0x58>)
 8002760:	6263      	str	r3, [r4, #36]	@ 0x24
 8002762:	4b0d      	ldr	r3, [pc, #52]	@ (8002798 <std+0x5c>)
 8002764:	62a3      	str	r3, [r4, #40]	@ 0x28
 8002766:	4b0d      	ldr	r3, [pc, #52]	@ (800279c <std+0x60>)
 8002768:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800276a:	4b0d      	ldr	r3, [pc, #52]	@ (80027a0 <std+0x64>)
 800276c:	6323      	str	r3, [r4, #48]	@ 0x30
 800276e:	4b0d      	ldr	r3, [pc, #52]	@ (80027a4 <std+0x68>)
 8002770:	6224      	str	r4, [r4, #32]
 8002772:	429c      	cmp	r4, r3
 8002774:	d006      	beq.n	8002784 <std+0x48>
 8002776:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800277a:	4294      	cmp	r4, r2
 800277c:	d002      	beq.n	8002784 <std+0x48>
 800277e:	33d0      	adds	r3, #208	@ 0xd0
 8002780:	429c      	cmp	r4, r3
 8002782:	d105      	bne.n	8002790 <std+0x54>
 8002784:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002788:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800278c:	f000 b958 	b.w	8002a40 <__retarget_lock_init_recursive>
 8002790:	bd10      	pop	{r4, pc}
 8002792:	bf00      	nop
 8002794:	080028c1 	.word	0x080028c1
 8002798:	080028e3 	.word	0x080028e3
 800279c:	0800291b 	.word	0x0800291b
 80027a0:	0800293f 	.word	0x0800293f
 80027a4:	2000020c 	.word	0x2000020c

080027a8 <stdio_exit_handler>:
 80027a8:	4a02      	ldr	r2, [pc, #8]	@ (80027b4 <stdio_exit_handler+0xc>)
 80027aa:	4903      	ldr	r1, [pc, #12]	@ (80027b8 <stdio_exit_handler+0x10>)
 80027ac:	4803      	ldr	r0, [pc, #12]	@ (80027bc <stdio_exit_handler+0x14>)
 80027ae:	f000 b869 	b.w	8002884 <_fwalk_sglue>
 80027b2:	bf00      	nop
 80027b4:	20000000 	.word	0x20000000
 80027b8:	080040ed 	.word	0x080040ed
 80027bc:	20000010 	.word	0x20000010

080027c0 <cleanup_stdio>:
 80027c0:	6841      	ldr	r1, [r0, #4]
 80027c2:	4b0c      	ldr	r3, [pc, #48]	@ (80027f4 <cleanup_stdio+0x34>)
 80027c4:	4299      	cmp	r1, r3
 80027c6:	b510      	push	{r4, lr}
 80027c8:	4604      	mov	r4, r0
 80027ca:	d001      	beq.n	80027d0 <cleanup_stdio+0x10>
 80027cc:	f001 fc8e 	bl	80040ec <_fflush_r>
 80027d0:	68a1      	ldr	r1, [r4, #8]
 80027d2:	4b09      	ldr	r3, [pc, #36]	@ (80027f8 <cleanup_stdio+0x38>)
 80027d4:	4299      	cmp	r1, r3
 80027d6:	d002      	beq.n	80027de <cleanup_stdio+0x1e>
 80027d8:	4620      	mov	r0, r4
 80027da:	f001 fc87 	bl	80040ec <_fflush_r>
 80027de:	68e1      	ldr	r1, [r4, #12]
 80027e0:	4b06      	ldr	r3, [pc, #24]	@ (80027fc <cleanup_stdio+0x3c>)
 80027e2:	4299      	cmp	r1, r3
 80027e4:	d004      	beq.n	80027f0 <cleanup_stdio+0x30>
 80027e6:	4620      	mov	r0, r4
 80027e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80027ec:	f001 bc7e 	b.w	80040ec <_fflush_r>
 80027f0:	bd10      	pop	{r4, pc}
 80027f2:	bf00      	nop
 80027f4:	2000020c 	.word	0x2000020c
 80027f8:	20000274 	.word	0x20000274
 80027fc:	200002dc 	.word	0x200002dc

08002800 <global_stdio_init.part.0>:
 8002800:	b510      	push	{r4, lr}
 8002802:	4b0b      	ldr	r3, [pc, #44]	@ (8002830 <global_stdio_init.part.0+0x30>)
 8002804:	4c0b      	ldr	r4, [pc, #44]	@ (8002834 <global_stdio_init.part.0+0x34>)
 8002806:	4a0c      	ldr	r2, [pc, #48]	@ (8002838 <global_stdio_init.part.0+0x38>)
 8002808:	601a      	str	r2, [r3, #0]
 800280a:	4620      	mov	r0, r4
 800280c:	2200      	movs	r2, #0
 800280e:	2104      	movs	r1, #4
 8002810:	f7ff ff94 	bl	800273c <std>
 8002814:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8002818:	2201      	movs	r2, #1
 800281a:	2109      	movs	r1, #9
 800281c:	f7ff ff8e 	bl	800273c <std>
 8002820:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8002824:	2202      	movs	r2, #2
 8002826:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800282a:	2112      	movs	r1, #18
 800282c:	f7ff bf86 	b.w	800273c <std>
 8002830:	20000344 	.word	0x20000344
 8002834:	2000020c 	.word	0x2000020c
 8002838:	080027a9 	.word	0x080027a9

0800283c <__sfp_lock_acquire>:
 800283c:	4801      	ldr	r0, [pc, #4]	@ (8002844 <__sfp_lock_acquire+0x8>)
 800283e:	f000 b900 	b.w	8002a42 <__retarget_lock_acquire_recursive>
 8002842:	bf00      	nop
 8002844:	2000034d 	.word	0x2000034d

08002848 <__sfp_lock_release>:
 8002848:	4801      	ldr	r0, [pc, #4]	@ (8002850 <__sfp_lock_release+0x8>)
 800284a:	f000 b8fb 	b.w	8002a44 <__retarget_lock_release_recursive>
 800284e:	bf00      	nop
 8002850:	2000034d 	.word	0x2000034d

08002854 <__sinit>:
 8002854:	b510      	push	{r4, lr}
 8002856:	4604      	mov	r4, r0
 8002858:	f7ff fff0 	bl	800283c <__sfp_lock_acquire>
 800285c:	6a23      	ldr	r3, [r4, #32]
 800285e:	b11b      	cbz	r3, 8002868 <__sinit+0x14>
 8002860:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002864:	f7ff bff0 	b.w	8002848 <__sfp_lock_release>
 8002868:	4b04      	ldr	r3, [pc, #16]	@ (800287c <__sinit+0x28>)
 800286a:	6223      	str	r3, [r4, #32]
 800286c:	4b04      	ldr	r3, [pc, #16]	@ (8002880 <__sinit+0x2c>)
 800286e:	681b      	ldr	r3, [r3, #0]
 8002870:	2b00      	cmp	r3, #0
 8002872:	d1f5      	bne.n	8002860 <__sinit+0xc>
 8002874:	f7ff ffc4 	bl	8002800 <global_stdio_init.part.0>
 8002878:	e7f2      	b.n	8002860 <__sinit+0xc>
 800287a:	bf00      	nop
 800287c:	080027c1 	.word	0x080027c1
 8002880:	20000344 	.word	0x20000344

08002884 <_fwalk_sglue>:
 8002884:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002888:	4607      	mov	r7, r0
 800288a:	4688      	mov	r8, r1
 800288c:	4614      	mov	r4, r2
 800288e:	2600      	movs	r6, #0
 8002890:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002894:	f1b9 0901 	subs.w	r9, r9, #1
 8002898:	d505      	bpl.n	80028a6 <_fwalk_sglue+0x22>
 800289a:	6824      	ldr	r4, [r4, #0]
 800289c:	2c00      	cmp	r4, #0
 800289e:	d1f7      	bne.n	8002890 <_fwalk_sglue+0xc>
 80028a0:	4630      	mov	r0, r6
 80028a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80028a6:	89ab      	ldrh	r3, [r5, #12]
 80028a8:	2b01      	cmp	r3, #1
 80028aa:	d907      	bls.n	80028bc <_fwalk_sglue+0x38>
 80028ac:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80028b0:	3301      	adds	r3, #1
 80028b2:	d003      	beq.n	80028bc <_fwalk_sglue+0x38>
 80028b4:	4629      	mov	r1, r5
 80028b6:	4638      	mov	r0, r7
 80028b8:	47c0      	blx	r8
 80028ba:	4306      	orrs	r6, r0
 80028bc:	3568      	adds	r5, #104	@ 0x68
 80028be:	e7e9      	b.n	8002894 <_fwalk_sglue+0x10>

080028c0 <__sread>:
 80028c0:	b510      	push	{r4, lr}
 80028c2:	460c      	mov	r4, r1
 80028c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80028c8:	f000 f86c 	bl	80029a4 <_read_r>
 80028cc:	2800      	cmp	r0, #0
 80028ce:	bfab      	itete	ge
 80028d0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80028d2:	89a3      	ldrhlt	r3, [r4, #12]
 80028d4:	181b      	addge	r3, r3, r0
 80028d6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80028da:	bfac      	ite	ge
 80028dc:	6563      	strge	r3, [r4, #84]	@ 0x54
 80028de:	81a3      	strhlt	r3, [r4, #12]
 80028e0:	bd10      	pop	{r4, pc}

080028e2 <__swrite>:
 80028e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80028e6:	461f      	mov	r7, r3
 80028e8:	898b      	ldrh	r3, [r1, #12]
 80028ea:	05db      	lsls	r3, r3, #23
 80028ec:	4605      	mov	r5, r0
 80028ee:	460c      	mov	r4, r1
 80028f0:	4616      	mov	r6, r2
 80028f2:	d505      	bpl.n	8002900 <__swrite+0x1e>
 80028f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80028f8:	2302      	movs	r3, #2
 80028fa:	2200      	movs	r2, #0
 80028fc:	f000 f840 	bl	8002980 <_lseek_r>
 8002900:	89a3      	ldrh	r3, [r4, #12]
 8002902:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002906:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800290a:	81a3      	strh	r3, [r4, #12]
 800290c:	4632      	mov	r2, r6
 800290e:	463b      	mov	r3, r7
 8002910:	4628      	mov	r0, r5
 8002912:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002916:	f000 b857 	b.w	80029c8 <_write_r>

0800291a <__sseek>:
 800291a:	b510      	push	{r4, lr}
 800291c:	460c      	mov	r4, r1
 800291e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002922:	f000 f82d 	bl	8002980 <_lseek_r>
 8002926:	1c43      	adds	r3, r0, #1
 8002928:	89a3      	ldrh	r3, [r4, #12]
 800292a:	bf15      	itete	ne
 800292c:	6560      	strne	r0, [r4, #84]	@ 0x54
 800292e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8002932:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8002936:	81a3      	strheq	r3, [r4, #12]
 8002938:	bf18      	it	ne
 800293a:	81a3      	strhne	r3, [r4, #12]
 800293c:	bd10      	pop	{r4, pc}

0800293e <__sclose>:
 800293e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002942:	f000 b80d 	b.w	8002960 <_close_r>

08002946 <memset>:
 8002946:	4402      	add	r2, r0
 8002948:	4603      	mov	r3, r0
 800294a:	4293      	cmp	r3, r2
 800294c:	d100      	bne.n	8002950 <memset+0xa>
 800294e:	4770      	bx	lr
 8002950:	f803 1b01 	strb.w	r1, [r3], #1
 8002954:	e7f9      	b.n	800294a <memset+0x4>
	...

08002958 <_localeconv_r>:
 8002958:	4800      	ldr	r0, [pc, #0]	@ (800295c <_localeconv_r+0x4>)
 800295a:	4770      	bx	lr
 800295c:	2000014c 	.word	0x2000014c

08002960 <_close_r>:
 8002960:	b538      	push	{r3, r4, r5, lr}
 8002962:	4d06      	ldr	r5, [pc, #24]	@ (800297c <_close_r+0x1c>)
 8002964:	2300      	movs	r3, #0
 8002966:	4604      	mov	r4, r0
 8002968:	4608      	mov	r0, r1
 800296a:	602b      	str	r3, [r5, #0]
 800296c:	f7fe fc2f 	bl	80011ce <_close>
 8002970:	1c43      	adds	r3, r0, #1
 8002972:	d102      	bne.n	800297a <_close_r+0x1a>
 8002974:	682b      	ldr	r3, [r5, #0]
 8002976:	b103      	cbz	r3, 800297a <_close_r+0x1a>
 8002978:	6023      	str	r3, [r4, #0]
 800297a:	bd38      	pop	{r3, r4, r5, pc}
 800297c:	20000348 	.word	0x20000348

08002980 <_lseek_r>:
 8002980:	b538      	push	{r3, r4, r5, lr}
 8002982:	4d07      	ldr	r5, [pc, #28]	@ (80029a0 <_lseek_r+0x20>)
 8002984:	4604      	mov	r4, r0
 8002986:	4608      	mov	r0, r1
 8002988:	4611      	mov	r1, r2
 800298a:	2200      	movs	r2, #0
 800298c:	602a      	str	r2, [r5, #0]
 800298e:	461a      	mov	r2, r3
 8002990:	f7fe fc44 	bl	800121c <_lseek>
 8002994:	1c43      	adds	r3, r0, #1
 8002996:	d102      	bne.n	800299e <_lseek_r+0x1e>
 8002998:	682b      	ldr	r3, [r5, #0]
 800299a:	b103      	cbz	r3, 800299e <_lseek_r+0x1e>
 800299c:	6023      	str	r3, [r4, #0]
 800299e:	bd38      	pop	{r3, r4, r5, pc}
 80029a0:	20000348 	.word	0x20000348

080029a4 <_read_r>:
 80029a4:	b538      	push	{r3, r4, r5, lr}
 80029a6:	4d07      	ldr	r5, [pc, #28]	@ (80029c4 <_read_r+0x20>)
 80029a8:	4604      	mov	r4, r0
 80029aa:	4608      	mov	r0, r1
 80029ac:	4611      	mov	r1, r2
 80029ae:	2200      	movs	r2, #0
 80029b0:	602a      	str	r2, [r5, #0]
 80029b2:	461a      	mov	r2, r3
 80029b4:	f7fe fde6 	bl	8001584 <_read>
 80029b8:	1c43      	adds	r3, r0, #1
 80029ba:	d102      	bne.n	80029c2 <_read_r+0x1e>
 80029bc:	682b      	ldr	r3, [r5, #0]
 80029be:	b103      	cbz	r3, 80029c2 <_read_r+0x1e>
 80029c0:	6023      	str	r3, [r4, #0]
 80029c2:	bd38      	pop	{r3, r4, r5, pc}
 80029c4:	20000348 	.word	0x20000348

080029c8 <_write_r>:
 80029c8:	b538      	push	{r3, r4, r5, lr}
 80029ca:	4d07      	ldr	r5, [pc, #28]	@ (80029e8 <_write_r+0x20>)
 80029cc:	4604      	mov	r4, r0
 80029ce:	4608      	mov	r0, r1
 80029d0:	4611      	mov	r1, r2
 80029d2:	2200      	movs	r2, #0
 80029d4:	602a      	str	r2, [r5, #0]
 80029d6:	461a      	mov	r2, r3
 80029d8:	f7fe fdb8 	bl	800154c <_write>
 80029dc:	1c43      	adds	r3, r0, #1
 80029de:	d102      	bne.n	80029e6 <_write_r+0x1e>
 80029e0:	682b      	ldr	r3, [r5, #0]
 80029e2:	b103      	cbz	r3, 80029e6 <_write_r+0x1e>
 80029e4:	6023      	str	r3, [r4, #0]
 80029e6:	bd38      	pop	{r3, r4, r5, pc}
 80029e8:	20000348 	.word	0x20000348

080029ec <__errno>:
 80029ec:	4b01      	ldr	r3, [pc, #4]	@ (80029f4 <__errno+0x8>)
 80029ee:	6818      	ldr	r0, [r3, #0]
 80029f0:	4770      	bx	lr
 80029f2:	bf00      	nop
 80029f4:	2000000c 	.word	0x2000000c

080029f8 <__libc_init_array>:
 80029f8:	b570      	push	{r4, r5, r6, lr}
 80029fa:	4d0d      	ldr	r5, [pc, #52]	@ (8002a30 <__libc_init_array+0x38>)
 80029fc:	4c0d      	ldr	r4, [pc, #52]	@ (8002a34 <__libc_init_array+0x3c>)
 80029fe:	1b64      	subs	r4, r4, r5
 8002a00:	10a4      	asrs	r4, r4, #2
 8002a02:	2600      	movs	r6, #0
 8002a04:	42a6      	cmp	r6, r4
 8002a06:	d109      	bne.n	8002a1c <__libc_init_array+0x24>
 8002a08:	4d0b      	ldr	r5, [pc, #44]	@ (8002a38 <__libc_init_array+0x40>)
 8002a0a:	4c0c      	ldr	r4, [pc, #48]	@ (8002a3c <__libc_init_array+0x44>)
 8002a0c:	f001 febc 	bl	8004788 <_init>
 8002a10:	1b64      	subs	r4, r4, r5
 8002a12:	10a4      	asrs	r4, r4, #2
 8002a14:	2600      	movs	r6, #0
 8002a16:	42a6      	cmp	r6, r4
 8002a18:	d105      	bne.n	8002a26 <__libc_init_array+0x2e>
 8002a1a:	bd70      	pop	{r4, r5, r6, pc}
 8002a1c:	f855 3b04 	ldr.w	r3, [r5], #4
 8002a20:	4798      	blx	r3
 8002a22:	3601      	adds	r6, #1
 8002a24:	e7ee      	b.n	8002a04 <__libc_init_array+0xc>
 8002a26:	f855 3b04 	ldr.w	r3, [r5], #4
 8002a2a:	4798      	blx	r3
 8002a2c:	3601      	adds	r6, #1
 8002a2e:	e7f2      	b.n	8002a16 <__libc_init_array+0x1e>
 8002a30:	08004b18 	.word	0x08004b18
 8002a34:	08004b18 	.word	0x08004b18
 8002a38:	08004b18 	.word	0x08004b18
 8002a3c:	08004b1c 	.word	0x08004b1c

08002a40 <__retarget_lock_init_recursive>:
 8002a40:	4770      	bx	lr

08002a42 <__retarget_lock_acquire_recursive>:
 8002a42:	4770      	bx	lr

08002a44 <__retarget_lock_release_recursive>:
 8002a44:	4770      	bx	lr

08002a46 <quorem>:
 8002a46:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a4a:	6903      	ldr	r3, [r0, #16]
 8002a4c:	690c      	ldr	r4, [r1, #16]
 8002a4e:	42a3      	cmp	r3, r4
 8002a50:	4607      	mov	r7, r0
 8002a52:	db7e      	blt.n	8002b52 <quorem+0x10c>
 8002a54:	3c01      	subs	r4, #1
 8002a56:	f101 0814 	add.w	r8, r1, #20
 8002a5a:	00a3      	lsls	r3, r4, #2
 8002a5c:	f100 0514 	add.w	r5, r0, #20
 8002a60:	9300      	str	r3, [sp, #0]
 8002a62:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002a66:	9301      	str	r3, [sp, #4]
 8002a68:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002a6c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002a70:	3301      	adds	r3, #1
 8002a72:	429a      	cmp	r2, r3
 8002a74:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002a78:	fbb2 f6f3 	udiv	r6, r2, r3
 8002a7c:	d32e      	bcc.n	8002adc <quorem+0x96>
 8002a7e:	f04f 0a00 	mov.w	sl, #0
 8002a82:	46c4      	mov	ip, r8
 8002a84:	46ae      	mov	lr, r5
 8002a86:	46d3      	mov	fp, sl
 8002a88:	f85c 3b04 	ldr.w	r3, [ip], #4
 8002a8c:	b298      	uxth	r0, r3
 8002a8e:	fb06 a000 	mla	r0, r6, r0, sl
 8002a92:	0c02      	lsrs	r2, r0, #16
 8002a94:	0c1b      	lsrs	r3, r3, #16
 8002a96:	fb06 2303 	mla	r3, r6, r3, r2
 8002a9a:	f8de 2000 	ldr.w	r2, [lr]
 8002a9e:	b280      	uxth	r0, r0
 8002aa0:	b292      	uxth	r2, r2
 8002aa2:	1a12      	subs	r2, r2, r0
 8002aa4:	445a      	add	r2, fp
 8002aa6:	f8de 0000 	ldr.w	r0, [lr]
 8002aaa:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8002aae:	b29b      	uxth	r3, r3
 8002ab0:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8002ab4:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8002ab8:	b292      	uxth	r2, r2
 8002aba:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8002abe:	45e1      	cmp	r9, ip
 8002ac0:	f84e 2b04 	str.w	r2, [lr], #4
 8002ac4:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8002ac8:	d2de      	bcs.n	8002a88 <quorem+0x42>
 8002aca:	9b00      	ldr	r3, [sp, #0]
 8002acc:	58eb      	ldr	r3, [r5, r3]
 8002ace:	b92b      	cbnz	r3, 8002adc <quorem+0x96>
 8002ad0:	9b01      	ldr	r3, [sp, #4]
 8002ad2:	3b04      	subs	r3, #4
 8002ad4:	429d      	cmp	r5, r3
 8002ad6:	461a      	mov	r2, r3
 8002ad8:	d32f      	bcc.n	8002b3a <quorem+0xf4>
 8002ada:	613c      	str	r4, [r7, #16]
 8002adc:	4638      	mov	r0, r7
 8002ade:	f001 f979 	bl	8003dd4 <__mcmp>
 8002ae2:	2800      	cmp	r0, #0
 8002ae4:	db25      	blt.n	8002b32 <quorem+0xec>
 8002ae6:	4629      	mov	r1, r5
 8002ae8:	2000      	movs	r0, #0
 8002aea:	f858 2b04 	ldr.w	r2, [r8], #4
 8002aee:	f8d1 c000 	ldr.w	ip, [r1]
 8002af2:	fa1f fe82 	uxth.w	lr, r2
 8002af6:	fa1f f38c 	uxth.w	r3, ip
 8002afa:	eba3 030e 	sub.w	r3, r3, lr
 8002afe:	4403      	add	r3, r0
 8002b00:	0c12      	lsrs	r2, r2, #16
 8002b02:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8002b06:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8002b0a:	b29b      	uxth	r3, r3
 8002b0c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002b10:	45c1      	cmp	r9, r8
 8002b12:	f841 3b04 	str.w	r3, [r1], #4
 8002b16:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002b1a:	d2e6      	bcs.n	8002aea <quorem+0xa4>
 8002b1c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002b20:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002b24:	b922      	cbnz	r2, 8002b30 <quorem+0xea>
 8002b26:	3b04      	subs	r3, #4
 8002b28:	429d      	cmp	r5, r3
 8002b2a:	461a      	mov	r2, r3
 8002b2c:	d30b      	bcc.n	8002b46 <quorem+0x100>
 8002b2e:	613c      	str	r4, [r7, #16]
 8002b30:	3601      	adds	r6, #1
 8002b32:	4630      	mov	r0, r6
 8002b34:	b003      	add	sp, #12
 8002b36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002b3a:	6812      	ldr	r2, [r2, #0]
 8002b3c:	3b04      	subs	r3, #4
 8002b3e:	2a00      	cmp	r2, #0
 8002b40:	d1cb      	bne.n	8002ada <quorem+0x94>
 8002b42:	3c01      	subs	r4, #1
 8002b44:	e7c6      	b.n	8002ad4 <quorem+0x8e>
 8002b46:	6812      	ldr	r2, [r2, #0]
 8002b48:	3b04      	subs	r3, #4
 8002b4a:	2a00      	cmp	r2, #0
 8002b4c:	d1ef      	bne.n	8002b2e <quorem+0xe8>
 8002b4e:	3c01      	subs	r4, #1
 8002b50:	e7ea      	b.n	8002b28 <quorem+0xe2>
 8002b52:	2000      	movs	r0, #0
 8002b54:	e7ee      	b.n	8002b34 <quorem+0xee>
	...

08002b58 <_dtoa_r>:
 8002b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b5c:	69c7      	ldr	r7, [r0, #28]
 8002b5e:	b099      	sub	sp, #100	@ 0x64
 8002b60:	ed8d 0b02 	vstr	d0, [sp, #8]
 8002b64:	ec55 4b10 	vmov	r4, r5, d0
 8002b68:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8002b6a:	9109      	str	r1, [sp, #36]	@ 0x24
 8002b6c:	4683      	mov	fp, r0
 8002b6e:	920e      	str	r2, [sp, #56]	@ 0x38
 8002b70:	9313      	str	r3, [sp, #76]	@ 0x4c
 8002b72:	b97f      	cbnz	r7, 8002b94 <_dtoa_r+0x3c>
 8002b74:	2010      	movs	r0, #16
 8002b76:	f000 fdfd 	bl	8003774 <malloc>
 8002b7a:	4602      	mov	r2, r0
 8002b7c:	f8cb 001c 	str.w	r0, [fp, #28]
 8002b80:	b920      	cbnz	r0, 8002b8c <_dtoa_r+0x34>
 8002b82:	4ba7      	ldr	r3, [pc, #668]	@ (8002e20 <_dtoa_r+0x2c8>)
 8002b84:	21ef      	movs	r1, #239	@ 0xef
 8002b86:	48a7      	ldr	r0, [pc, #668]	@ (8002e24 <_dtoa_r+0x2cc>)
 8002b88:	f001 faf6 	bl	8004178 <__assert_func>
 8002b8c:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8002b90:	6007      	str	r7, [r0, #0]
 8002b92:	60c7      	str	r7, [r0, #12]
 8002b94:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002b98:	6819      	ldr	r1, [r3, #0]
 8002b9a:	b159      	cbz	r1, 8002bb4 <_dtoa_r+0x5c>
 8002b9c:	685a      	ldr	r2, [r3, #4]
 8002b9e:	604a      	str	r2, [r1, #4]
 8002ba0:	2301      	movs	r3, #1
 8002ba2:	4093      	lsls	r3, r2
 8002ba4:	608b      	str	r3, [r1, #8]
 8002ba6:	4658      	mov	r0, fp
 8002ba8:	f000 feda 	bl	8003960 <_Bfree>
 8002bac:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002bb0:	2200      	movs	r2, #0
 8002bb2:	601a      	str	r2, [r3, #0]
 8002bb4:	1e2b      	subs	r3, r5, #0
 8002bb6:	bfb9      	ittee	lt
 8002bb8:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8002bbc:	9303      	strlt	r3, [sp, #12]
 8002bbe:	2300      	movge	r3, #0
 8002bc0:	6033      	strge	r3, [r6, #0]
 8002bc2:	9f03      	ldr	r7, [sp, #12]
 8002bc4:	4b98      	ldr	r3, [pc, #608]	@ (8002e28 <_dtoa_r+0x2d0>)
 8002bc6:	bfbc      	itt	lt
 8002bc8:	2201      	movlt	r2, #1
 8002bca:	6032      	strlt	r2, [r6, #0]
 8002bcc:	43bb      	bics	r3, r7
 8002bce:	d112      	bne.n	8002bf6 <_dtoa_r+0x9e>
 8002bd0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8002bd2:	f242 730f 	movw	r3, #9999	@ 0x270f
 8002bd6:	6013      	str	r3, [r2, #0]
 8002bd8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8002bdc:	4323      	orrs	r3, r4
 8002bde:	f000 854d 	beq.w	800367c <_dtoa_r+0xb24>
 8002be2:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8002be4:	f8df a254 	ldr.w	sl, [pc, #596]	@ 8002e3c <_dtoa_r+0x2e4>
 8002be8:	2b00      	cmp	r3, #0
 8002bea:	f000 854f 	beq.w	800368c <_dtoa_r+0xb34>
 8002bee:	f10a 0303 	add.w	r3, sl, #3
 8002bf2:	f000 bd49 	b.w	8003688 <_dtoa_r+0xb30>
 8002bf6:	ed9d 7b02 	vldr	d7, [sp, #8]
 8002bfa:	2200      	movs	r2, #0
 8002bfc:	ec51 0b17 	vmov	r0, r1, d7
 8002c00:	2300      	movs	r3, #0
 8002c02:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 8002c06:	f7fd ff67 	bl	8000ad8 <__aeabi_dcmpeq>
 8002c0a:	4680      	mov	r8, r0
 8002c0c:	b158      	cbz	r0, 8002c26 <_dtoa_r+0xce>
 8002c0e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8002c10:	2301      	movs	r3, #1
 8002c12:	6013      	str	r3, [r2, #0]
 8002c14:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8002c16:	b113      	cbz	r3, 8002c1e <_dtoa_r+0xc6>
 8002c18:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8002c1a:	4b84      	ldr	r3, [pc, #528]	@ (8002e2c <_dtoa_r+0x2d4>)
 8002c1c:	6013      	str	r3, [r2, #0]
 8002c1e:	f8df a220 	ldr.w	sl, [pc, #544]	@ 8002e40 <_dtoa_r+0x2e8>
 8002c22:	f000 bd33 	b.w	800368c <_dtoa_r+0xb34>
 8002c26:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 8002c2a:	aa16      	add	r2, sp, #88	@ 0x58
 8002c2c:	a917      	add	r1, sp, #92	@ 0x5c
 8002c2e:	4658      	mov	r0, fp
 8002c30:	f001 f980 	bl	8003f34 <__d2b>
 8002c34:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8002c38:	4681      	mov	r9, r0
 8002c3a:	2e00      	cmp	r6, #0
 8002c3c:	d077      	beq.n	8002d2e <_dtoa_r+0x1d6>
 8002c3e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002c40:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 8002c44:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002c48:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002c4c:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8002c50:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8002c54:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8002c58:	4619      	mov	r1, r3
 8002c5a:	2200      	movs	r2, #0
 8002c5c:	4b74      	ldr	r3, [pc, #464]	@ (8002e30 <_dtoa_r+0x2d8>)
 8002c5e:	f7fd fb1b 	bl	8000298 <__aeabi_dsub>
 8002c62:	a369      	add	r3, pc, #420	@ (adr r3, 8002e08 <_dtoa_r+0x2b0>)
 8002c64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c68:	f7fd fcce 	bl	8000608 <__aeabi_dmul>
 8002c6c:	a368      	add	r3, pc, #416	@ (adr r3, 8002e10 <_dtoa_r+0x2b8>)
 8002c6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c72:	f7fd fb13 	bl	800029c <__adddf3>
 8002c76:	4604      	mov	r4, r0
 8002c78:	4630      	mov	r0, r6
 8002c7a:	460d      	mov	r5, r1
 8002c7c:	f7fd fc5a 	bl	8000534 <__aeabi_i2d>
 8002c80:	a365      	add	r3, pc, #404	@ (adr r3, 8002e18 <_dtoa_r+0x2c0>)
 8002c82:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c86:	f7fd fcbf 	bl	8000608 <__aeabi_dmul>
 8002c8a:	4602      	mov	r2, r0
 8002c8c:	460b      	mov	r3, r1
 8002c8e:	4620      	mov	r0, r4
 8002c90:	4629      	mov	r1, r5
 8002c92:	f7fd fb03 	bl	800029c <__adddf3>
 8002c96:	4604      	mov	r4, r0
 8002c98:	460d      	mov	r5, r1
 8002c9a:	f7fd ff65 	bl	8000b68 <__aeabi_d2iz>
 8002c9e:	2200      	movs	r2, #0
 8002ca0:	4607      	mov	r7, r0
 8002ca2:	2300      	movs	r3, #0
 8002ca4:	4620      	mov	r0, r4
 8002ca6:	4629      	mov	r1, r5
 8002ca8:	f7fd ff20 	bl	8000aec <__aeabi_dcmplt>
 8002cac:	b140      	cbz	r0, 8002cc0 <_dtoa_r+0x168>
 8002cae:	4638      	mov	r0, r7
 8002cb0:	f7fd fc40 	bl	8000534 <__aeabi_i2d>
 8002cb4:	4622      	mov	r2, r4
 8002cb6:	462b      	mov	r3, r5
 8002cb8:	f7fd ff0e 	bl	8000ad8 <__aeabi_dcmpeq>
 8002cbc:	b900      	cbnz	r0, 8002cc0 <_dtoa_r+0x168>
 8002cbe:	3f01      	subs	r7, #1
 8002cc0:	2f16      	cmp	r7, #22
 8002cc2:	d851      	bhi.n	8002d68 <_dtoa_r+0x210>
 8002cc4:	4b5b      	ldr	r3, [pc, #364]	@ (8002e34 <_dtoa_r+0x2dc>)
 8002cc6:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002cca:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002cce:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002cd2:	f7fd ff0b 	bl	8000aec <__aeabi_dcmplt>
 8002cd6:	2800      	cmp	r0, #0
 8002cd8:	d048      	beq.n	8002d6c <_dtoa_r+0x214>
 8002cda:	3f01      	subs	r7, #1
 8002cdc:	2300      	movs	r3, #0
 8002cde:	9312      	str	r3, [sp, #72]	@ 0x48
 8002ce0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002ce2:	1b9b      	subs	r3, r3, r6
 8002ce4:	1e5a      	subs	r2, r3, #1
 8002ce6:	bf44      	itt	mi
 8002ce8:	f1c3 0801 	rsbmi	r8, r3, #1
 8002cec:	2300      	movmi	r3, #0
 8002cee:	9208      	str	r2, [sp, #32]
 8002cf0:	bf54      	ite	pl
 8002cf2:	f04f 0800 	movpl.w	r8, #0
 8002cf6:	9308      	strmi	r3, [sp, #32]
 8002cf8:	2f00      	cmp	r7, #0
 8002cfa:	db39      	blt.n	8002d70 <_dtoa_r+0x218>
 8002cfc:	9b08      	ldr	r3, [sp, #32]
 8002cfe:	970f      	str	r7, [sp, #60]	@ 0x3c
 8002d00:	443b      	add	r3, r7
 8002d02:	9308      	str	r3, [sp, #32]
 8002d04:	2300      	movs	r3, #0
 8002d06:	930a      	str	r3, [sp, #40]	@ 0x28
 8002d08:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002d0a:	2b09      	cmp	r3, #9
 8002d0c:	d864      	bhi.n	8002dd8 <_dtoa_r+0x280>
 8002d0e:	2b05      	cmp	r3, #5
 8002d10:	bfc4      	itt	gt
 8002d12:	3b04      	subgt	r3, #4
 8002d14:	9309      	strgt	r3, [sp, #36]	@ 0x24
 8002d16:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002d18:	f1a3 0302 	sub.w	r3, r3, #2
 8002d1c:	bfcc      	ite	gt
 8002d1e:	2400      	movgt	r4, #0
 8002d20:	2401      	movle	r4, #1
 8002d22:	2b03      	cmp	r3, #3
 8002d24:	d863      	bhi.n	8002dee <_dtoa_r+0x296>
 8002d26:	e8df f003 	tbb	[pc, r3]
 8002d2a:	372a      	.short	0x372a
 8002d2c:	5535      	.short	0x5535
 8002d2e:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 8002d32:	441e      	add	r6, r3
 8002d34:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8002d38:	2b20      	cmp	r3, #32
 8002d3a:	bfc1      	itttt	gt
 8002d3c:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8002d40:	409f      	lslgt	r7, r3
 8002d42:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8002d46:	fa24 f303 	lsrgt.w	r3, r4, r3
 8002d4a:	bfd6      	itet	le
 8002d4c:	f1c3 0320 	rsble	r3, r3, #32
 8002d50:	ea47 0003 	orrgt.w	r0, r7, r3
 8002d54:	fa04 f003 	lslle.w	r0, r4, r3
 8002d58:	f7fd fbdc 	bl	8000514 <__aeabi_ui2d>
 8002d5c:	2201      	movs	r2, #1
 8002d5e:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8002d62:	3e01      	subs	r6, #1
 8002d64:	9214      	str	r2, [sp, #80]	@ 0x50
 8002d66:	e777      	b.n	8002c58 <_dtoa_r+0x100>
 8002d68:	2301      	movs	r3, #1
 8002d6a:	e7b8      	b.n	8002cde <_dtoa_r+0x186>
 8002d6c:	9012      	str	r0, [sp, #72]	@ 0x48
 8002d6e:	e7b7      	b.n	8002ce0 <_dtoa_r+0x188>
 8002d70:	427b      	negs	r3, r7
 8002d72:	930a      	str	r3, [sp, #40]	@ 0x28
 8002d74:	2300      	movs	r3, #0
 8002d76:	eba8 0807 	sub.w	r8, r8, r7
 8002d7a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8002d7c:	e7c4      	b.n	8002d08 <_dtoa_r+0x1b0>
 8002d7e:	2300      	movs	r3, #0
 8002d80:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002d82:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002d84:	2b00      	cmp	r3, #0
 8002d86:	dc35      	bgt.n	8002df4 <_dtoa_r+0x29c>
 8002d88:	2301      	movs	r3, #1
 8002d8a:	9300      	str	r3, [sp, #0]
 8002d8c:	9307      	str	r3, [sp, #28]
 8002d8e:	461a      	mov	r2, r3
 8002d90:	920e      	str	r2, [sp, #56]	@ 0x38
 8002d92:	e00b      	b.n	8002dac <_dtoa_r+0x254>
 8002d94:	2301      	movs	r3, #1
 8002d96:	e7f3      	b.n	8002d80 <_dtoa_r+0x228>
 8002d98:	2300      	movs	r3, #0
 8002d9a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002d9c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002d9e:	18fb      	adds	r3, r7, r3
 8002da0:	9300      	str	r3, [sp, #0]
 8002da2:	3301      	adds	r3, #1
 8002da4:	2b01      	cmp	r3, #1
 8002da6:	9307      	str	r3, [sp, #28]
 8002da8:	bfb8      	it	lt
 8002daa:	2301      	movlt	r3, #1
 8002dac:	f8db 001c 	ldr.w	r0, [fp, #28]
 8002db0:	2100      	movs	r1, #0
 8002db2:	2204      	movs	r2, #4
 8002db4:	f102 0514 	add.w	r5, r2, #20
 8002db8:	429d      	cmp	r5, r3
 8002dba:	d91f      	bls.n	8002dfc <_dtoa_r+0x2a4>
 8002dbc:	6041      	str	r1, [r0, #4]
 8002dbe:	4658      	mov	r0, fp
 8002dc0:	f000 fd8e 	bl	80038e0 <_Balloc>
 8002dc4:	4682      	mov	sl, r0
 8002dc6:	2800      	cmp	r0, #0
 8002dc8:	d13c      	bne.n	8002e44 <_dtoa_r+0x2ec>
 8002dca:	4b1b      	ldr	r3, [pc, #108]	@ (8002e38 <_dtoa_r+0x2e0>)
 8002dcc:	4602      	mov	r2, r0
 8002dce:	f240 11af 	movw	r1, #431	@ 0x1af
 8002dd2:	e6d8      	b.n	8002b86 <_dtoa_r+0x2e>
 8002dd4:	2301      	movs	r3, #1
 8002dd6:	e7e0      	b.n	8002d9a <_dtoa_r+0x242>
 8002dd8:	2401      	movs	r4, #1
 8002dda:	2300      	movs	r3, #0
 8002ddc:	9309      	str	r3, [sp, #36]	@ 0x24
 8002dde:	940b      	str	r4, [sp, #44]	@ 0x2c
 8002de0:	f04f 33ff 	mov.w	r3, #4294967295
 8002de4:	9300      	str	r3, [sp, #0]
 8002de6:	9307      	str	r3, [sp, #28]
 8002de8:	2200      	movs	r2, #0
 8002dea:	2312      	movs	r3, #18
 8002dec:	e7d0      	b.n	8002d90 <_dtoa_r+0x238>
 8002dee:	2301      	movs	r3, #1
 8002df0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002df2:	e7f5      	b.n	8002de0 <_dtoa_r+0x288>
 8002df4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002df6:	9300      	str	r3, [sp, #0]
 8002df8:	9307      	str	r3, [sp, #28]
 8002dfa:	e7d7      	b.n	8002dac <_dtoa_r+0x254>
 8002dfc:	3101      	adds	r1, #1
 8002dfe:	0052      	lsls	r2, r2, #1
 8002e00:	e7d8      	b.n	8002db4 <_dtoa_r+0x25c>
 8002e02:	bf00      	nop
 8002e04:	f3af 8000 	nop.w
 8002e08:	636f4361 	.word	0x636f4361
 8002e0c:	3fd287a7 	.word	0x3fd287a7
 8002e10:	8b60c8b3 	.word	0x8b60c8b3
 8002e14:	3fc68a28 	.word	0x3fc68a28
 8002e18:	509f79fb 	.word	0x509f79fb
 8002e1c:	3fd34413 	.word	0x3fd34413
 8002e20:	080047e1 	.word	0x080047e1
 8002e24:	080047f8 	.word	0x080047f8
 8002e28:	7ff00000 	.word	0x7ff00000
 8002e2c:	080047b1 	.word	0x080047b1
 8002e30:	3ff80000 	.word	0x3ff80000
 8002e34:	080048f0 	.word	0x080048f0
 8002e38:	08004850 	.word	0x08004850
 8002e3c:	080047dd 	.word	0x080047dd
 8002e40:	080047b0 	.word	0x080047b0
 8002e44:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002e48:	6018      	str	r0, [r3, #0]
 8002e4a:	9b07      	ldr	r3, [sp, #28]
 8002e4c:	2b0e      	cmp	r3, #14
 8002e4e:	f200 80a4 	bhi.w	8002f9a <_dtoa_r+0x442>
 8002e52:	2c00      	cmp	r4, #0
 8002e54:	f000 80a1 	beq.w	8002f9a <_dtoa_r+0x442>
 8002e58:	2f00      	cmp	r7, #0
 8002e5a:	dd33      	ble.n	8002ec4 <_dtoa_r+0x36c>
 8002e5c:	4bad      	ldr	r3, [pc, #692]	@ (8003114 <_dtoa_r+0x5bc>)
 8002e5e:	f007 020f 	and.w	r2, r7, #15
 8002e62:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002e66:	ed93 7b00 	vldr	d7, [r3]
 8002e6a:	05f8      	lsls	r0, r7, #23
 8002e6c:	ed8d 7b04 	vstr	d7, [sp, #16]
 8002e70:	ea4f 1427 	mov.w	r4, r7, asr #4
 8002e74:	d516      	bpl.n	8002ea4 <_dtoa_r+0x34c>
 8002e76:	4ba8      	ldr	r3, [pc, #672]	@ (8003118 <_dtoa_r+0x5c0>)
 8002e78:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002e7c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002e80:	f7fd fcec 	bl	800085c <__aeabi_ddiv>
 8002e84:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002e88:	f004 040f 	and.w	r4, r4, #15
 8002e8c:	2603      	movs	r6, #3
 8002e8e:	4da2      	ldr	r5, [pc, #648]	@ (8003118 <_dtoa_r+0x5c0>)
 8002e90:	b954      	cbnz	r4, 8002ea8 <_dtoa_r+0x350>
 8002e92:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002e96:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002e9a:	f7fd fcdf 	bl	800085c <__aeabi_ddiv>
 8002e9e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002ea2:	e028      	b.n	8002ef6 <_dtoa_r+0x39e>
 8002ea4:	2602      	movs	r6, #2
 8002ea6:	e7f2      	b.n	8002e8e <_dtoa_r+0x336>
 8002ea8:	07e1      	lsls	r1, r4, #31
 8002eaa:	d508      	bpl.n	8002ebe <_dtoa_r+0x366>
 8002eac:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002eb0:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002eb4:	f7fd fba8 	bl	8000608 <__aeabi_dmul>
 8002eb8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002ebc:	3601      	adds	r6, #1
 8002ebe:	1064      	asrs	r4, r4, #1
 8002ec0:	3508      	adds	r5, #8
 8002ec2:	e7e5      	b.n	8002e90 <_dtoa_r+0x338>
 8002ec4:	f000 80d2 	beq.w	800306c <_dtoa_r+0x514>
 8002ec8:	427c      	negs	r4, r7
 8002eca:	4b92      	ldr	r3, [pc, #584]	@ (8003114 <_dtoa_r+0x5bc>)
 8002ecc:	4d92      	ldr	r5, [pc, #584]	@ (8003118 <_dtoa_r+0x5c0>)
 8002ece:	f004 020f 	and.w	r2, r4, #15
 8002ed2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002ed6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002eda:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002ede:	f7fd fb93 	bl	8000608 <__aeabi_dmul>
 8002ee2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002ee6:	1124      	asrs	r4, r4, #4
 8002ee8:	2300      	movs	r3, #0
 8002eea:	2602      	movs	r6, #2
 8002eec:	2c00      	cmp	r4, #0
 8002eee:	f040 80b2 	bne.w	8003056 <_dtoa_r+0x4fe>
 8002ef2:	2b00      	cmp	r3, #0
 8002ef4:	d1d3      	bne.n	8002e9e <_dtoa_r+0x346>
 8002ef6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8002ef8:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002efc:	2b00      	cmp	r3, #0
 8002efe:	f000 80b7 	beq.w	8003070 <_dtoa_r+0x518>
 8002f02:	4b86      	ldr	r3, [pc, #536]	@ (800311c <_dtoa_r+0x5c4>)
 8002f04:	2200      	movs	r2, #0
 8002f06:	4620      	mov	r0, r4
 8002f08:	4629      	mov	r1, r5
 8002f0a:	f7fd fdef 	bl	8000aec <__aeabi_dcmplt>
 8002f0e:	2800      	cmp	r0, #0
 8002f10:	f000 80ae 	beq.w	8003070 <_dtoa_r+0x518>
 8002f14:	9b07      	ldr	r3, [sp, #28]
 8002f16:	2b00      	cmp	r3, #0
 8002f18:	f000 80aa 	beq.w	8003070 <_dtoa_r+0x518>
 8002f1c:	9b00      	ldr	r3, [sp, #0]
 8002f1e:	2b00      	cmp	r3, #0
 8002f20:	dd37      	ble.n	8002f92 <_dtoa_r+0x43a>
 8002f22:	1e7b      	subs	r3, r7, #1
 8002f24:	9304      	str	r3, [sp, #16]
 8002f26:	4620      	mov	r0, r4
 8002f28:	4b7d      	ldr	r3, [pc, #500]	@ (8003120 <_dtoa_r+0x5c8>)
 8002f2a:	2200      	movs	r2, #0
 8002f2c:	4629      	mov	r1, r5
 8002f2e:	f7fd fb6b 	bl	8000608 <__aeabi_dmul>
 8002f32:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002f36:	9c00      	ldr	r4, [sp, #0]
 8002f38:	3601      	adds	r6, #1
 8002f3a:	4630      	mov	r0, r6
 8002f3c:	f7fd fafa 	bl	8000534 <__aeabi_i2d>
 8002f40:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002f44:	f7fd fb60 	bl	8000608 <__aeabi_dmul>
 8002f48:	4b76      	ldr	r3, [pc, #472]	@ (8003124 <_dtoa_r+0x5cc>)
 8002f4a:	2200      	movs	r2, #0
 8002f4c:	f7fd f9a6 	bl	800029c <__adddf3>
 8002f50:	4605      	mov	r5, r0
 8002f52:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8002f56:	2c00      	cmp	r4, #0
 8002f58:	f040 808d 	bne.w	8003076 <_dtoa_r+0x51e>
 8002f5c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002f60:	4b71      	ldr	r3, [pc, #452]	@ (8003128 <_dtoa_r+0x5d0>)
 8002f62:	2200      	movs	r2, #0
 8002f64:	f7fd f998 	bl	8000298 <__aeabi_dsub>
 8002f68:	4602      	mov	r2, r0
 8002f6a:	460b      	mov	r3, r1
 8002f6c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002f70:	462a      	mov	r2, r5
 8002f72:	4633      	mov	r3, r6
 8002f74:	f7fd fdd8 	bl	8000b28 <__aeabi_dcmpgt>
 8002f78:	2800      	cmp	r0, #0
 8002f7a:	f040 828b 	bne.w	8003494 <_dtoa_r+0x93c>
 8002f7e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002f82:	462a      	mov	r2, r5
 8002f84:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8002f88:	f7fd fdb0 	bl	8000aec <__aeabi_dcmplt>
 8002f8c:	2800      	cmp	r0, #0
 8002f8e:	f040 8128 	bne.w	80031e2 <_dtoa_r+0x68a>
 8002f92:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8002f96:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8002f9a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8002f9c:	2b00      	cmp	r3, #0
 8002f9e:	f2c0 815a 	blt.w	8003256 <_dtoa_r+0x6fe>
 8002fa2:	2f0e      	cmp	r7, #14
 8002fa4:	f300 8157 	bgt.w	8003256 <_dtoa_r+0x6fe>
 8002fa8:	4b5a      	ldr	r3, [pc, #360]	@ (8003114 <_dtoa_r+0x5bc>)
 8002faa:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002fae:	ed93 7b00 	vldr	d7, [r3]
 8002fb2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002fb4:	2b00      	cmp	r3, #0
 8002fb6:	ed8d 7b00 	vstr	d7, [sp]
 8002fba:	da03      	bge.n	8002fc4 <_dtoa_r+0x46c>
 8002fbc:	9b07      	ldr	r3, [sp, #28]
 8002fbe:	2b00      	cmp	r3, #0
 8002fc0:	f340 8101 	ble.w	80031c6 <_dtoa_r+0x66e>
 8002fc4:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002fc8:	4656      	mov	r6, sl
 8002fca:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002fce:	4620      	mov	r0, r4
 8002fd0:	4629      	mov	r1, r5
 8002fd2:	f7fd fc43 	bl	800085c <__aeabi_ddiv>
 8002fd6:	f7fd fdc7 	bl	8000b68 <__aeabi_d2iz>
 8002fda:	4680      	mov	r8, r0
 8002fdc:	f7fd faaa 	bl	8000534 <__aeabi_i2d>
 8002fe0:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002fe4:	f7fd fb10 	bl	8000608 <__aeabi_dmul>
 8002fe8:	4602      	mov	r2, r0
 8002fea:	460b      	mov	r3, r1
 8002fec:	4620      	mov	r0, r4
 8002fee:	4629      	mov	r1, r5
 8002ff0:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8002ff4:	f7fd f950 	bl	8000298 <__aeabi_dsub>
 8002ff8:	f806 4b01 	strb.w	r4, [r6], #1
 8002ffc:	9d07      	ldr	r5, [sp, #28]
 8002ffe:	eba6 040a 	sub.w	r4, r6, sl
 8003002:	42a5      	cmp	r5, r4
 8003004:	4602      	mov	r2, r0
 8003006:	460b      	mov	r3, r1
 8003008:	f040 8117 	bne.w	800323a <_dtoa_r+0x6e2>
 800300c:	f7fd f946 	bl	800029c <__adddf3>
 8003010:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003014:	4604      	mov	r4, r0
 8003016:	460d      	mov	r5, r1
 8003018:	f7fd fd86 	bl	8000b28 <__aeabi_dcmpgt>
 800301c:	2800      	cmp	r0, #0
 800301e:	f040 80f9 	bne.w	8003214 <_dtoa_r+0x6bc>
 8003022:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003026:	4620      	mov	r0, r4
 8003028:	4629      	mov	r1, r5
 800302a:	f7fd fd55 	bl	8000ad8 <__aeabi_dcmpeq>
 800302e:	b118      	cbz	r0, 8003038 <_dtoa_r+0x4e0>
 8003030:	f018 0f01 	tst.w	r8, #1
 8003034:	f040 80ee 	bne.w	8003214 <_dtoa_r+0x6bc>
 8003038:	4649      	mov	r1, r9
 800303a:	4658      	mov	r0, fp
 800303c:	f000 fc90 	bl	8003960 <_Bfree>
 8003040:	2300      	movs	r3, #0
 8003042:	7033      	strb	r3, [r6, #0]
 8003044:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8003046:	3701      	adds	r7, #1
 8003048:	601f      	str	r7, [r3, #0]
 800304a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800304c:	2b00      	cmp	r3, #0
 800304e:	f000 831d 	beq.w	800368c <_dtoa_r+0xb34>
 8003052:	601e      	str	r6, [r3, #0]
 8003054:	e31a      	b.n	800368c <_dtoa_r+0xb34>
 8003056:	07e2      	lsls	r2, r4, #31
 8003058:	d505      	bpl.n	8003066 <_dtoa_r+0x50e>
 800305a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800305e:	f7fd fad3 	bl	8000608 <__aeabi_dmul>
 8003062:	3601      	adds	r6, #1
 8003064:	2301      	movs	r3, #1
 8003066:	1064      	asrs	r4, r4, #1
 8003068:	3508      	adds	r5, #8
 800306a:	e73f      	b.n	8002eec <_dtoa_r+0x394>
 800306c:	2602      	movs	r6, #2
 800306e:	e742      	b.n	8002ef6 <_dtoa_r+0x39e>
 8003070:	9c07      	ldr	r4, [sp, #28]
 8003072:	9704      	str	r7, [sp, #16]
 8003074:	e761      	b.n	8002f3a <_dtoa_r+0x3e2>
 8003076:	4b27      	ldr	r3, [pc, #156]	@ (8003114 <_dtoa_r+0x5bc>)
 8003078:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800307a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800307e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003082:	4454      	add	r4, sl
 8003084:	2900      	cmp	r1, #0
 8003086:	d053      	beq.n	8003130 <_dtoa_r+0x5d8>
 8003088:	4928      	ldr	r1, [pc, #160]	@ (800312c <_dtoa_r+0x5d4>)
 800308a:	2000      	movs	r0, #0
 800308c:	f7fd fbe6 	bl	800085c <__aeabi_ddiv>
 8003090:	4633      	mov	r3, r6
 8003092:	462a      	mov	r2, r5
 8003094:	f7fd f900 	bl	8000298 <__aeabi_dsub>
 8003098:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800309c:	4656      	mov	r6, sl
 800309e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80030a2:	f7fd fd61 	bl	8000b68 <__aeabi_d2iz>
 80030a6:	4605      	mov	r5, r0
 80030a8:	f7fd fa44 	bl	8000534 <__aeabi_i2d>
 80030ac:	4602      	mov	r2, r0
 80030ae:	460b      	mov	r3, r1
 80030b0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80030b4:	f7fd f8f0 	bl	8000298 <__aeabi_dsub>
 80030b8:	3530      	adds	r5, #48	@ 0x30
 80030ba:	4602      	mov	r2, r0
 80030bc:	460b      	mov	r3, r1
 80030be:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80030c2:	f806 5b01 	strb.w	r5, [r6], #1
 80030c6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80030ca:	f7fd fd0f 	bl	8000aec <__aeabi_dcmplt>
 80030ce:	2800      	cmp	r0, #0
 80030d0:	d171      	bne.n	80031b6 <_dtoa_r+0x65e>
 80030d2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80030d6:	4911      	ldr	r1, [pc, #68]	@ (800311c <_dtoa_r+0x5c4>)
 80030d8:	2000      	movs	r0, #0
 80030da:	f7fd f8dd 	bl	8000298 <__aeabi_dsub>
 80030de:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80030e2:	f7fd fd03 	bl	8000aec <__aeabi_dcmplt>
 80030e6:	2800      	cmp	r0, #0
 80030e8:	f040 8095 	bne.w	8003216 <_dtoa_r+0x6be>
 80030ec:	42a6      	cmp	r6, r4
 80030ee:	f43f af50 	beq.w	8002f92 <_dtoa_r+0x43a>
 80030f2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 80030f6:	4b0a      	ldr	r3, [pc, #40]	@ (8003120 <_dtoa_r+0x5c8>)
 80030f8:	2200      	movs	r2, #0
 80030fa:	f7fd fa85 	bl	8000608 <__aeabi_dmul>
 80030fe:	4b08      	ldr	r3, [pc, #32]	@ (8003120 <_dtoa_r+0x5c8>)
 8003100:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003104:	2200      	movs	r2, #0
 8003106:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800310a:	f7fd fa7d 	bl	8000608 <__aeabi_dmul>
 800310e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003112:	e7c4      	b.n	800309e <_dtoa_r+0x546>
 8003114:	080048f0 	.word	0x080048f0
 8003118:	080048c8 	.word	0x080048c8
 800311c:	3ff00000 	.word	0x3ff00000
 8003120:	40240000 	.word	0x40240000
 8003124:	401c0000 	.word	0x401c0000
 8003128:	40140000 	.word	0x40140000
 800312c:	3fe00000 	.word	0x3fe00000
 8003130:	4631      	mov	r1, r6
 8003132:	4628      	mov	r0, r5
 8003134:	f7fd fa68 	bl	8000608 <__aeabi_dmul>
 8003138:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800313c:	9415      	str	r4, [sp, #84]	@ 0x54
 800313e:	4656      	mov	r6, sl
 8003140:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003144:	f7fd fd10 	bl	8000b68 <__aeabi_d2iz>
 8003148:	4605      	mov	r5, r0
 800314a:	f7fd f9f3 	bl	8000534 <__aeabi_i2d>
 800314e:	4602      	mov	r2, r0
 8003150:	460b      	mov	r3, r1
 8003152:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003156:	f7fd f89f 	bl	8000298 <__aeabi_dsub>
 800315a:	3530      	adds	r5, #48	@ 0x30
 800315c:	f806 5b01 	strb.w	r5, [r6], #1
 8003160:	4602      	mov	r2, r0
 8003162:	460b      	mov	r3, r1
 8003164:	42a6      	cmp	r6, r4
 8003166:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800316a:	f04f 0200 	mov.w	r2, #0
 800316e:	d124      	bne.n	80031ba <_dtoa_r+0x662>
 8003170:	4bac      	ldr	r3, [pc, #688]	@ (8003424 <_dtoa_r+0x8cc>)
 8003172:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003176:	f7fd f891 	bl	800029c <__adddf3>
 800317a:	4602      	mov	r2, r0
 800317c:	460b      	mov	r3, r1
 800317e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003182:	f7fd fcd1 	bl	8000b28 <__aeabi_dcmpgt>
 8003186:	2800      	cmp	r0, #0
 8003188:	d145      	bne.n	8003216 <_dtoa_r+0x6be>
 800318a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800318e:	49a5      	ldr	r1, [pc, #660]	@ (8003424 <_dtoa_r+0x8cc>)
 8003190:	2000      	movs	r0, #0
 8003192:	f7fd f881 	bl	8000298 <__aeabi_dsub>
 8003196:	4602      	mov	r2, r0
 8003198:	460b      	mov	r3, r1
 800319a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800319e:	f7fd fca5 	bl	8000aec <__aeabi_dcmplt>
 80031a2:	2800      	cmp	r0, #0
 80031a4:	f43f aef5 	beq.w	8002f92 <_dtoa_r+0x43a>
 80031a8:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 80031aa:	1e73      	subs	r3, r6, #1
 80031ac:	9315      	str	r3, [sp, #84]	@ 0x54
 80031ae:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80031b2:	2b30      	cmp	r3, #48	@ 0x30
 80031b4:	d0f8      	beq.n	80031a8 <_dtoa_r+0x650>
 80031b6:	9f04      	ldr	r7, [sp, #16]
 80031b8:	e73e      	b.n	8003038 <_dtoa_r+0x4e0>
 80031ba:	4b9b      	ldr	r3, [pc, #620]	@ (8003428 <_dtoa_r+0x8d0>)
 80031bc:	f7fd fa24 	bl	8000608 <__aeabi_dmul>
 80031c0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80031c4:	e7bc      	b.n	8003140 <_dtoa_r+0x5e8>
 80031c6:	d10c      	bne.n	80031e2 <_dtoa_r+0x68a>
 80031c8:	4b98      	ldr	r3, [pc, #608]	@ (800342c <_dtoa_r+0x8d4>)
 80031ca:	2200      	movs	r2, #0
 80031cc:	e9dd 0100 	ldrd	r0, r1, [sp]
 80031d0:	f7fd fa1a 	bl	8000608 <__aeabi_dmul>
 80031d4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80031d8:	f7fd fc9c 	bl	8000b14 <__aeabi_dcmpge>
 80031dc:	2800      	cmp	r0, #0
 80031de:	f000 8157 	beq.w	8003490 <_dtoa_r+0x938>
 80031e2:	2400      	movs	r4, #0
 80031e4:	4625      	mov	r5, r4
 80031e6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80031e8:	43db      	mvns	r3, r3
 80031ea:	9304      	str	r3, [sp, #16]
 80031ec:	4656      	mov	r6, sl
 80031ee:	2700      	movs	r7, #0
 80031f0:	4621      	mov	r1, r4
 80031f2:	4658      	mov	r0, fp
 80031f4:	f000 fbb4 	bl	8003960 <_Bfree>
 80031f8:	2d00      	cmp	r5, #0
 80031fa:	d0dc      	beq.n	80031b6 <_dtoa_r+0x65e>
 80031fc:	b12f      	cbz	r7, 800320a <_dtoa_r+0x6b2>
 80031fe:	42af      	cmp	r7, r5
 8003200:	d003      	beq.n	800320a <_dtoa_r+0x6b2>
 8003202:	4639      	mov	r1, r7
 8003204:	4658      	mov	r0, fp
 8003206:	f000 fbab 	bl	8003960 <_Bfree>
 800320a:	4629      	mov	r1, r5
 800320c:	4658      	mov	r0, fp
 800320e:	f000 fba7 	bl	8003960 <_Bfree>
 8003212:	e7d0      	b.n	80031b6 <_dtoa_r+0x65e>
 8003214:	9704      	str	r7, [sp, #16]
 8003216:	4633      	mov	r3, r6
 8003218:	461e      	mov	r6, r3
 800321a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800321e:	2a39      	cmp	r2, #57	@ 0x39
 8003220:	d107      	bne.n	8003232 <_dtoa_r+0x6da>
 8003222:	459a      	cmp	sl, r3
 8003224:	d1f8      	bne.n	8003218 <_dtoa_r+0x6c0>
 8003226:	9a04      	ldr	r2, [sp, #16]
 8003228:	3201      	adds	r2, #1
 800322a:	9204      	str	r2, [sp, #16]
 800322c:	2230      	movs	r2, #48	@ 0x30
 800322e:	f88a 2000 	strb.w	r2, [sl]
 8003232:	781a      	ldrb	r2, [r3, #0]
 8003234:	3201      	adds	r2, #1
 8003236:	701a      	strb	r2, [r3, #0]
 8003238:	e7bd      	b.n	80031b6 <_dtoa_r+0x65e>
 800323a:	4b7b      	ldr	r3, [pc, #492]	@ (8003428 <_dtoa_r+0x8d0>)
 800323c:	2200      	movs	r2, #0
 800323e:	f7fd f9e3 	bl	8000608 <__aeabi_dmul>
 8003242:	2200      	movs	r2, #0
 8003244:	2300      	movs	r3, #0
 8003246:	4604      	mov	r4, r0
 8003248:	460d      	mov	r5, r1
 800324a:	f7fd fc45 	bl	8000ad8 <__aeabi_dcmpeq>
 800324e:	2800      	cmp	r0, #0
 8003250:	f43f aebb 	beq.w	8002fca <_dtoa_r+0x472>
 8003254:	e6f0      	b.n	8003038 <_dtoa_r+0x4e0>
 8003256:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8003258:	2a00      	cmp	r2, #0
 800325a:	f000 80db 	beq.w	8003414 <_dtoa_r+0x8bc>
 800325e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003260:	2a01      	cmp	r2, #1
 8003262:	f300 80bf 	bgt.w	80033e4 <_dtoa_r+0x88c>
 8003266:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8003268:	2a00      	cmp	r2, #0
 800326a:	f000 80b7 	beq.w	80033dc <_dtoa_r+0x884>
 800326e:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8003272:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003274:	4646      	mov	r6, r8
 8003276:	9a08      	ldr	r2, [sp, #32]
 8003278:	2101      	movs	r1, #1
 800327a:	441a      	add	r2, r3
 800327c:	4658      	mov	r0, fp
 800327e:	4498      	add	r8, r3
 8003280:	9208      	str	r2, [sp, #32]
 8003282:	f000 fc21 	bl	8003ac8 <__i2b>
 8003286:	4605      	mov	r5, r0
 8003288:	b15e      	cbz	r6, 80032a2 <_dtoa_r+0x74a>
 800328a:	9b08      	ldr	r3, [sp, #32]
 800328c:	2b00      	cmp	r3, #0
 800328e:	dd08      	ble.n	80032a2 <_dtoa_r+0x74a>
 8003290:	42b3      	cmp	r3, r6
 8003292:	9a08      	ldr	r2, [sp, #32]
 8003294:	bfa8      	it	ge
 8003296:	4633      	movge	r3, r6
 8003298:	eba8 0803 	sub.w	r8, r8, r3
 800329c:	1af6      	subs	r6, r6, r3
 800329e:	1ad3      	subs	r3, r2, r3
 80032a0:	9308      	str	r3, [sp, #32]
 80032a2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80032a4:	b1f3      	cbz	r3, 80032e4 <_dtoa_r+0x78c>
 80032a6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80032a8:	2b00      	cmp	r3, #0
 80032aa:	f000 80b7 	beq.w	800341c <_dtoa_r+0x8c4>
 80032ae:	b18c      	cbz	r4, 80032d4 <_dtoa_r+0x77c>
 80032b0:	4629      	mov	r1, r5
 80032b2:	4622      	mov	r2, r4
 80032b4:	4658      	mov	r0, fp
 80032b6:	f000 fcc7 	bl	8003c48 <__pow5mult>
 80032ba:	464a      	mov	r2, r9
 80032bc:	4601      	mov	r1, r0
 80032be:	4605      	mov	r5, r0
 80032c0:	4658      	mov	r0, fp
 80032c2:	f000 fc17 	bl	8003af4 <__multiply>
 80032c6:	4649      	mov	r1, r9
 80032c8:	9004      	str	r0, [sp, #16]
 80032ca:	4658      	mov	r0, fp
 80032cc:	f000 fb48 	bl	8003960 <_Bfree>
 80032d0:	9b04      	ldr	r3, [sp, #16]
 80032d2:	4699      	mov	r9, r3
 80032d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80032d6:	1b1a      	subs	r2, r3, r4
 80032d8:	d004      	beq.n	80032e4 <_dtoa_r+0x78c>
 80032da:	4649      	mov	r1, r9
 80032dc:	4658      	mov	r0, fp
 80032de:	f000 fcb3 	bl	8003c48 <__pow5mult>
 80032e2:	4681      	mov	r9, r0
 80032e4:	2101      	movs	r1, #1
 80032e6:	4658      	mov	r0, fp
 80032e8:	f000 fbee 	bl	8003ac8 <__i2b>
 80032ec:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80032ee:	4604      	mov	r4, r0
 80032f0:	2b00      	cmp	r3, #0
 80032f2:	f000 81cf 	beq.w	8003694 <_dtoa_r+0xb3c>
 80032f6:	461a      	mov	r2, r3
 80032f8:	4601      	mov	r1, r0
 80032fa:	4658      	mov	r0, fp
 80032fc:	f000 fca4 	bl	8003c48 <__pow5mult>
 8003300:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003302:	2b01      	cmp	r3, #1
 8003304:	4604      	mov	r4, r0
 8003306:	f300 8095 	bgt.w	8003434 <_dtoa_r+0x8dc>
 800330a:	9b02      	ldr	r3, [sp, #8]
 800330c:	2b00      	cmp	r3, #0
 800330e:	f040 8087 	bne.w	8003420 <_dtoa_r+0x8c8>
 8003312:	9b03      	ldr	r3, [sp, #12]
 8003314:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003318:	2b00      	cmp	r3, #0
 800331a:	f040 8089 	bne.w	8003430 <_dtoa_r+0x8d8>
 800331e:	9b03      	ldr	r3, [sp, #12]
 8003320:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003324:	0d1b      	lsrs	r3, r3, #20
 8003326:	051b      	lsls	r3, r3, #20
 8003328:	b12b      	cbz	r3, 8003336 <_dtoa_r+0x7de>
 800332a:	9b08      	ldr	r3, [sp, #32]
 800332c:	3301      	adds	r3, #1
 800332e:	9308      	str	r3, [sp, #32]
 8003330:	f108 0801 	add.w	r8, r8, #1
 8003334:	2301      	movs	r3, #1
 8003336:	930a      	str	r3, [sp, #40]	@ 0x28
 8003338:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800333a:	2b00      	cmp	r3, #0
 800333c:	f000 81b0 	beq.w	80036a0 <_dtoa_r+0xb48>
 8003340:	6923      	ldr	r3, [r4, #16]
 8003342:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8003346:	6918      	ldr	r0, [r3, #16]
 8003348:	f000 fb72 	bl	8003a30 <__hi0bits>
 800334c:	f1c0 0020 	rsb	r0, r0, #32
 8003350:	9b08      	ldr	r3, [sp, #32]
 8003352:	4418      	add	r0, r3
 8003354:	f010 001f 	ands.w	r0, r0, #31
 8003358:	d077      	beq.n	800344a <_dtoa_r+0x8f2>
 800335a:	f1c0 0320 	rsb	r3, r0, #32
 800335e:	2b04      	cmp	r3, #4
 8003360:	dd6b      	ble.n	800343a <_dtoa_r+0x8e2>
 8003362:	9b08      	ldr	r3, [sp, #32]
 8003364:	f1c0 001c 	rsb	r0, r0, #28
 8003368:	4403      	add	r3, r0
 800336a:	4480      	add	r8, r0
 800336c:	4406      	add	r6, r0
 800336e:	9308      	str	r3, [sp, #32]
 8003370:	f1b8 0f00 	cmp.w	r8, #0
 8003374:	dd05      	ble.n	8003382 <_dtoa_r+0x82a>
 8003376:	4649      	mov	r1, r9
 8003378:	4642      	mov	r2, r8
 800337a:	4658      	mov	r0, fp
 800337c:	f000 fcbe 	bl	8003cfc <__lshift>
 8003380:	4681      	mov	r9, r0
 8003382:	9b08      	ldr	r3, [sp, #32]
 8003384:	2b00      	cmp	r3, #0
 8003386:	dd05      	ble.n	8003394 <_dtoa_r+0x83c>
 8003388:	4621      	mov	r1, r4
 800338a:	461a      	mov	r2, r3
 800338c:	4658      	mov	r0, fp
 800338e:	f000 fcb5 	bl	8003cfc <__lshift>
 8003392:	4604      	mov	r4, r0
 8003394:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8003396:	2b00      	cmp	r3, #0
 8003398:	d059      	beq.n	800344e <_dtoa_r+0x8f6>
 800339a:	4621      	mov	r1, r4
 800339c:	4648      	mov	r0, r9
 800339e:	f000 fd19 	bl	8003dd4 <__mcmp>
 80033a2:	2800      	cmp	r0, #0
 80033a4:	da53      	bge.n	800344e <_dtoa_r+0x8f6>
 80033a6:	1e7b      	subs	r3, r7, #1
 80033a8:	9304      	str	r3, [sp, #16]
 80033aa:	4649      	mov	r1, r9
 80033ac:	2300      	movs	r3, #0
 80033ae:	220a      	movs	r2, #10
 80033b0:	4658      	mov	r0, fp
 80033b2:	f000 faf7 	bl	80039a4 <__multadd>
 80033b6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80033b8:	4681      	mov	r9, r0
 80033ba:	2b00      	cmp	r3, #0
 80033bc:	f000 8172 	beq.w	80036a4 <_dtoa_r+0xb4c>
 80033c0:	2300      	movs	r3, #0
 80033c2:	4629      	mov	r1, r5
 80033c4:	220a      	movs	r2, #10
 80033c6:	4658      	mov	r0, fp
 80033c8:	f000 faec 	bl	80039a4 <__multadd>
 80033cc:	9b00      	ldr	r3, [sp, #0]
 80033ce:	2b00      	cmp	r3, #0
 80033d0:	4605      	mov	r5, r0
 80033d2:	dc67      	bgt.n	80034a4 <_dtoa_r+0x94c>
 80033d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80033d6:	2b02      	cmp	r3, #2
 80033d8:	dc41      	bgt.n	800345e <_dtoa_r+0x906>
 80033da:	e063      	b.n	80034a4 <_dtoa_r+0x94c>
 80033dc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80033de:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 80033e2:	e746      	b.n	8003272 <_dtoa_r+0x71a>
 80033e4:	9b07      	ldr	r3, [sp, #28]
 80033e6:	1e5c      	subs	r4, r3, #1
 80033e8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80033ea:	42a3      	cmp	r3, r4
 80033ec:	bfbf      	itttt	lt
 80033ee:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 80033f0:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 80033f2:	940a      	strlt	r4, [sp, #40]	@ 0x28
 80033f4:	1ae3      	sublt	r3, r4, r3
 80033f6:	bfb4      	ite	lt
 80033f8:	18d2      	addlt	r2, r2, r3
 80033fa:	1b1c      	subge	r4, r3, r4
 80033fc:	9b07      	ldr	r3, [sp, #28]
 80033fe:	bfbc      	itt	lt
 8003400:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 8003402:	2400      	movlt	r4, #0
 8003404:	2b00      	cmp	r3, #0
 8003406:	bfb5      	itete	lt
 8003408:	eba8 0603 	sublt.w	r6, r8, r3
 800340c:	9b07      	ldrge	r3, [sp, #28]
 800340e:	2300      	movlt	r3, #0
 8003410:	4646      	movge	r6, r8
 8003412:	e730      	b.n	8003276 <_dtoa_r+0x71e>
 8003414:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003416:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8003418:	4646      	mov	r6, r8
 800341a:	e735      	b.n	8003288 <_dtoa_r+0x730>
 800341c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800341e:	e75c      	b.n	80032da <_dtoa_r+0x782>
 8003420:	2300      	movs	r3, #0
 8003422:	e788      	b.n	8003336 <_dtoa_r+0x7de>
 8003424:	3fe00000 	.word	0x3fe00000
 8003428:	40240000 	.word	0x40240000
 800342c:	40140000 	.word	0x40140000
 8003430:	9b02      	ldr	r3, [sp, #8]
 8003432:	e780      	b.n	8003336 <_dtoa_r+0x7de>
 8003434:	2300      	movs	r3, #0
 8003436:	930a      	str	r3, [sp, #40]	@ 0x28
 8003438:	e782      	b.n	8003340 <_dtoa_r+0x7e8>
 800343a:	d099      	beq.n	8003370 <_dtoa_r+0x818>
 800343c:	9a08      	ldr	r2, [sp, #32]
 800343e:	331c      	adds	r3, #28
 8003440:	441a      	add	r2, r3
 8003442:	4498      	add	r8, r3
 8003444:	441e      	add	r6, r3
 8003446:	9208      	str	r2, [sp, #32]
 8003448:	e792      	b.n	8003370 <_dtoa_r+0x818>
 800344a:	4603      	mov	r3, r0
 800344c:	e7f6      	b.n	800343c <_dtoa_r+0x8e4>
 800344e:	9b07      	ldr	r3, [sp, #28]
 8003450:	9704      	str	r7, [sp, #16]
 8003452:	2b00      	cmp	r3, #0
 8003454:	dc20      	bgt.n	8003498 <_dtoa_r+0x940>
 8003456:	9300      	str	r3, [sp, #0]
 8003458:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800345a:	2b02      	cmp	r3, #2
 800345c:	dd1e      	ble.n	800349c <_dtoa_r+0x944>
 800345e:	9b00      	ldr	r3, [sp, #0]
 8003460:	2b00      	cmp	r3, #0
 8003462:	f47f aec0 	bne.w	80031e6 <_dtoa_r+0x68e>
 8003466:	4621      	mov	r1, r4
 8003468:	2205      	movs	r2, #5
 800346a:	4658      	mov	r0, fp
 800346c:	f000 fa9a 	bl	80039a4 <__multadd>
 8003470:	4601      	mov	r1, r0
 8003472:	4604      	mov	r4, r0
 8003474:	4648      	mov	r0, r9
 8003476:	f000 fcad 	bl	8003dd4 <__mcmp>
 800347a:	2800      	cmp	r0, #0
 800347c:	f77f aeb3 	ble.w	80031e6 <_dtoa_r+0x68e>
 8003480:	4656      	mov	r6, sl
 8003482:	2331      	movs	r3, #49	@ 0x31
 8003484:	f806 3b01 	strb.w	r3, [r6], #1
 8003488:	9b04      	ldr	r3, [sp, #16]
 800348a:	3301      	adds	r3, #1
 800348c:	9304      	str	r3, [sp, #16]
 800348e:	e6ae      	b.n	80031ee <_dtoa_r+0x696>
 8003490:	9c07      	ldr	r4, [sp, #28]
 8003492:	9704      	str	r7, [sp, #16]
 8003494:	4625      	mov	r5, r4
 8003496:	e7f3      	b.n	8003480 <_dtoa_r+0x928>
 8003498:	9b07      	ldr	r3, [sp, #28]
 800349a:	9300      	str	r3, [sp, #0]
 800349c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800349e:	2b00      	cmp	r3, #0
 80034a0:	f000 8104 	beq.w	80036ac <_dtoa_r+0xb54>
 80034a4:	2e00      	cmp	r6, #0
 80034a6:	dd05      	ble.n	80034b4 <_dtoa_r+0x95c>
 80034a8:	4629      	mov	r1, r5
 80034aa:	4632      	mov	r2, r6
 80034ac:	4658      	mov	r0, fp
 80034ae:	f000 fc25 	bl	8003cfc <__lshift>
 80034b2:	4605      	mov	r5, r0
 80034b4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80034b6:	2b00      	cmp	r3, #0
 80034b8:	d05a      	beq.n	8003570 <_dtoa_r+0xa18>
 80034ba:	6869      	ldr	r1, [r5, #4]
 80034bc:	4658      	mov	r0, fp
 80034be:	f000 fa0f 	bl	80038e0 <_Balloc>
 80034c2:	4606      	mov	r6, r0
 80034c4:	b928      	cbnz	r0, 80034d2 <_dtoa_r+0x97a>
 80034c6:	4b84      	ldr	r3, [pc, #528]	@ (80036d8 <_dtoa_r+0xb80>)
 80034c8:	4602      	mov	r2, r0
 80034ca:	f240 21ef 	movw	r1, #751	@ 0x2ef
 80034ce:	f7ff bb5a 	b.w	8002b86 <_dtoa_r+0x2e>
 80034d2:	692a      	ldr	r2, [r5, #16]
 80034d4:	3202      	adds	r2, #2
 80034d6:	0092      	lsls	r2, r2, #2
 80034d8:	f105 010c 	add.w	r1, r5, #12
 80034dc:	300c      	adds	r0, #12
 80034de:	f000 fe3d 	bl	800415c <memcpy>
 80034e2:	2201      	movs	r2, #1
 80034e4:	4631      	mov	r1, r6
 80034e6:	4658      	mov	r0, fp
 80034e8:	f000 fc08 	bl	8003cfc <__lshift>
 80034ec:	f10a 0301 	add.w	r3, sl, #1
 80034f0:	9307      	str	r3, [sp, #28]
 80034f2:	9b00      	ldr	r3, [sp, #0]
 80034f4:	4453      	add	r3, sl
 80034f6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80034f8:	9b02      	ldr	r3, [sp, #8]
 80034fa:	f003 0301 	and.w	r3, r3, #1
 80034fe:	462f      	mov	r7, r5
 8003500:	930a      	str	r3, [sp, #40]	@ 0x28
 8003502:	4605      	mov	r5, r0
 8003504:	9b07      	ldr	r3, [sp, #28]
 8003506:	4621      	mov	r1, r4
 8003508:	3b01      	subs	r3, #1
 800350a:	4648      	mov	r0, r9
 800350c:	9300      	str	r3, [sp, #0]
 800350e:	f7ff fa9a 	bl	8002a46 <quorem>
 8003512:	4639      	mov	r1, r7
 8003514:	9002      	str	r0, [sp, #8]
 8003516:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 800351a:	4648      	mov	r0, r9
 800351c:	f000 fc5a 	bl	8003dd4 <__mcmp>
 8003520:	462a      	mov	r2, r5
 8003522:	9008      	str	r0, [sp, #32]
 8003524:	4621      	mov	r1, r4
 8003526:	4658      	mov	r0, fp
 8003528:	f000 fc70 	bl	8003e0c <__mdiff>
 800352c:	68c2      	ldr	r2, [r0, #12]
 800352e:	4606      	mov	r6, r0
 8003530:	bb02      	cbnz	r2, 8003574 <_dtoa_r+0xa1c>
 8003532:	4601      	mov	r1, r0
 8003534:	4648      	mov	r0, r9
 8003536:	f000 fc4d 	bl	8003dd4 <__mcmp>
 800353a:	4602      	mov	r2, r0
 800353c:	4631      	mov	r1, r6
 800353e:	4658      	mov	r0, fp
 8003540:	920e      	str	r2, [sp, #56]	@ 0x38
 8003542:	f000 fa0d 	bl	8003960 <_Bfree>
 8003546:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003548:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800354a:	9e07      	ldr	r6, [sp, #28]
 800354c:	ea43 0102 	orr.w	r1, r3, r2
 8003550:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003552:	4319      	orrs	r1, r3
 8003554:	d110      	bne.n	8003578 <_dtoa_r+0xa20>
 8003556:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800355a:	d029      	beq.n	80035b0 <_dtoa_r+0xa58>
 800355c:	9b08      	ldr	r3, [sp, #32]
 800355e:	2b00      	cmp	r3, #0
 8003560:	dd02      	ble.n	8003568 <_dtoa_r+0xa10>
 8003562:	9b02      	ldr	r3, [sp, #8]
 8003564:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8003568:	9b00      	ldr	r3, [sp, #0]
 800356a:	f883 8000 	strb.w	r8, [r3]
 800356e:	e63f      	b.n	80031f0 <_dtoa_r+0x698>
 8003570:	4628      	mov	r0, r5
 8003572:	e7bb      	b.n	80034ec <_dtoa_r+0x994>
 8003574:	2201      	movs	r2, #1
 8003576:	e7e1      	b.n	800353c <_dtoa_r+0x9e4>
 8003578:	9b08      	ldr	r3, [sp, #32]
 800357a:	2b00      	cmp	r3, #0
 800357c:	db04      	blt.n	8003588 <_dtoa_r+0xa30>
 800357e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003580:	430b      	orrs	r3, r1
 8003582:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003584:	430b      	orrs	r3, r1
 8003586:	d120      	bne.n	80035ca <_dtoa_r+0xa72>
 8003588:	2a00      	cmp	r2, #0
 800358a:	dded      	ble.n	8003568 <_dtoa_r+0xa10>
 800358c:	4649      	mov	r1, r9
 800358e:	2201      	movs	r2, #1
 8003590:	4658      	mov	r0, fp
 8003592:	f000 fbb3 	bl	8003cfc <__lshift>
 8003596:	4621      	mov	r1, r4
 8003598:	4681      	mov	r9, r0
 800359a:	f000 fc1b 	bl	8003dd4 <__mcmp>
 800359e:	2800      	cmp	r0, #0
 80035a0:	dc03      	bgt.n	80035aa <_dtoa_r+0xa52>
 80035a2:	d1e1      	bne.n	8003568 <_dtoa_r+0xa10>
 80035a4:	f018 0f01 	tst.w	r8, #1
 80035a8:	d0de      	beq.n	8003568 <_dtoa_r+0xa10>
 80035aa:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80035ae:	d1d8      	bne.n	8003562 <_dtoa_r+0xa0a>
 80035b0:	9a00      	ldr	r2, [sp, #0]
 80035b2:	2339      	movs	r3, #57	@ 0x39
 80035b4:	7013      	strb	r3, [r2, #0]
 80035b6:	4633      	mov	r3, r6
 80035b8:	461e      	mov	r6, r3
 80035ba:	3b01      	subs	r3, #1
 80035bc:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80035c0:	2a39      	cmp	r2, #57	@ 0x39
 80035c2:	d052      	beq.n	800366a <_dtoa_r+0xb12>
 80035c4:	3201      	adds	r2, #1
 80035c6:	701a      	strb	r2, [r3, #0]
 80035c8:	e612      	b.n	80031f0 <_dtoa_r+0x698>
 80035ca:	2a00      	cmp	r2, #0
 80035cc:	dd07      	ble.n	80035de <_dtoa_r+0xa86>
 80035ce:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80035d2:	d0ed      	beq.n	80035b0 <_dtoa_r+0xa58>
 80035d4:	9a00      	ldr	r2, [sp, #0]
 80035d6:	f108 0301 	add.w	r3, r8, #1
 80035da:	7013      	strb	r3, [r2, #0]
 80035dc:	e608      	b.n	80031f0 <_dtoa_r+0x698>
 80035de:	9b07      	ldr	r3, [sp, #28]
 80035e0:	9a07      	ldr	r2, [sp, #28]
 80035e2:	f803 8c01 	strb.w	r8, [r3, #-1]
 80035e6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80035e8:	4293      	cmp	r3, r2
 80035ea:	d028      	beq.n	800363e <_dtoa_r+0xae6>
 80035ec:	4649      	mov	r1, r9
 80035ee:	2300      	movs	r3, #0
 80035f0:	220a      	movs	r2, #10
 80035f2:	4658      	mov	r0, fp
 80035f4:	f000 f9d6 	bl	80039a4 <__multadd>
 80035f8:	42af      	cmp	r7, r5
 80035fa:	4681      	mov	r9, r0
 80035fc:	f04f 0300 	mov.w	r3, #0
 8003600:	f04f 020a 	mov.w	r2, #10
 8003604:	4639      	mov	r1, r7
 8003606:	4658      	mov	r0, fp
 8003608:	d107      	bne.n	800361a <_dtoa_r+0xac2>
 800360a:	f000 f9cb 	bl	80039a4 <__multadd>
 800360e:	4607      	mov	r7, r0
 8003610:	4605      	mov	r5, r0
 8003612:	9b07      	ldr	r3, [sp, #28]
 8003614:	3301      	adds	r3, #1
 8003616:	9307      	str	r3, [sp, #28]
 8003618:	e774      	b.n	8003504 <_dtoa_r+0x9ac>
 800361a:	f000 f9c3 	bl	80039a4 <__multadd>
 800361e:	4629      	mov	r1, r5
 8003620:	4607      	mov	r7, r0
 8003622:	2300      	movs	r3, #0
 8003624:	220a      	movs	r2, #10
 8003626:	4658      	mov	r0, fp
 8003628:	f000 f9bc 	bl	80039a4 <__multadd>
 800362c:	4605      	mov	r5, r0
 800362e:	e7f0      	b.n	8003612 <_dtoa_r+0xaba>
 8003630:	9b00      	ldr	r3, [sp, #0]
 8003632:	2b00      	cmp	r3, #0
 8003634:	bfcc      	ite	gt
 8003636:	461e      	movgt	r6, r3
 8003638:	2601      	movle	r6, #1
 800363a:	4456      	add	r6, sl
 800363c:	2700      	movs	r7, #0
 800363e:	4649      	mov	r1, r9
 8003640:	2201      	movs	r2, #1
 8003642:	4658      	mov	r0, fp
 8003644:	f000 fb5a 	bl	8003cfc <__lshift>
 8003648:	4621      	mov	r1, r4
 800364a:	4681      	mov	r9, r0
 800364c:	f000 fbc2 	bl	8003dd4 <__mcmp>
 8003650:	2800      	cmp	r0, #0
 8003652:	dcb0      	bgt.n	80035b6 <_dtoa_r+0xa5e>
 8003654:	d102      	bne.n	800365c <_dtoa_r+0xb04>
 8003656:	f018 0f01 	tst.w	r8, #1
 800365a:	d1ac      	bne.n	80035b6 <_dtoa_r+0xa5e>
 800365c:	4633      	mov	r3, r6
 800365e:	461e      	mov	r6, r3
 8003660:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003664:	2a30      	cmp	r2, #48	@ 0x30
 8003666:	d0fa      	beq.n	800365e <_dtoa_r+0xb06>
 8003668:	e5c2      	b.n	80031f0 <_dtoa_r+0x698>
 800366a:	459a      	cmp	sl, r3
 800366c:	d1a4      	bne.n	80035b8 <_dtoa_r+0xa60>
 800366e:	9b04      	ldr	r3, [sp, #16]
 8003670:	3301      	adds	r3, #1
 8003672:	9304      	str	r3, [sp, #16]
 8003674:	2331      	movs	r3, #49	@ 0x31
 8003676:	f88a 3000 	strb.w	r3, [sl]
 800367a:	e5b9      	b.n	80031f0 <_dtoa_r+0x698>
 800367c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800367e:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 80036dc <_dtoa_r+0xb84>
 8003682:	b11b      	cbz	r3, 800368c <_dtoa_r+0xb34>
 8003684:	f10a 0308 	add.w	r3, sl, #8
 8003688:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 800368a:	6013      	str	r3, [r2, #0]
 800368c:	4650      	mov	r0, sl
 800368e:	b019      	add	sp, #100	@ 0x64
 8003690:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003694:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003696:	2b01      	cmp	r3, #1
 8003698:	f77f ae37 	ble.w	800330a <_dtoa_r+0x7b2>
 800369c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800369e:	930a      	str	r3, [sp, #40]	@ 0x28
 80036a0:	2001      	movs	r0, #1
 80036a2:	e655      	b.n	8003350 <_dtoa_r+0x7f8>
 80036a4:	9b00      	ldr	r3, [sp, #0]
 80036a6:	2b00      	cmp	r3, #0
 80036a8:	f77f aed6 	ble.w	8003458 <_dtoa_r+0x900>
 80036ac:	4656      	mov	r6, sl
 80036ae:	4621      	mov	r1, r4
 80036b0:	4648      	mov	r0, r9
 80036b2:	f7ff f9c8 	bl	8002a46 <quorem>
 80036b6:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 80036ba:	f806 8b01 	strb.w	r8, [r6], #1
 80036be:	9b00      	ldr	r3, [sp, #0]
 80036c0:	eba6 020a 	sub.w	r2, r6, sl
 80036c4:	4293      	cmp	r3, r2
 80036c6:	ddb3      	ble.n	8003630 <_dtoa_r+0xad8>
 80036c8:	4649      	mov	r1, r9
 80036ca:	2300      	movs	r3, #0
 80036cc:	220a      	movs	r2, #10
 80036ce:	4658      	mov	r0, fp
 80036d0:	f000 f968 	bl	80039a4 <__multadd>
 80036d4:	4681      	mov	r9, r0
 80036d6:	e7ea      	b.n	80036ae <_dtoa_r+0xb56>
 80036d8:	08004850 	.word	0x08004850
 80036dc:	080047d4 	.word	0x080047d4

080036e0 <_free_r>:
 80036e0:	b538      	push	{r3, r4, r5, lr}
 80036e2:	4605      	mov	r5, r0
 80036e4:	2900      	cmp	r1, #0
 80036e6:	d041      	beq.n	800376c <_free_r+0x8c>
 80036e8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80036ec:	1f0c      	subs	r4, r1, #4
 80036ee:	2b00      	cmp	r3, #0
 80036f0:	bfb8      	it	lt
 80036f2:	18e4      	addlt	r4, r4, r3
 80036f4:	f000 f8e8 	bl	80038c8 <__malloc_lock>
 80036f8:	4a1d      	ldr	r2, [pc, #116]	@ (8003770 <_free_r+0x90>)
 80036fa:	6813      	ldr	r3, [r2, #0]
 80036fc:	b933      	cbnz	r3, 800370c <_free_r+0x2c>
 80036fe:	6063      	str	r3, [r4, #4]
 8003700:	6014      	str	r4, [r2, #0]
 8003702:	4628      	mov	r0, r5
 8003704:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003708:	f000 b8e4 	b.w	80038d4 <__malloc_unlock>
 800370c:	42a3      	cmp	r3, r4
 800370e:	d908      	bls.n	8003722 <_free_r+0x42>
 8003710:	6820      	ldr	r0, [r4, #0]
 8003712:	1821      	adds	r1, r4, r0
 8003714:	428b      	cmp	r3, r1
 8003716:	bf01      	itttt	eq
 8003718:	6819      	ldreq	r1, [r3, #0]
 800371a:	685b      	ldreq	r3, [r3, #4]
 800371c:	1809      	addeq	r1, r1, r0
 800371e:	6021      	streq	r1, [r4, #0]
 8003720:	e7ed      	b.n	80036fe <_free_r+0x1e>
 8003722:	461a      	mov	r2, r3
 8003724:	685b      	ldr	r3, [r3, #4]
 8003726:	b10b      	cbz	r3, 800372c <_free_r+0x4c>
 8003728:	42a3      	cmp	r3, r4
 800372a:	d9fa      	bls.n	8003722 <_free_r+0x42>
 800372c:	6811      	ldr	r1, [r2, #0]
 800372e:	1850      	adds	r0, r2, r1
 8003730:	42a0      	cmp	r0, r4
 8003732:	d10b      	bne.n	800374c <_free_r+0x6c>
 8003734:	6820      	ldr	r0, [r4, #0]
 8003736:	4401      	add	r1, r0
 8003738:	1850      	adds	r0, r2, r1
 800373a:	4283      	cmp	r3, r0
 800373c:	6011      	str	r1, [r2, #0]
 800373e:	d1e0      	bne.n	8003702 <_free_r+0x22>
 8003740:	6818      	ldr	r0, [r3, #0]
 8003742:	685b      	ldr	r3, [r3, #4]
 8003744:	6053      	str	r3, [r2, #4]
 8003746:	4408      	add	r0, r1
 8003748:	6010      	str	r0, [r2, #0]
 800374a:	e7da      	b.n	8003702 <_free_r+0x22>
 800374c:	d902      	bls.n	8003754 <_free_r+0x74>
 800374e:	230c      	movs	r3, #12
 8003750:	602b      	str	r3, [r5, #0]
 8003752:	e7d6      	b.n	8003702 <_free_r+0x22>
 8003754:	6820      	ldr	r0, [r4, #0]
 8003756:	1821      	adds	r1, r4, r0
 8003758:	428b      	cmp	r3, r1
 800375a:	bf04      	itt	eq
 800375c:	6819      	ldreq	r1, [r3, #0]
 800375e:	685b      	ldreq	r3, [r3, #4]
 8003760:	6063      	str	r3, [r4, #4]
 8003762:	bf04      	itt	eq
 8003764:	1809      	addeq	r1, r1, r0
 8003766:	6021      	streq	r1, [r4, #0]
 8003768:	6054      	str	r4, [r2, #4]
 800376a:	e7ca      	b.n	8003702 <_free_r+0x22>
 800376c:	bd38      	pop	{r3, r4, r5, pc}
 800376e:	bf00      	nop
 8003770:	20000354 	.word	0x20000354

08003774 <malloc>:
 8003774:	4b02      	ldr	r3, [pc, #8]	@ (8003780 <malloc+0xc>)
 8003776:	4601      	mov	r1, r0
 8003778:	6818      	ldr	r0, [r3, #0]
 800377a:	f000 b825 	b.w	80037c8 <_malloc_r>
 800377e:	bf00      	nop
 8003780:	2000000c 	.word	0x2000000c

08003784 <sbrk_aligned>:
 8003784:	b570      	push	{r4, r5, r6, lr}
 8003786:	4e0f      	ldr	r6, [pc, #60]	@ (80037c4 <sbrk_aligned+0x40>)
 8003788:	460c      	mov	r4, r1
 800378a:	6831      	ldr	r1, [r6, #0]
 800378c:	4605      	mov	r5, r0
 800378e:	b911      	cbnz	r1, 8003796 <sbrk_aligned+0x12>
 8003790:	f000 fcd4 	bl	800413c <_sbrk_r>
 8003794:	6030      	str	r0, [r6, #0]
 8003796:	4621      	mov	r1, r4
 8003798:	4628      	mov	r0, r5
 800379a:	f000 fccf 	bl	800413c <_sbrk_r>
 800379e:	1c43      	adds	r3, r0, #1
 80037a0:	d103      	bne.n	80037aa <sbrk_aligned+0x26>
 80037a2:	f04f 34ff 	mov.w	r4, #4294967295
 80037a6:	4620      	mov	r0, r4
 80037a8:	bd70      	pop	{r4, r5, r6, pc}
 80037aa:	1cc4      	adds	r4, r0, #3
 80037ac:	f024 0403 	bic.w	r4, r4, #3
 80037b0:	42a0      	cmp	r0, r4
 80037b2:	d0f8      	beq.n	80037a6 <sbrk_aligned+0x22>
 80037b4:	1a21      	subs	r1, r4, r0
 80037b6:	4628      	mov	r0, r5
 80037b8:	f000 fcc0 	bl	800413c <_sbrk_r>
 80037bc:	3001      	adds	r0, #1
 80037be:	d1f2      	bne.n	80037a6 <sbrk_aligned+0x22>
 80037c0:	e7ef      	b.n	80037a2 <sbrk_aligned+0x1e>
 80037c2:	bf00      	nop
 80037c4:	20000350 	.word	0x20000350

080037c8 <_malloc_r>:
 80037c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80037cc:	1ccd      	adds	r5, r1, #3
 80037ce:	f025 0503 	bic.w	r5, r5, #3
 80037d2:	3508      	adds	r5, #8
 80037d4:	2d0c      	cmp	r5, #12
 80037d6:	bf38      	it	cc
 80037d8:	250c      	movcc	r5, #12
 80037da:	2d00      	cmp	r5, #0
 80037dc:	4606      	mov	r6, r0
 80037de:	db01      	blt.n	80037e4 <_malloc_r+0x1c>
 80037e0:	42a9      	cmp	r1, r5
 80037e2:	d904      	bls.n	80037ee <_malloc_r+0x26>
 80037e4:	230c      	movs	r3, #12
 80037e6:	6033      	str	r3, [r6, #0]
 80037e8:	2000      	movs	r0, #0
 80037ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80037ee:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80038c4 <_malloc_r+0xfc>
 80037f2:	f000 f869 	bl	80038c8 <__malloc_lock>
 80037f6:	f8d8 3000 	ldr.w	r3, [r8]
 80037fa:	461c      	mov	r4, r3
 80037fc:	bb44      	cbnz	r4, 8003850 <_malloc_r+0x88>
 80037fe:	4629      	mov	r1, r5
 8003800:	4630      	mov	r0, r6
 8003802:	f7ff ffbf 	bl	8003784 <sbrk_aligned>
 8003806:	1c43      	adds	r3, r0, #1
 8003808:	4604      	mov	r4, r0
 800380a:	d158      	bne.n	80038be <_malloc_r+0xf6>
 800380c:	f8d8 4000 	ldr.w	r4, [r8]
 8003810:	4627      	mov	r7, r4
 8003812:	2f00      	cmp	r7, #0
 8003814:	d143      	bne.n	800389e <_malloc_r+0xd6>
 8003816:	2c00      	cmp	r4, #0
 8003818:	d04b      	beq.n	80038b2 <_malloc_r+0xea>
 800381a:	6823      	ldr	r3, [r4, #0]
 800381c:	4639      	mov	r1, r7
 800381e:	4630      	mov	r0, r6
 8003820:	eb04 0903 	add.w	r9, r4, r3
 8003824:	f000 fc8a 	bl	800413c <_sbrk_r>
 8003828:	4581      	cmp	r9, r0
 800382a:	d142      	bne.n	80038b2 <_malloc_r+0xea>
 800382c:	6821      	ldr	r1, [r4, #0]
 800382e:	1a6d      	subs	r5, r5, r1
 8003830:	4629      	mov	r1, r5
 8003832:	4630      	mov	r0, r6
 8003834:	f7ff ffa6 	bl	8003784 <sbrk_aligned>
 8003838:	3001      	adds	r0, #1
 800383a:	d03a      	beq.n	80038b2 <_malloc_r+0xea>
 800383c:	6823      	ldr	r3, [r4, #0]
 800383e:	442b      	add	r3, r5
 8003840:	6023      	str	r3, [r4, #0]
 8003842:	f8d8 3000 	ldr.w	r3, [r8]
 8003846:	685a      	ldr	r2, [r3, #4]
 8003848:	bb62      	cbnz	r2, 80038a4 <_malloc_r+0xdc>
 800384a:	f8c8 7000 	str.w	r7, [r8]
 800384e:	e00f      	b.n	8003870 <_malloc_r+0xa8>
 8003850:	6822      	ldr	r2, [r4, #0]
 8003852:	1b52      	subs	r2, r2, r5
 8003854:	d420      	bmi.n	8003898 <_malloc_r+0xd0>
 8003856:	2a0b      	cmp	r2, #11
 8003858:	d917      	bls.n	800388a <_malloc_r+0xc2>
 800385a:	1961      	adds	r1, r4, r5
 800385c:	42a3      	cmp	r3, r4
 800385e:	6025      	str	r5, [r4, #0]
 8003860:	bf18      	it	ne
 8003862:	6059      	strne	r1, [r3, #4]
 8003864:	6863      	ldr	r3, [r4, #4]
 8003866:	bf08      	it	eq
 8003868:	f8c8 1000 	streq.w	r1, [r8]
 800386c:	5162      	str	r2, [r4, r5]
 800386e:	604b      	str	r3, [r1, #4]
 8003870:	4630      	mov	r0, r6
 8003872:	f000 f82f 	bl	80038d4 <__malloc_unlock>
 8003876:	f104 000b 	add.w	r0, r4, #11
 800387a:	1d23      	adds	r3, r4, #4
 800387c:	f020 0007 	bic.w	r0, r0, #7
 8003880:	1ac2      	subs	r2, r0, r3
 8003882:	bf1c      	itt	ne
 8003884:	1a1b      	subne	r3, r3, r0
 8003886:	50a3      	strne	r3, [r4, r2]
 8003888:	e7af      	b.n	80037ea <_malloc_r+0x22>
 800388a:	6862      	ldr	r2, [r4, #4]
 800388c:	42a3      	cmp	r3, r4
 800388e:	bf0c      	ite	eq
 8003890:	f8c8 2000 	streq.w	r2, [r8]
 8003894:	605a      	strne	r2, [r3, #4]
 8003896:	e7eb      	b.n	8003870 <_malloc_r+0xa8>
 8003898:	4623      	mov	r3, r4
 800389a:	6864      	ldr	r4, [r4, #4]
 800389c:	e7ae      	b.n	80037fc <_malloc_r+0x34>
 800389e:	463c      	mov	r4, r7
 80038a0:	687f      	ldr	r7, [r7, #4]
 80038a2:	e7b6      	b.n	8003812 <_malloc_r+0x4a>
 80038a4:	461a      	mov	r2, r3
 80038a6:	685b      	ldr	r3, [r3, #4]
 80038a8:	42a3      	cmp	r3, r4
 80038aa:	d1fb      	bne.n	80038a4 <_malloc_r+0xdc>
 80038ac:	2300      	movs	r3, #0
 80038ae:	6053      	str	r3, [r2, #4]
 80038b0:	e7de      	b.n	8003870 <_malloc_r+0xa8>
 80038b2:	230c      	movs	r3, #12
 80038b4:	6033      	str	r3, [r6, #0]
 80038b6:	4630      	mov	r0, r6
 80038b8:	f000 f80c 	bl	80038d4 <__malloc_unlock>
 80038bc:	e794      	b.n	80037e8 <_malloc_r+0x20>
 80038be:	6005      	str	r5, [r0, #0]
 80038c0:	e7d6      	b.n	8003870 <_malloc_r+0xa8>
 80038c2:	bf00      	nop
 80038c4:	20000354 	.word	0x20000354

080038c8 <__malloc_lock>:
 80038c8:	4801      	ldr	r0, [pc, #4]	@ (80038d0 <__malloc_lock+0x8>)
 80038ca:	f7ff b8ba 	b.w	8002a42 <__retarget_lock_acquire_recursive>
 80038ce:	bf00      	nop
 80038d0:	2000034c 	.word	0x2000034c

080038d4 <__malloc_unlock>:
 80038d4:	4801      	ldr	r0, [pc, #4]	@ (80038dc <__malloc_unlock+0x8>)
 80038d6:	f7ff b8b5 	b.w	8002a44 <__retarget_lock_release_recursive>
 80038da:	bf00      	nop
 80038dc:	2000034c 	.word	0x2000034c

080038e0 <_Balloc>:
 80038e0:	b570      	push	{r4, r5, r6, lr}
 80038e2:	69c6      	ldr	r6, [r0, #28]
 80038e4:	4604      	mov	r4, r0
 80038e6:	460d      	mov	r5, r1
 80038e8:	b976      	cbnz	r6, 8003908 <_Balloc+0x28>
 80038ea:	2010      	movs	r0, #16
 80038ec:	f7ff ff42 	bl	8003774 <malloc>
 80038f0:	4602      	mov	r2, r0
 80038f2:	61e0      	str	r0, [r4, #28]
 80038f4:	b920      	cbnz	r0, 8003900 <_Balloc+0x20>
 80038f6:	4b18      	ldr	r3, [pc, #96]	@ (8003958 <_Balloc+0x78>)
 80038f8:	4818      	ldr	r0, [pc, #96]	@ (800395c <_Balloc+0x7c>)
 80038fa:	216b      	movs	r1, #107	@ 0x6b
 80038fc:	f000 fc3c 	bl	8004178 <__assert_func>
 8003900:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003904:	6006      	str	r6, [r0, #0]
 8003906:	60c6      	str	r6, [r0, #12]
 8003908:	69e6      	ldr	r6, [r4, #28]
 800390a:	68f3      	ldr	r3, [r6, #12]
 800390c:	b183      	cbz	r3, 8003930 <_Balloc+0x50>
 800390e:	69e3      	ldr	r3, [r4, #28]
 8003910:	68db      	ldr	r3, [r3, #12]
 8003912:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003916:	b9b8      	cbnz	r0, 8003948 <_Balloc+0x68>
 8003918:	2101      	movs	r1, #1
 800391a:	fa01 f605 	lsl.w	r6, r1, r5
 800391e:	1d72      	adds	r2, r6, #5
 8003920:	0092      	lsls	r2, r2, #2
 8003922:	4620      	mov	r0, r4
 8003924:	f000 fc46 	bl	80041b4 <_calloc_r>
 8003928:	b160      	cbz	r0, 8003944 <_Balloc+0x64>
 800392a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800392e:	e00e      	b.n	800394e <_Balloc+0x6e>
 8003930:	2221      	movs	r2, #33	@ 0x21
 8003932:	2104      	movs	r1, #4
 8003934:	4620      	mov	r0, r4
 8003936:	f000 fc3d 	bl	80041b4 <_calloc_r>
 800393a:	69e3      	ldr	r3, [r4, #28]
 800393c:	60f0      	str	r0, [r6, #12]
 800393e:	68db      	ldr	r3, [r3, #12]
 8003940:	2b00      	cmp	r3, #0
 8003942:	d1e4      	bne.n	800390e <_Balloc+0x2e>
 8003944:	2000      	movs	r0, #0
 8003946:	bd70      	pop	{r4, r5, r6, pc}
 8003948:	6802      	ldr	r2, [r0, #0]
 800394a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800394e:	2300      	movs	r3, #0
 8003950:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003954:	e7f7      	b.n	8003946 <_Balloc+0x66>
 8003956:	bf00      	nop
 8003958:	080047e1 	.word	0x080047e1
 800395c:	08004861 	.word	0x08004861

08003960 <_Bfree>:
 8003960:	b570      	push	{r4, r5, r6, lr}
 8003962:	69c6      	ldr	r6, [r0, #28]
 8003964:	4605      	mov	r5, r0
 8003966:	460c      	mov	r4, r1
 8003968:	b976      	cbnz	r6, 8003988 <_Bfree+0x28>
 800396a:	2010      	movs	r0, #16
 800396c:	f7ff ff02 	bl	8003774 <malloc>
 8003970:	4602      	mov	r2, r0
 8003972:	61e8      	str	r0, [r5, #28]
 8003974:	b920      	cbnz	r0, 8003980 <_Bfree+0x20>
 8003976:	4b09      	ldr	r3, [pc, #36]	@ (800399c <_Bfree+0x3c>)
 8003978:	4809      	ldr	r0, [pc, #36]	@ (80039a0 <_Bfree+0x40>)
 800397a:	218f      	movs	r1, #143	@ 0x8f
 800397c:	f000 fbfc 	bl	8004178 <__assert_func>
 8003980:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003984:	6006      	str	r6, [r0, #0]
 8003986:	60c6      	str	r6, [r0, #12]
 8003988:	b13c      	cbz	r4, 800399a <_Bfree+0x3a>
 800398a:	69eb      	ldr	r3, [r5, #28]
 800398c:	6862      	ldr	r2, [r4, #4]
 800398e:	68db      	ldr	r3, [r3, #12]
 8003990:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003994:	6021      	str	r1, [r4, #0]
 8003996:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800399a:	bd70      	pop	{r4, r5, r6, pc}
 800399c:	080047e1 	.word	0x080047e1
 80039a0:	08004861 	.word	0x08004861

080039a4 <__multadd>:
 80039a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80039a8:	690d      	ldr	r5, [r1, #16]
 80039aa:	4607      	mov	r7, r0
 80039ac:	460c      	mov	r4, r1
 80039ae:	461e      	mov	r6, r3
 80039b0:	f101 0c14 	add.w	ip, r1, #20
 80039b4:	2000      	movs	r0, #0
 80039b6:	f8dc 3000 	ldr.w	r3, [ip]
 80039ba:	b299      	uxth	r1, r3
 80039bc:	fb02 6101 	mla	r1, r2, r1, r6
 80039c0:	0c1e      	lsrs	r6, r3, #16
 80039c2:	0c0b      	lsrs	r3, r1, #16
 80039c4:	fb02 3306 	mla	r3, r2, r6, r3
 80039c8:	b289      	uxth	r1, r1
 80039ca:	3001      	adds	r0, #1
 80039cc:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80039d0:	4285      	cmp	r5, r0
 80039d2:	f84c 1b04 	str.w	r1, [ip], #4
 80039d6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80039da:	dcec      	bgt.n	80039b6 <__multadd+0x12>
 80039dc:	b30e      	cbz	r6, 8003a22 <__multadd+0x7e>
 80039de:	68a3      	ldr	r3, [r4, #8]
 80039e0:	42ab      	cmp	r3, r5
 80039e2:	dc19      	bgt.n	8003a18 <__multadd+0x74>
 80039e4:	6861      	ldr	r1, [r4, #4]
 80039e6:	4638      	mov	r0, r7
 80039e8:	3101      	adds	r1, #1
 80039ea:	f7ff ff79 	bl	80038e0 <_Balloc>
 80039ee:	4680      	mov	r8, r0
 80039f0:	b928      	cbnz	r0, 80039fe <__multadd+0x5a>
 80039f2:	4602      	mov	r2, r0
 80039f4:	4b0c      	ldr	r3, [pc, #48]	@ (8003a28 <__multadd+0x84>)
 80039f6:	480d      	ldr	r0, [pc, #52]	@ (8003a2c <__multadd+0x88>)
 80039f8:	21ba      	movs	r1, #186	@ 0xba
 80039fa:	f000 fbbd 	bl	8004178 <__assert_func>
 80039fe:	6922      	ldr	r2, [r4, #16]
 8003a00:	3202      	adds	r2, #2
 8003a02:	f104 010c 	add.w	r1, r4, #12
 8003a06:	0092      	lsls	r2, r2, #2
 8003a08:	300c      	adds	r0, #12
 8003a0a:	f000 fba7 	bl	800415c <memcpy>
 8003a0e:	4621      	mov	r1, r4
 8003a10:	4638      	mov	r0, r7
 8003a12:	f7ff ffa5 	bl	8003960 <_Bfree>
 8003a16:	4644      	mov	r4, r8
 8003a18:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003a1c:	3501      	adds	r5, #1
 8003a1e:	615e      	str	r6, [r3, #20]
 8003a20:	6125      	str	r5, [r4, #16]
 8003a22:	4620      	mov	r0, r4
 8003a24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003a28:	08004850 	.word	0x08004850
 8003a2c:	08004861 	.word	0x08004861

08003a30 <__hi0bits>:
 8003a30:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8003a34:	4603      	mov	r3, r0
 8003a36:	bf36      	itet	cc
 8003a38:	0403      	lslcc	r3, r0, #16
 8003a3a:	2000      	movcs	r0, #0
 8003a3c:	2010      	movcc	r0, #16
 8003a3e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003a42:	bf3c      	itt	cc
 8003a44:	021b      	lslcc	r3, r3, #8
 8003a46:	3008      	addcc	r0, #8
 8003a48:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003a4c:	bf3c      	itt	cc
 8003a4e:	011b      	lslcc	r3, r3, #4
 8003a50:	3004      	addcc	r0, #4
 8003a52:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003a56:	bf3c      	itt	cc
 8003a58:	009b      	lslcc	r3, r3, #2
 8003a5a:	3002      	addcc	r0, #2
 8003a5c:	2b00      	cmp	r3, #0
 8003a5e:	db05      	blt.n	8003a6c <__hi0bits+0x3c>
 8003a60:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8003a64:	f100 0001 	add.w	r0, r0, #1
 8003a68:	bf08      	it	eq
 8003a6a:	2020      	moveq	r0, #32
 8003a6c:	4770      	bx	lr

08003a6e <__lo0bits>:
 8003a6e:	6803      	ldr	r3, [r0, #0]
 8003a70:	4602      	mov	r2, r0
 8003a72:	f013 0007 	ands.w	r0, r3, #7
 8003a76:	d00b      	beq.n	8003a90 <__lo0bits+0x22>
 8003a78:	07d9      	lsls	r1, r3, #31
 8003a7a:	d421      	bmi.n	8003ac0 <__lo0bits+0x52>
 8003a7c:	0798      	lsls	r0, r3, #30
 8003a7e:	bf49      	itett	mi
 8003a80:	085b      	lsrmi	r3, r3, #1
 8003a82:	089b      	lsrpl	r3, r3, #2
 8003a84:	2001      	movmi	r0, #1
 8003a86:	6013      	strmi	r3, [r2, #0]
 8003a88:	bf5c      	itt	pl
 8003a8a:	6013      	strpl	r3, [r2, #0]
 8003a8c:	2002      	movpl	r0, #2
 8003a8e:	4770      	bx	lr
 8003a90:	b299      	uxth	r1, r3
 8003a92:	b909      	cbnz	r1, 8003a98 <__lo0bits+0x2a>
 8003a94:	0c1b      	lsrs	r3, r3, #16
 8003a96:	2010      	movs	r0, #16
 8003a98:	b2d9      	uxtb	r1, r3
 8003a9a:	b909      	cbnz	r1, 8003aa0 <__lo0bits+0x32>
 8003a9c:	3008      	adds	r0, #8
 8003a9e:	0a1b      	lsrs	r3, r3, #8
 8003aa0:	0719      	lsls	r1, r3, #28
 8003aa2:	bf04      	itt	eq
 8003aa4:	091b      	lsreq	r3, r3, #4
 8003aa6:	3004      	addeq	r0, #4
 8003aa8:	0799      	lsls	r1, r3, #30
 8003aaa:	bf04      	itt	eq
 8003aac:	089b      	lsreq	r3, r3, #2
 8003aae:	3002      	addeq	r0, #2
 8003ab0:	07d9      	lsls	r1, r3, #31
 8003ab2:	d403      	bmi.n	8003abc <__lo0bits+0x4e>
 8003ab4:	085b      	lsrs	r3, r3, #1
 8003ab6:	f100 0001 	add.w	r0, r0, #1
 8003aba:	d003      	beq.n	8003ac4 <__lo0bits+0x56>
 8003abc:	6013      	str	r3, [r2, #0]
 8003abe:	4770      	bx	lr
 8003ac0:	2000      	movs	r0, #0
 8003ac2:	4770      	bx	lr
 8003ac4:	2020      	movs	r0, #32
 8003ac6:	4770      	bx	lr

08003ac8 <__i2b>:
 8003ac8:	b510      	push	{r4, lr}
 8003aca:	460c      	mov	r4, r1
 8003acc:	2101      	movs	r1, #1
 8003ace:	f7ff ff07 	bl	80038e0 <_Balloc>
 8003ad2:	4602      	mov	r2, r0
 8003ad4:	b928      	cbnz	r0, 8003ae2 <__i2b+0x1a>
 8003ad6:	4b05      	ldr	r3, [pc, #20]	@ (8003aec <__i2b+0x24>)
 8003ad8:	4805      	ldr	r0, [pc, #20]	@ (8003af0 <__i2b+0x28>)
 8003ada:	f240 1145 	movw	r1, #325	@ 0x145
 8003ade:	f000 fb4b 	bl	8004178 <__assert_func>
 8003ae2:	2301      	movs	r3, #1
 8003ae4:	6144      	str	r4, [r0, #20]
 8003ae6:	6103      	str	r3, [r0, #16]
 8003ae8:	bd10      	pop	{r4, pc}
 8003aea:	bf00      	nop
 8003aec:	08004850 	.word	0x08004850
 8003af0:	08004861 	.word	0x08004861

08003af4 <__multiply>:
 8003af4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003af8:	4614      	mov	r4, r2
 8003afa:	690a      	ldr	r2, [r1, #16]
 8003afc:	6923      	ldr	r3, [r4, #16]
 8003afe:	429a      	cmp	r2, r3
 8003b00:	bfa8      	it	ge
 8003b02:	4623      	movge	r3, r4
 8003b04:	460f      	mov	r7, r1
 8003b06:	bfa4      	itt	ge
 8003b08:	460c      	movge	r4, r1
 8003b0a:	461f      	movge	r7, r3
 8003b0c:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8003b10:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8003b14:	68a3      	ldr	r3, [r4, #8]
 8003b16:	6861      	ldr	r1, [r4, #4]
 8003b18:	eb0a 0609 	add.w	r6, sl, r9
 8003b1c:	42b3      	cmp	r3, r6
 8003b1e:	b085      	sub	sp, #20
 8003b20:	bfb8      	it	lt
 8003b22:	3101      	addlt	r1, #1
 8003b24:	f7ff fedc 	bl	80038e0 <_Balloc>
 8003b28:	b930      	cbnz	r0, 8003b38 <__multiply+0x44>
 8003b2a:	4602      	mov	r2, r0
 8003b2c:	4b44      	ldr	r3, [pc, #272]	@ (8003c40 <__multiply+0x14c>)
 8003b2e:	4845      	ldr	r0, [pc, #276]	@ (8003c44 <__multiply+0x150>)
 8003b30:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8003b34:	f000 fb20 	bl	8004178 <__assert_func>
 8003b38:	f100 0514 	add.w	r5, r0, #20
 8003b3c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003b40:	462b      	mov	r3, r5
 8003b42:	2200      	movs	r2, #0
 8003b44:	4543      	cmp	r3, r8
 8003b46:	d321      	bcc.n	8003b8c <__multiply+0x98>
 8003b48:	f107 0114 	add.w	r1, r7, #20
 8003b4c:	f104 0214 	add.w	r2, r4, #20
 8003b50:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8003b54:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8003b58:	9302      	str	r3, [sp, #8]
 8003b5a:	1b13      	subs	r3, r2, r4
 8003b5c:	3b15      	subs	r3, #21
 8003b5e:	f023 0303 	bic.w	r3, r3, #3
 8003b62:	3304      	adds	r3, #4
 8003b64:	f104 0715 	add.w	r7, r4, #21
 8003b68:	42ba      	cmp	r2, r7
 8003b6a:	bf38      	it	cc
 8003b6c:	2304      	movcc	r3, #4
 8003b6e:	9301      	str	r3, [sp, #4]
 8003b70:	9b02      	ldr	r3, [sp, #8]
 8003b72:	9103      	str	r1, [sp, #12]
 8003b74:	428b      	cmp	r3, r1
 8003b76:	d80c      	bhi.n	8003b92 <__multiply+0x9e>
 8003b78:	2e00      	cmp	r6, #0
 8003b7a:	dd03      	ble.n	8003b84 <__multiply+0x90>
 8003b7c:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003b80:	2b00      	cmp	r3, #0
 8003b82:	d05b      	beq.n	8003c3c <__multiply+0x148>
 8003b84:	6106      	str	r6, [r0, #16]
 8003b86:	b005      	add	sp, #20
 8003b88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b8c:	f843 2b04 	str.w	r2, [r3], #4
 8003b90:	e7d8      	b.n	8003b44 <__multiply+0x50>
 8003b92:	f8b1 a000 	ldrh.w	sl, [r1]
 8003b96:	f1ba 0f00 	cmp.w	sl, #0
 8003b9a:	d024      	beq.n	8003be6 <__multiply+0xf2>
 8003b9c:	f104 0e14 	add.w	lr, r4, #20
 8003ba0:	46a9      	mov	r9, r5
 8003ba2:	f04f 0c00 	mov.w	ip, #0
 8003ba6:	f85e 7b04 	ldr.w	r7, [lr], #4
 8003baa:	f8d9 3000 	ldr.w	r3, [r9]
 8003bae:	fa1f fb87 	uxth.w	fp, r7
 8003bb2:	b29b      	uxth	r3, r3
 8003bb4:	fb0a 330b 	mla	r3, sl, fp, r3
 8003bb8:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 8003bbc:	f8d9 7000 	ldr.w	r7, [r9]
 8003bc0:	4463      	add	r3, ip
 8003bc2:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8003bc6:	fb0a c70b 	mla	r7, sl, fp, ip
 8003bca:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8003bce:	b29b      	uxth	r3, r3
 8003bd0:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003bd4:	4572      	cmp	r2, lr
 8003bd6:	f849 3b04 	str.w	r3, [r9], #4
 8003bda:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8003bde:	d8e2      	bhi.n	8003ba6 <__multiply+0xb2>
 8003be0:	9b01      	ldr	r3, [sp, #4]
 8003be2:	f845 c003 	str.w	ip, [r5, r3]
 8003be6:	9b03      	ldr	r3, [sp, #12]
 8003be8:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8003bec:	3104      	adds	r1, #4
 8003bee:	f1b9 0f00 	cmp.w	r9, #0
 8003bf2:	d021      	beq.n	8003c38 <__multiply+0x144>
 8003bf4:	682b      	ldr	r3, [r5, #0]
 8003bf6:	f104 0c14 	add.w	ip, r4, #20
 8003bfa:	46ae      	mov	lr, r5
 8003bfc:	f04f 0a00 	mov.w	sl, #0
 8003c00:	f8bc b000 	ldrh.w	fp, [ip]
 8003c04:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8003c08:	fb09 770b 	mla	r7, r9, fp, r7
 8003c0c:	4457      	add	r7, sl
 8003c0e:	b29b      	uxth	r3, r3
 8003c10:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003c14:	f84e 3b04 	str.w	r3, [lr], #4
 8003c18:	f85c 3b04 	ldr.w	r3, [ip], #4
 8003c1c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003c20:	f8be 3000 	ldrh.w	r3, [lr]
 8003c24:	fb09 330a 	mla	r3, r9, sl, r3
 8003c28:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8003c2c:	4562      	cmp	r2, ip
 8003c2e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003c32:	d8e5      	bhi.n	8003c00 <__multiply+0x10c>
 8003c34:	9f01      	ldr	r7, [sp, #4]
 8003c36:	51eb      	str	r3, [r5, r7]
 8003c38:	3504      	adds	r5, #4
 8003c3a:	e799      	b.n	8003b70 <__multiply+0x7c>
 8003c3c:	3e01      	subs	r6, #1
 8003c3e:	e79b      	b.n	8003b78 <__multiply+0x84>
 8003c40:	08004850 	.word	0x08004850
 8003c44:	08004861 	.word	0x08004861

08003c48 <__pow5mult>:
 8003c48:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003c4c:	4615      	mov	r5, r2
 8003c4e:	f012 0203 	ands.w	r2, r2, #3
 8003c52:	4607      	mov	r7, r0
 8003c54:	460e      	mov	r6, r1
 8003c56:	d007      	beq.n	8003c68 <__pow5mult+0x20>
 8003c58:	4c25      	ldr	r4, [pc, #148]	@ (8003cf0 <__pow5mult+0xa8>)
 8003c5a:	3a01      	subs	r2, #1
 8003c5c:	2300      	movs	r3, #0
 8003c5e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003c62:	f7ff fe9f 	bl	80039a4 <__multadd>
 8003c66:	4606      	mov	r6, r0
 8003c68:	10ad      	asrs	r5, r5, #2
 8003c6a:	d03d      	beq.n	8003ce8 <__pow5mult+0xa0>
 8003c6c:	69fc      	ldr	r4, [r7, #28]
 8003c6e:	b97c      	cbnz	r4, 8003c90 <__pow5mult+0x48>
 8003c70:	2010      	movs	r0, #16
 8003c72:	f7ff fd7f 	bl	8003774 <malloc>
 8003c76:	4602      	mov	r2, r0
 8003c78:	61f8      	str	r0, [r7, #28]
 8003c7a:	b928      	cbnz	r0, 8003c88 <__pow5mult+0x40>
 8003c7c:	4b1d      	ldr	r3, [pc, #116]	@ (8003cf4 <__pow5mult+0xac>)
 8003c7e:	481e      	ldr	r0, [pc, #120]	@ (8003cf8 <__pow5mult+0xb0>)
 8003c80:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8003c84:	f000 fa78 	bl	8004178 <__assert_func>
 8003c88:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003c8c:	6004      	str	r4, [r0, #0]
 8003c8e:	60c4      	str	r4, [r0, #12]
 8003c90:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8003c94:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003c98:	b94c      	cbnz	r4, 8003cae <__pow5mult+0x66>
 8003c9a:	f240 2171 	movw	r1, #625	@ 0x271
 8003c9e:	4638      	mov	r0, r7
 8003ca0:	f7ff ff12 	bl	8003ac8 <__i2b>
 8003ca4:	2300      	movs	r3, #0
 8003ca6:	f8c8 0008 	str.w	r0, [r8, #8]
 8003caa:	4604      	mov	r4, r0
 8003cac:	6003      	str	r3, [r0, #0]
 8003cae:	f04f 0900 	mov.w	r9, #0
 8003cb2:	07eb      	lsls	r3, r5, #31
 8003cb4:	d50a      	bpl.n	8003ccc <__pow5mult+0x84>
 8003cb6:	4631      	mov	r1, r6
 8003cb8:	4622      	mov	r2, r4
 8003cba:	4638      	mov	r0, r7
 8003cbc:	f7ff ff1a 	bl	8003af4 <__multiply>
 8003cc0:	4631      	mov	r1, r6
 8003cc2:	4680      	mov	r8, r0
 8003cc4:	4638      	mov	r0, r7
 8003cc6:	f7ff fe4b 	bl	8003960 <_Bfree>
 8003cca:	4646      	mov	r6, r8
 8003ccc:	106d      	asrs	r5, r5, #1
 8003cce:	d00b      	beq.n	8003ce8 <__pow5mult+0xa0>
 8003cd0:	6820      	ldr	r0, [r4, #0]
 8003cd2:	b938      	cbnz	r0, 8003ce4 <__pow5mult+0x9c>
 8003cd4:	4622      	mov	r2, r4
 8003cd6:	4621      	mov	r1, r4
 8003cd8:	4638      	mov	r0, r7
 8003cda:	f7ff ff0b 	bl	8003af4 <__multiply>
 8003cde:	6020      	str	r0, [r4, #0]
 8003ce0:	f8c0 9000 	str.w	r9, [r0]
 8003ce4:	4604      	mov	r4, r0
 8003ce6:	e7e4      	b.n	8003cb2 <__pow5mult+0x6a>
 8003ce8:	4630      	mov	r0, r6
 8003cea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003cee:	bf00      	nop
 8003cf0:	080048bc 	.word	0x080048bc
 8003cf4:	080047e1 	.word	0x080047e1
 8003cf8:	08004861 	.word	0x08004861

08003cfc <__lshift>:
 8003cfc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003d00:	460c      	mov	r4, r1
 8003d02:	6849      	ldr	r1, [r1, #4]
 8003d04:	6923      	ldr	r3, [r4, #16]
 8003d06:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003d0a:	68a3      	ldr	r3, [r4, #8]
 8003d0c:	4607      	mov	r7, r0
 8003d0e:	4691      	mov	r9, r2
 8003d10:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003d14:	f108 0601 	add.w	r6, r8, #1
 8003d18:	42b3      	cmp	r3, r6
 8003d1a:	db0b      	blt.n	8003d34 <__lshift+0x38>
 8003d1c:	4638      	mov	r0, r7
 8003d1e:	f7ff fddf 	bl	80038e0 <_Balloc>
 8003d22:	4605      	mov	r5, r0
 8003d24:	b948      	cbnz	r0, 8003d3a <__lshift+0x3e>
 8003d26:	4602      	mov	r2, r0
 8003d28:	4b28      	ldr	r3, [pc, #160]	@ (8003dcc <__lshift+0xd0>)
 8003d2a:	4829      	ldr	r0, [pc, #164]	@ (8003dd0 <__lshift+0xd4>)
 8003d2c:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8003d30:	f000 fa22 	bl	8004178 <__assert_func>
 8003d34:	3101      	adds	r1, #1
 8003d36:	005b      	lsls	r3, r3, #1
 8003d38:	e7ee      	b.n	8003d18 <__lshift+0x1c>
 8003d3a:	2300      	movs	r3, #0
 8003d3c:	f100 0114 	add.w	r1, r0, #20
 8003d40:	f100 0210 	add.w	r2, r0, #16
 8003d44:	4618      	mov	r0, r3
 8003d46:	4553      	cmp	r3, sl
 8003d48:	db33      	blt.n	8003db2 <__lshift+0xb6>
 8003d4a:	6920      	ldr	r0, [r4, #16]
 8003d4c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003d50:	f104 0314 	add.w	r3, r4, #20
 8003d54:	f019 091f 	ands.w	r9, r9, #31
 8003d58:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003d5c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003d60:	d02b      	beq.n	8003dba <__lshift+0xbe>
 8003d62:	f1c9 0e20 	rsb	lr, r9, #32
 8003d66:	468a      	mov	sl, r1
 8003d68:	2200      	movs	r2, #0
 8003d6a:	6818      	ldr	r0, [r3, #0]
 8003d6c:	fa00 f009 	lsl.w	r0, r0, r9
 8003d70:	4310      	orrs	r0, r2
 8003d72:	f84a 0b04 	str.w	r0, [sl], #4
 8003d76:	f853 2b04 	ldr.w	r2, [r3], #4
 8003d7a:	459c      	cmp	ip, r3
 8003d7c:	fa22 f20e 	lsr.w	r2, r2, lr
 8003d80:	d8f3      	bhi.n	8003d6a <__lshift+0x6e>
 8003d82:	ebac 0304 	sub.w	r3, ip, r4
 8003d86:	3b15      	subs	r3, #21
 8003d88:	f023 0303 	bic.w	r3, r3, #3
 8003d8c:	3304      	adds	r3, #4
 8003d8e:	f104 0015 	add.w	r0, r4, #21
 8003d92:	4584      	cmp	ip, r0
 8003d94:	bf38      	it	cc
 8003d96:	2304      	movcc	r3, #4
 8003d98:	50ca      	str	r2, [r1, r3]
 8003d9a:	b10a      	cbz	r2, 8003da0 <__lshift+0xa4>
 8003d9c:	f108 0602 	add.w	r6, r8, #2
 8003da0:	3e01      	subs	r6, #1
 8003da2:	4638      	mov	r0, r7
 8003da4:	612e      	str	r6, [r5, #16]
 8003da6:	4621      	mov	r1, r4
 8003da8:	f7ff fdda 	bl	8003960 <_Bfree>
 8003dac:	4628      	mov	r0, r5
 8003dae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003db2:	f842 0f04 	str.w	r0, [r2, #4]!
 8003db6:	3301      	adds	r3, #1
 8003db8:	e7c5      	b.n	8003d46 <__lshift+0x4a>
 8003dba:	3904      	subs	r1, #4
 8003dbc:	f853 2b04 	ldr.w	r2, [r3], #4
 8003dc0:	f841 2f04 	str.w	r2, [r1, #4]!
 8003dc4:	459c      	cmp	ip, r3
 8003dc6:	d8f9      	bhi.n	8003dbc <__lshift+0xc0>
 8003dc8:	e7ea      	b.n	8003da0 <__lshift+0xa4>
 8003dca:	bf00      	nop
 8003dcc:	08004850 	.word	0x08004850
 8003dd0:	08004861 	.word	0x08004861

08003dd4 <__mcmp>:
 8003dd4:	690a      	ldr	r2, [r1, #16]
 8003dd6:	4603      	mov	r3, r0
 8003dd8:	6900      	ldr	r0, [r0, #16]
 8003dda:	1a80      	subs	r0, r0, r2
 8003ddc:	b530      	push	{r4, r5, lr}
 8003dde:	d10e      	bne.n	8003dfe <__mcmp+0x2a>
 8003de0:	3314      	adds	r3, #20
 8003de2:	3114      	adds	r1, #20
 8003de4:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003de8:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8003dec:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003df0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003df4:	4295      	cmp	r5, r2
 8003df6:	d003      	beq.n	8003e00 <__mcmp+0x2c>
 8003df8:	d205      	bcs.n	8003e06 <__mcmp+0x32>
 8003dfa:	f04f 30ff 	mov.w	r0, #4294967295
 8003dfe:	bd30      	pop	{r4, r5, pc}
 8003e00:	42a3      	cmp	r3, r4
 8003e02:	d3f3      	bcc.n	8003dec <__mcmp+0x18>
 8003e04:	e7fb      	b.n	8003dfe <__mcmp+0x2a>
 8003e06:	2001      	movs	r0, #1
 8003e08:	e7f9      	b.n	8003dfe <__mcmp+0x2a>
	...

08003e0c <__mdiff>:
 8003e0c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e10:	4689      	mov	r9, r1
 8003e12:	4606      	mov	r6, r0
 8003e14:	4611      	mov	r1, r2
 8003e16:	4648      	mov	r0, r9
 8003e18:	4614      	mov	r4, r2
 8003e1a:	f7ff ffdb 	bl	8003dd4 <__mcmp>
 8003e1e:	1e05      	subs	r5, r0, #0
 8003e20:	d112      	bne.n	8003e48 <__mdiff+0x3c>
 8003e22:	4629      	mov	r1, r5
 8003e24:	4630      	mov	r0, r6
 8003e26:	f7ff fd5b 	bl	80038e0 <_Balloc>
 8003e2a:	4602      	mov	r2, r0
 8003e2c:	b928      	cbnz	r0, 8003e3a <__mdiff+0x2e>
 8003e2e:	4b3f      	ldr	r3, [pc, #252]	@ (8003f2c <__mdiff+0x120>)
 8003e30:	f240 2137 	movw	r1, #567	@ 0x237
 8003e34:	483e      	ldr	r0, [pc, #248]	@ (8003f30 <__mdiff+0x124>)
 8003e36:	f000 f99f 	bl	8004178 <__assert_func>
 8003e3a:	2301      	movs	r3, #1
 8003e3c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003e40:	4610      	mov	r0, r2
 8003e42:	b003      	add	sp, #12
 8003e44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e48:	bfbc      	itt	lt
 8003e4a:	464b      	movlt	r3, r9
 8003e4c:	46a1      	movlt	r9, r4
 8003e4e:	4630      	mov	r0, r6
 8003e50:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003e54:	bfba      	itte	lt
 8003e56:	461c      	movlt	r4, r3
 8003e58:	2501      	movlt	r5, #1
 8003e5a:	2500      	movge	r5, #0
 8003e5c:	f7ff fd40 	bl	80038e0 <_Balloc>
 8003e60:	4602      	mov	r2, r0
 8003e62:	b918      	cbnz	r0, 8003e6c <__mdiff+0x60>
 8003e64:	4b31      	ldr	r3, [pc, #196]	@ (8003f2c <__mdiff+0x120>)
 8003e66:	f240 2145 	movw	r1, #581	@ 0x245
 8003e6a:	e7e3      	b.n	8003e34 <__mdiff+0x28>
 8003e6c:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003e70:	6926      	ldr	r6, [r4, #16]
 8003e72:	60c5      	str	r5, [r0, #12]
 8003e74:	f109 0310 	add.w	r3, r9, #16
 8003e78:	f109 0514 	add.w	r5, r9, #20
 8003e7c:	f104 0e14 	add.w	lr, r4, #20
 8003e80:	f100 0b14 	add.w	fp, r0, #20
 8003e84:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8003e88:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8003e8c:	9301      	str	r3, [sp, #4]
 8003e8e:	46d9      	mov	r9, fp
 8003e90:	f04f 0c00 	mov.w	ip, #0
 8003e94:	9b01      	ldr	r3, [sp, #4]
 8003e96:	f85e 0b04 	ldr.w	r0, [lr], #4
 8003e9a:	f853 af04 	ldr.w	sl, [r3, #4]!
 8003e9e:	9301      	str	r3, [sp, #4]
 8003ea0:	fa1f f38a 	uxth.w	r3, sl
 8003ea4:	4619      	mov	r1, r3
 8003ea6:	b283      	uxth	r3, r0
 8003ea8:	1acb      	subs	r3, r1, r3
 8003eaa:	0c00      	lsrs	r0, r0, #16
 8003eac:	4463      	add	r3, ip
 8003eae:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8003eb2:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8003eb6:	b29b      	uxth	r3, r3
 8003eb8:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8003ebc:	4576      	cmp	r6, lr
 8003ebe:	f849 3b04 	str.w	r3, [r9], #4
 8003ec2:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003ec6:	d8e5      	bhi.n	8003e94 <__mdiff+0x88>
 8003ec8:	1b33      	subs	r3, r6, r4
 8003eca:	3b15      	subs	r3, #21
 8003ecc:	f023 0303 	bic.w	r3, r3, #3
 8003ed0:	3415      	adds	r4, #21
 8003ed2:	3304      	adds	r3, #4
 8003ed4:	42a6      	cmp	r6, r4
 8003ed6:	bf38      	it	cc
 8003ed8:	2304      	movcc	r3, #4
 8003eda:	441d      	add	r5, r3
 8003edc:	445b      	add	r3, fp
 8003ede:	461e      	mov	r6, r3
 8003ee0:	462c      	mov	r4, r5
 8003ee2:	4544      	cmp	r4, r8
 8003ee4:	d30e      	bcc.n	8003f04 <__mdiff+0xf8>
 8003ee6:	f108 0103 	add.w	r1, r8, #3
 8003eea:	1b49      	subs	r1, r1, r5
 8003eec:	f021 0103 	bic.w	r1, r1, #3
 8003ef0:	3d03      	subs	r5, #3
 8003ef2:	45a8      	cmp	r8, r5
 8003ef4:	bf38      	it	cc
 8003ef6:	2100      	movcc	r1, #0
 8003ef8:	440b      	add	r3, r1
 8003efa:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8003efe:	b191      	cbz	r1, 8003f26 <__mdiff+0x11a>
 8003f00:	6117      	str	r7, [r2, #16]
 8003f02:	e79d      	b.n	8003e40 <__mdiff+0x34>
 8003f04:	f854 1b04 	ldr.w	r1, [r4], #4
 8003f08:	46e6      	mov	lr, ip
 8003f0a:	0c08      	lsrs	r0, r1, #16
 8003f0c:	fa1c fc81 	uxtah	ip, ip, r1
 8003f10:	4471      	add	r1, lr
 8003f12:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8003f16:	b289      	uxth	r1, r1
 8003f18:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8003f1c:	f846 1b04 	str.w	r1, [r6], #4
 8003f20:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003f24:	e7dd      	b.n	8003ee2 <__mdiff+0xd6>
 8003f26:	3f01      	subs	r7, #1
 8003f28:	e7e7      	b.n	8003efa <__mdiff+0xee>
 8003f2a:	bf00      	nop
 8003f2c:	08004850 	.word	0x08004850
 8003f30:	08004861 	.word	0x08004861

08003f34 <__d2b>:
 8003f34:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003f38:	460f      	mov	r7, r1
 8003f3a:	2101      	movs	r1, #1
 8003f3c:	ec59 8b10 	vmov	r8, r9, d0
 8003f40:	4616      	mov	r6, r2
 8003f42:	f7ff fccd 	bl	80038e0 <_Balloc>
 8003f46:	4604      	mov	r4, r0
 8003f48:	b930      	cbnz	r0, 8003f58 <__d2b+0x24>
 8003f4a:	4602      	mov	r2, r0
 8003f4c:	4b23      	ldr	r3, [pc, #140]	@ (8003fdc <__d2b+0xa8>)
 8003f4e:	4824      	ldr	r0, [pc, #144]	@ (8003fe0 <__d2b+0xac>)
 8003f50:	f240 310f 	movw	r1, #783	@ 0x30f
 8003f54:	f000 f910 	bl	8004178 <__assert_func>
 8003f58:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003f5c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003f60:	b10d      	cbz	r5, 8003f66 <__d2b+0x32>
 8003f62:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003f66:	9301      	str	r3, [sp, #4]
 8003f68:	f1b8 0300 	subs.w	r3, r8, #0
 8003f6c:	d023      	beq.n	8003fb6 <__d2b+0x82>
 8003f6e:	4668      	mov	r0, sp
 8003f70:	9300      	str	r3, [sp, #0]
 8003f72:	f7ff fd7c 	bl	8003a6e <__lo0bits>
 8003f76:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003f7a:	b1d0      	cbz	r0, 8003fb2 <__d2b+0x7e>
 8003f7c:	f1c0 0320 	rsb	r3, r0, #32
 8003f80:	fa02 f303 	lsl.w	r3, r2, r3
 8003f84:	430b      	orrs	r3, r1
 8003f86:	40c2      	lsrs	r2, r0
 8003f88:	6163      	str	r3, [r4, #20]
 8003f8a:	9201      	str	r2, [sp, #4]
 8003f8c:	9b01      	ldr	r3, [sp, #4]
 8003f8e:	61a3      	str	r3, [r4, #24]
 8003f90:	2b00      	cmp	r3, #0
 8003f92:	bf0c      	ite	eq
 8003f94:	2201      	moveq	r2, #1
 8003f96:	2202      	movne	r2, #2
 8003f98:	6122      	str	r2, [r4, #16]
 8003f9a:	b1a5      	cbz	r5, 8003fc6 <__d2b+0x92>
 8003f9c:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8003fa0:	4405      	add	r5, r0
 8003fa2:	603d      	str	r5, [r7, #0]
 8003fa4:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8003fa8:	6030      	str	r0, [r6, #0]
 8003faa:	4620      	mov	r0, r4
 8003fac:	b003      	add	sp, #12
 8003fae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003fb2:	6161      	str	r1, [r4, #20]
 8003fb4:	e7ea      	b.n	8003f8c <__d2b+0x58>
 8003fb6:	a801      	add	r0, sp, #4
 8003fb8:	f7ff fd59 	bl	8003a6e <__lo0bits>
 8003fbc:	9b01      	ldr	r3, [sp, #4]
 8003fbe:	6163      	str	r3, [r4, #20]
 8003fc0:	3020      	adds	r0, #32
 8003fc2:	2201      	movs	r2, #1
 8003fc4:	e7e8      	b.n	8003f98 <__d2b+0x64>
 8003fc6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003fca:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8003fce:	6038      	str	r0, [r7, #0]
 8003fd0:	6918      	ldr	r0, [r3, #16]
 8003fd2:	f7ff fd2d 	bl	8003a30 <__hi0bits>
 8003fd6:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003fda:	e7e5      	b.n	8003fa8 <__d2b+0x74>
 8003fdc:	08004850 	.word	0x08004850
 8003fe0:	08004861 	.word	0x08004861

08003fe4 <__sflush_r>:
 8003fe4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003fe8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003fec:	0716      	lsls	r6, r2, #28
 8003fee:	4605      	mov	r5, r0
 8003ff0:	460c      	mov	r4, r1
 8003ff2:	d454      	bmi.n	800409e <__sflush_r+0xba>
 8003ff4:	684b      	ldr	r3, [r1, #4]
 8003ff6:	2b00      	cmp	r3, #0
 8003ff8:	dc02      	bgt.n	8004000 <__sflush_r+0x1c>
 8003ffa:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8003ffc:	2b00      	cmp	r3, #0
 8003ffe:	dd48      	ble.n	8004092 <__sflush_r+0xae>
 8004000:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8004002:	2e00      	cmp	r6, #0
 8004004:	d045      	beq.n	8004092 <__sflush_r+0xae>
 8004006:	2300      	movs	r3, #0
 8004008:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800400c:	682f      	ldr	r7, [r5, #0]
 800400e:	6a21      	ldr	r1, [r4, #32]
 8004010:	602b      	str	r3, [r5, #0]
 8004012:	d030      	beq.n	8004076 <__sflush_r+0x92>
 8004014:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8004016:	89a3      	ldrh	r3, [r4, #12]
 8004018:	0759      	lsls	r1, r3, #29
 800401a:	d505      	bpl.n	8004028 <__sflush_r+0x44>
 800401c:	6863      	ldr	r3, [r4, #4]
 800401e:	1ad2      	subs	r2, r2, r3
 8004020:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8004022:	b10b      	cbz	r3, 8004028 <__sflush_r+0x44>
 8004024:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004026:	1ad2      	subs	r2, r2, r3
 8004028:	2300      	movs	r3, #0
 800402a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800402c:	6a21      	ldr	r1, [r4, #32]
 800402e:	4628      	mov	r0, r5
 8004030:	47b0      	blx	r6
 8004032:	1c43      	adds	r3, r0, #1
 8004034:	89a3      	ldrh	r3, [r4, #12]
 8004036:	d106      	bne.n	8004046 <__sflush_r+0x62>
 8004038:	6829      	ldr	r1, [r5, #0]
 800403a:	291d      	cmp	r1, #29
 800403c:	d82b      	bhi.n	8004096 <__sflush_r+0xb2>
 800403e:	4a2a      	ldr	r2, [pc, #168]	@ (80040e8 <__sflush_r+0x104>)
 8004040:	410a      	asrs	r2, r1
 8004042:	07d6      	lsls	r6, r2, #31
 8004044:	d427      	bmi.n	8004096 <__sflush_r+0xb2>
 8004046:	2200      	movs	r2, #0
 8004048:	6062      	str	r2, [r4, #4]
 800404a:	04d9      	lsls	r1, r3, #19
 800404c:	6922      	ldr	r2, [r4, #16]
 800404e:	6022      	str	r2, [r4, #0]
 8004050:	d504      	bpl.n	800405c <__sflush_r+0x78>
 8004052:	1c42      	adds	r2, r0, #1
 8004054:	d101      	bne.n	800405a <__sflush_r+0x76>
 8004056:	682b      	ldr	r3, [r5, #0]
 8004058:	b903      	cbnz	r3, 800405c <__sflush_r+0x78>
 800405a:	6560      	str	r0, [r4, #84]	@ 0x54
 800405c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800405e:	602f      	str	r7, [r5, #0]
 8004060:	b1b9      	cbz	r1, 8004092 <__sflush_r+0xae>
 8004062:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8004066:	4299      	cmp	r1, r3
 8004068:	d002      	beq.n	8004070 <__sflush_r+0x8c>
 800406a:	4628      	mov	r0, r5
 800406c:	f7ff fb38 	bl	80036e0 <_free_r>
 8004070:	2300      	movs	r3, #0
 8004072:	6363      	str	r3, [r4, #52]	@ 0x34
 8004074:	e00d      	b.n	8004092 <__sflush_r+0xae>
 8004076:	2301      	movs	r3, #1
 8004078:	4628      	mov	r0, r5
 800407a:	47b0      	blx	r6
 800407c:	4602      	mov	r2, r0
 800407e:	1c50      	adds	r0, r2, #1
 8004080:	d1c9      	bne.n	8004016 <__sflush_r+0x32>
 8004082:	682b      	ldr	r3, [r5, #0]
 8004084:	2b00      	cmp	r3, #0
 8004086:	d0c6      	beq.n	8004016 <__sflush_r+0x32>
 8004088:	2b1d      	cmp	r3, #29
 800408a:	d001      	beq.n	8004090 <__sflush_r+0xac>
 800408c:	2b16      	cmp	r3, #22
 800408e:	d11e      	bne.n	80040ce <__sflush_r+0xea>
 8004090:	602f      	str	r7, [r5, #0]
 8004092:	2000      	movs	r0, #0
 8004094:	e022      	b.n	80040dc <__sflush_r+0xf8>
 8004096:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800409a:	b21b      	sxth	r3, r3
 800409c:	e01b      	b.n	80040d6 <__sflush_r+0xf2>
 800409e:	690f      	ldr	r7, [r1, #16]
 80040a0:	2f00      	cmp	r7, #0
 80040a2:	d0f6      	beq.n	8004092 <__sflush_r+0xae>
 80040a4:	0793      	lsls	r3, r2, #30
 80040a6:	680e      	ldr	r6, [r1, #0]
 80040a8:	bf08      	it	eq
 80040aa:	694b      	ldreq	r3, [r1, #20]
 80040ac:	600f      	str	r7, [r1, #0]
 80040ae:	bf18      	it	ne
 80040b0:	2300      	movne	r3, #0
 80040b2:	eba6 0807 	sub.w	r8, r6, r7
 80040b6:	608b      	str	r3, [r1, #8]
 80040b8:	f1b8 0f00 	cmp.w	r8, #0
 80040bc:	dde9      	ble.n	8004092 <__sflush_r+0xae>
 80040be:	6a21      	ldr	r1, [r4, #32]
 80040c0:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80040c2:	4643      	mov	r3, r8
 80040c4:	463a      	mov	r2, r7
 80040c6:	4628      	mov	r0, r5
 80040c8:	47b0      	blx	r6
 80040ca:	2800      	cmp	r0, #0
 80040cc:	dc08      	bgt.n	80040e0 <__sflush_r+0xfc>
 80040ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80040d2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80040d6:	81a3      	strh	r3, [r4, #12]
 80040d8:	f04f 30ff 	mov.w	r0, #4294967295
 80040dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80040e0:	4407      	add	r7, r0
 80040e2:	eba8 0800 	sub.w	r8, r8, r0
 80040e6:	e7e7      	b.n	80040b8 <__sflush_r+0xd4>
 80040e8:	dfbffffe 	.word	0xdfbffffe

080040ec <_fflush_r>:
 80040ec:	b538      	push	{r3, r4, r5, lr}
 80040ee:	690b      	ldr	r3, [r1, #16]
 80040f0:	4605      	mov	r5, r0
 80040f2:	460c      	mov	r4, r1
 80040f4:	b913      	cbnz	r3, 80040fc <_fflush_r+0x10>
 80040f6:	2500      	movs	r5, #0
 80040f8:	4628      	mov	r0, r5
 80040fa:	bd38      	pop	{r3, r4, r5, pc}
 80040fc:	b118      	cbz	r0, 8004106 <_fflush_r+0x1a>
 80040fe:	6a03      	ldr	r3, [r0, #32]
 8004100:	b90b      	cbnz	r3, 8004106 <_fflush_r+0x1a>
 8004102:	f7fe fba7 	bl	8002854 <__sinit>
 8004106:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800410a:	2b00      	cmp	r3, #0
 800410c:	d0f3      	beq.n	80040f6 <_fflush_r+0xa>
 800410e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8004110:	07d0      	lsls	r0, r2, #31
 8004112:	d404      	bmi.n	800411e <_fflush_r+0x32>
 8004114:	0599      	lsls	r1, r3, #22
 8004116:	d402      	bmi.n	800411e <_fflush_r+0x32>
 8004118:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800411a:	f7fe fc92 	bl	8002a42 <__retarget_lock_acquire_recursive>
 800411e:	4628      	mov	r0, r5
 8004120:	4621      	mov	r1, r4
 8004122:	f7ff ff5f 	bl	8003fe4 <__sflush_r>
 8004126:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004128:	07da      	lsls	r2, r3, #31
 800412a:	4605      	mov	r5, r0
 800412c:	d4e4      	bmi.n	80040f8 <_fflush_r+0xc>
 800412e:	89a3      	ldrh	r3, [r4, #12]
 8004130:	059b      	lsls	r3, r3, #22
 8004132:	d4e1      	bmi.n	80040f8 <_fflush_r+0xc>
 8004134:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8004136:	f7fe fc85 	bl	8002a44 <__retarget_lock_release_recursive>
 800413a:	e7dd      	b.n	80040f8 <_fflush_r+0xc>

0800413c <_sbrk_r>:
 800413c:	b538      	push	{r3, r4, r5, lr}
 800413e:	4d06      	ldr	r5, [pc, #24]	@ (8004158 <_sbrk_r+0x1c>)
 8004140:	2300      	movs	r3, #0
 8004142:	4604      	mov	r4, r0
 8004144:	4608      	mov	r0, r1
 8004146:	602b      	str	r3, [r5, #0]
 8004148:	f7fd f876 	bl	8001238 <_sbrk>
 800414c:	1c43      	adds	r3, r0, #1
 800414e:	d102      	bne.n	8004156 <_sbrk_r+0x1a>
 8004150:	682b      	ldr	r3, [r5, #0]
 8004152:	b103      	cbz	r3, 8004156 <_sbrk_r+0x1a>
 8004154:	6023      	str	r3, [r4, #0]
 8004156:	bd38      	pop	{r3, r4, r5, pc}
 8004158:	20000348 	.word	0x20000348

0800415c <memcpy>:
 800415c:	440a      	add	r2, r1
 800415e:	4291      	cmp	r1, r2
 8004160:	f100 33ff 	add.w	r3, r0, #4294967295
 8004164:	d100      	bne.n	8004168 <memcpy+0xc>
 8004166:	4770      	bx	lr
 8004168:	b510      	push	{r4, lr}
 800416a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800416e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004172:	4291      	cmp	r1, r2
 8004174:	d1f9      	bne.n	800416a <memcpy+0xe>
 8004176:	bd10      	pop	{r4, pc}

08004178 <__assert_func>:
 8004178:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800417a:	4614      	mov	r4, r2
 800417c:	461a      	mov	r2, r3
 800417e:	4b09      	ldr	r3, [pc, #36]	@ (80041a4 <__assert_func+0x2c>)
 8004180:	681b      	ldr	r3, [r3, #0]
 8004182:	4605      	mov	r5, r0
 8004184:	68d8      	ldr	r0, [r3, #12]
 8004186:	b954      	cbnz	r4, 800419e <__assert_func+0x26>
 8004188:	4b07      	ldr	r3, [pc, #28]	@ (80041a8 <__assert_func+0x30>)
 800418a:	461c      	mov	r4, r3
 800418c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8004190:	9100      	str	r1, [sp, #0]
 8004192:	462b      	mov	r3, r5
 8004194:	4905      	ldr	r1, [pc, #20]	@ (80041ac <__assert_func+0x34>)
 8004196:	f000 f841 	bl	800421c <fiprintf>
 800419a:	f000 f851 	bl	8004240 <abort>
 800419e:	4b04      	ldr	r3, [pc, #16]	@ (80041b0 <__assert_func+0x38>)
 80041a0:	e7f4      	b.n	800418c <__assert_func+0x14>
 80041a2:	bf00      	nop
 80041a4:	2000000c 	.word	0x2000000c
 80041a8:	080049fd 	.word	0x080049fd
 80041ac:	080049cf 	.word	0x080049cf
 80041b0:	080049c2 	.word	0x080049c2

080041b4 <_calloc_r>:
 80041b4:	b570      	push	{r4, r5, r6, lr}
 80041b6:	fba1 5402 	umull	r5, r4, r1, r2
 80041ba:	b93c      	cbnz	r4, 80041cc <_calloc_r+0x18>
 80041bc:	4629      	mov	r1, r5
 80041be:	f7ff fb03 	bl	80037c8 <_malloc_r>
 80041c2:	4606      	mov	r6, r0
 80041c4:	b928      	cbnz	r0, 80041d2 <_calloc_r+0x1e>
 80041c6:	2600      	movs	r6, #0
 80041c8:	4630      	mov	r0, r6
 80041ca:	bd70      	pop	{r4, r5, r6, pc}
 80041cc:	220c      	movs	r2, #12
 80041ce:	6002      	str	r2, [r0, #0]
 80041d0:	e7f9      	b.n	80041c6 <_calloc_r+0x12>
 80041d2:	462a      	mov	r2, r5
 80041d4:	4621      	mov	r1, r4
 80041d6:	f7fe fbb6 	bl	8002946 <memset>
 80041da:	e7f5      	b.n	80041c8 <_calloc_r+0x14>

080041dc <__ascii_mbtowc>:
 80041dc:	b082      	sub	sp, #8
 80041de:	b901      	cbnz	r1, 80041e2 <__ascii_mbtowc+0x6>
 80041e0:	a901      	add	r1, sp, #4
 80041e2:	b142      	cbz	r2, 80041f6 <__ascii_mbtowc+0x1a>
 80041e4:	b14b      	cbz	r3, 80041fa <__ascii_mbtowc+0x1e>
 80041e6:	7813      	ldrb	r3, [r2, #0]
 80041e8:	600b      	str	r3, [r1, #0]
 80041ea:	7812      	ldrb	r2, [r2, #0]
 80041ec:	1e10      	subs	r0, r2, #0
 80041ee:	bf18      	it	ne
 80041f0:	2001      	movne	r0, #1
 80041f2:	b002      	add	sp, #8
 80041f4:	4770      	bx	lr
 80041f6:	4610      	mov	r0, r2
 80041f8:	e7fb      	b.n	80041f2 <__ascii_mbtowc+0x16>
 80041fa:	f06f 0001 	mvn.w	r0, #1
 80041fe:	e7f8      	b.n	80041f2 <__ascii_mbtowc+0x16>

08004200 <__ascii_wctomb>:
 8004200:	4603      	mov	r3, r0
 8004202:	4608      	mov	r0, r1
 8004204:	b141      	cbz	r1, 8004218 <__ascii_wctomb+0x18>
 8004206:	2aff      	cmp	r2, #255	@ 0xff
 8004208:	d904      	bls.n	8004214 <__ascii_wctomb+0x14>
 800420a:	228a      	movs	r2, #138	@ 0x8a
 800420c:	601a      	str	r2, [r3, #0]
 800420e:	f04f 30ff 	mov.w	r0, #4294967295
 8004212:	4770      	bx	lr
 8004214:	700a      	strb	r2, [r1, #0]
 8004216:	2001      	movs	r0, #1
 8004218:	4770      	bx	lr
	...

0800421c <fiprintf>:
 800421c:	b40e      	push	{r1, r2, r3}
 800421e:	b503      	push	{r0, r1, lr}
 8004220:	4601      	mov	r1, r0
 8004222:	ab03      	add	r3, sp, #12
 8004224:	4805      	ldr	r0, [pc, #20]	@ (800423c <fiprintf+0x20>)
 8004226:	f853 2b04 	ldr.w	r2, [r3], #4
 800422a:	6800      	ldr	r0, [r0, #0]
 800422c:	9301      	str	r3, [sp, #4]
 800422e:	f000 f837 	bl	80042a0 <_vfiprintf_r>
 8004232:	b002      	add	sp, #8
 8004234:	f85d eb04 	ldr.w	lr, [sp], #4
 8004238:	b003      	add	sp, #12
 800423a:	4770      	bx	lr
 800423c:	2000000c 	.word	0x2000000c

08004240 <abort>:
 8004240:	b508      	push	{r3, lr}
 8004242:	2006      	movs	r0, #6
 8004244:	f000 fa00 	bl	8004648 <raise>
 8004248:	2001      	movs	r0, #1
 800424a:	f7fc ffb5 	bl	80011b8 <_exit>

0800424e <__sfputc_r>:
 800424e:	6893      	ldr	r3, [r2, #8]
 8004250:	3b01      	subs	r3, #1
 8004252:	2b00      	cmp	r3, #0
 8004254:	b410      	push	{r4}
 8004256:	6093      	str	r3, [r2, #8]
 8004258:	da08      	bge.n	800426c <__sfputc_r+0x1e>
 800425a:	6994      	ldr	r4, [r2, #24]
 800425c:	42a3      	cmp	r3, r4
 800425e:	db01      	blt.n	8004264 <__sfputc_r+0x16>
 8004260:	290a      	cmp	r1, #10
 8004262:	d103      	bne.n	800426c <__sfputc_r+0x1e>
 8004264:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004268:	f000 b932 	b.w	80044d0 <__swbuf_r>
 800426c:	6813      	ldr	r3, [r2, #0]
 800426e:	1c58      	adds	r0, r3, #1
 8004270:	6010      	str	r0, [r2, #0]
 8004272:	7019      	strb	r1, [r3, #0]
 8004274:	4608      	mov	r0, r1
 8004276:	f85d 4b04 	ldr.w	r4, [sp], #4
 800427a:	4770      	bx	lr

0800427c <__sfputs_r>:
 800427c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800427e:	4606      	mov	r6, r0
 8004280:	460f      	mov	r7, r1
 8004282:	4614      	mov	r4, r2
 8004284:	18d5      	adds	r5, r2, r3
 8004286:	42ac      	cmp	r4, r5
 8004288:	d101      	bne.n	800428e <__sfputs_r+0x12>
 800428a:	2000      	movs	r0, #0
 800428c:	e007      	b.n	800429e <__sfputs_r+0x22>
 800428e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004292:	463a      	mov	r2, r7
 8004294:	4630      	mov	r0, r6
 8004296:	f7ff ffda 	bl	800424e <__sfputc_r>
 800429a:	1c43      	adds	r3, r0, #1
 800429c:	d1f3      	bne.n	8004286 <__sfputs_r+0xa>
 800429e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080042a0 <_vfiprintf_r>:
 80042a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80042a4:	460d      	mov	r5, r1
 80042a6:	b09d      	sub	sp, #116	@ 0x74
 80042a8:	4614      	mov	r4, r2
 80042aa:	4698      	mov	r8, r3
 80042ac:	4606      	mov	r6, r0
 80042ae:	b118      	cbz	r0, 80042b8 <_vfiprintf_r+0x18>
 80042b0:	6a03      	ldr	r3, [r0, #32]
 80042b2:	b90b      	cbnz	r3, 80042b8 <_vfiprintf_r+0x18>
 80042b4:	f7fe face 	bl	8002854 <__sinit>
 80042b8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80042ba:	07d9      	lsls	r1, r3, #31
 80042bc:	d405      	bmi.n	80042ca <_vfiprintf_r+0x2a>
 80042be:	89ab      	ldrh	r3, [r5, #12]
 80042c0:	059a      	lsls	r2, r3, #22
 80042c2:	d402      	bmi.n	80042ca <_vfiprintf_r+0x2a>
 80042c4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80042c6:	f7fe fbbc 	bl	8002a42 <__retarget_lock_acquire_recursive>
 80042ca:	89ab      	ldrh	r3, [r5, #12]
 80042cc:	071b      	lsls	r3, r3, #28
 80042ce:	d501      	bpl.n	80042d4 <_vfiprintf_r+0x34>
 80042d0:	692b      	ldr	r3, [r5, #16]
 80042d2:	b99b      	cbnz	r3, 80042fc <_vfiprintf_r+0x5c>
 80042d4:	4629      	mov	r1, r5
 80042d6:	4630      	mov	r0, r6
 80042d8:	f000 f938 	bl	800454c <__swsetup_r>
 80042dc:	b170      	cbz	r0, 80042fc <_vfiprintf_r+0x5c>
 80042de:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80042e0:	07dc      	lsls	r4, r3, #31
 80042e2:	d504      	bpl.n	80042ee <_vfiprintf_r+0x4e>
 80042e4:	f04f 30ff 	mov.w	r0, #4294967295
 80042e8:	b01d      	add	sp, #116	@ 0x74
 80042ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042ee:	89ab      	ldrh	r3, [r5, #12]
 80042f0:	0598      	lsls	r0, r3, #22
 80042f2:	d4f7      	bmi.n	80042e4 <_vfiprintf_r+0x44>
 80042f4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80042f6:	f7fe fba5 	bl	8002a44 <__retarget_lock_release_recursive>
 80042fa:	e7f3      	b.n	80042e4 <_vfiprintf_r+0x44>
 80042fc:	2300      	movs	r3, #0
 80042fe:	9309      	str	r3, [sp, #36]	@ 0x24
 8004300:	2320      	movs	r3, #32
 8004302:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8004306:	f8cd 800c 	str.w	r8, [sp, #12]
 800430a:	2330      	movs	r3, #48	@ 0x30
 800430c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80044bc <_vfiprintf_r+0x21c>
 8004310:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8004314:	f04f 0901 	mov.w	r9, #1
 8004318:	4623      	mov	r3, r4
 800431a:	469a      	mov	sl, r3
 800431c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004320:	b10a      	cbz	r2, 8004326 <_vfiprintf_r+0x86>
 8004322:	2a25      	cmp	r2, #37	@ 0x25
 8004324:	d1f9      	bne.n	800431a <_vfiprintf_r+0x7a>
 8004326:	ebba 0b04 	subs.w	fp, sl, r4
 800432a:	d00b      	beq.n	8004344 <_vfiprintf_r+0xa4>
 800432c:	465b      	mov	r3, fp
 800432e:	4622      	mov	r2, r4
 8004330:	4629      	mov	r1, r5
 8004332:	4630      	mov	r0, r6
 8004334:	f7ff ffa2 	bl	800427c <__sfputs_r>
 8004338:	3001      	adds	r0, #1
 800433a:	f000 80a7 	beq.w	800448c <_vfiprintf_r+0x1ec>
 800433e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004340:	445a      	add	r2, fp
 8004342:	9209      	str	r2, [sp, #36]	@ 0x24
 8004344:	f89a 3000 	ldrb.w	r3, [sl]
 8004348:	2b00      	cmp	r3, #0
 800434a:	f000 809f 	beq.w	800448c <_vfiprintf_r+0x1ec>
 800434e:	2300      	movs	r3, #0
 8004350:	f04f 32ff 	mov.w	r2, #4294967295
 8004354:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004358:	f10a 0a01 	add.w	sl, sl, #1
 800435c:	9304      	str	r3, [sp, #16]
 800435e:	9307      	str	r3, [sp, #28]
 8004360:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8004364:	931a      	str	r3, [sp, #104]	@ 0x68
 8004366:	4654      	mov	r4, sl
 8004368:	2205      	movs	r2, #5
 800436a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800436e:	4853      	ldr	r0, [pc, #332]	@ (80044bc <_vfiprintf_r+0x21c>)
 8004370:	f7fb ff36 	bl	80001e0 <memchr>
 8004374:	9a04      	ldr	r2, [sp, #16]
 8004376:	b9d8      	cbnz	r0, 80043b0 <_vfiprintf_r+0x110>
 8004378:	06d1      	lsls	r1, r2, #27
 800437a:	bf44      	itt	mi
 800437c:	2320      	movmi	r3, #32
 800437e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004382:	0713      	lsls	r3, r2, #28
 8004384:	bf44      	itt	mi
 8004386:	232b      	movmi	r3, #43	@ 0x2b
 8004388:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800438c:	f89a 3000 	ldrb.w	r3, [sl]
 8004390:	2b2a      	cmp	r3, #42	@ 0x2a
 8004392:	d015      	beq.n	80043c0 <_vfiprintf_r+0x120>
 8004394:	9a07      	ldr	r2, [sp, #28]
 8004396:	4654      	mov	r4, sl
 8004398:	2000      	movs	r0, #0
 800439a:	f04f 0c0a 	mov.w	ip, #10
 800439e:	4621      	mov	r1, r4
 80043a0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80043a4:	3b30      	subs	r3, #48	@ 0x30
 80043a6:	2b09      	cmp	r3, #9
 80043a8:	d94b      	bls.n	8004442 <_vfiprintf_r+0x1a2>
 80043aa:	b1b0      	cbz	r0, 80043da <_vfiprintf_r+0x13a>
 80043ac:	9207      	str	r2, [sp, #28]
 80043ae:	e014      	b.n	80043da <_vfiprintf_r+0x13a>
 80043b0:	eba0 0308 	sub.w	r3, r0, r8
 80043b4:	fa09 f303 	lsl.w	r3, r9, r3
 80043b8:	4313      	orrs	r3, r2
 80043ba:	9304      	str	r3, [sp, #16]
 80043bc:	46a2      	mov	sl, r4
 80043be:	e7d2      	b.n	8004366 <_vfiprintf_r+0xc6>
 80043c0:	9b03      	ldr	r3, [sp, #12]
 80043c2:	1d19      	adds	r1, r3, #4
 80043c4:	681b      	ldr	r3, [r3, #0]
 80043c6:	9103      	str	r1, [sp, #12]
 80043c8:	2b00      	cmp	r3, #0
 80043ca:	bfbb      	ittet	lt
 80043cc:	425b      	neglt	r3, r3
 80043ce:	f042 0202 	orrlt.w	r2, r2, #2
 80043d2:	9307      	strge	r3, [sp, #28]
 80043d4:	9307      	strlt	r3, [sp, #28]
 80043d6:	bfb8      	it	lt
 80043d8:	9204      	strlt	r2, [sp, #16]
 80043da:	7823      	ldrb	r3, [r4, #0]
 80043dc:	2b2e      	cmp	r3, #46	@ 0x2e
 80043de:	d10a      	bne.n	80043f6 <_vfiprintf_r+0x156>
 80043e0:	7863      	ldrb	r3, [r4, #1]
 80043e2:	2b2a      	cmp	r3, #42	@ 0x2a
 80043e4:	d132      	bne.n	800444c <_vfiprintf_r+0x1ac>
 80043e6:	9b03      	ldr	r3, [sp, #12]
 80043e8:	1d1a      	adds	r2, r3, #4
 80043ea:	681b      	ldr	r3, [r3, #0]
 80043ec:	9203      	str	r2, [sp, #12]
 80043ee:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80043f2:	3402      	adds	r4, #2
 80043f4:	9305      	str	r3, [sp, #20]
 80043f6:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80044cc <_vfiprintf_r+0x22c>
 80043fa:	7821      	ldrb	r1, [r4, #0]
 80043fc:	2203      	movs	r2, #3
 80043fe:	4650      	mov	r0, sl
 8004400:	f7fb feee 	bl	80001e0 <memchr>
 8004404:	b138      	cbz	r0, 8004416 <_vfiprintf_r+0x176>
 8004406:	9b04      	ldr	r3, [sp, #16]
 8004408:	eba0 000a 	sub.w	r0, r0, sl
 800440c:	2240      	movs	r2, #64	@ 0x40
 800440e:	4082      	lsls	r2, r0
 8004410:	4313      	orrs	r3, r2
 8004412:	3401      	adds	r4, #1
 8004414:	9304      	str	r3, [sp, #16]
 8004416:	f814 1b01 	ldrb.w	r1, [r4], #1
 800441a:	4829      	ldr	r0, [pc, #164]	@ (80044c0 <_vfiprintf_r+0x220>)
 800441c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004420:	2206      	movs	r2, #6
 8004422:	f7fb fedd 	bl	80001e0 <memchr>
 8004426:	2800      	cmp	r0, #0
 8004428:	d03f      	beq.n	80044aa <_vfiprintf_r+0x20a>
 800442a:	4b26      	ldr	r3, [pc, #152]	@ (80044c4 <_vfiprintf_r+0x224>)
 800442c:	bb1b      	cbnz	r3, 8004476 <_vfiprintf_r+0x1d6>
 800442e:	9b03      	ldr	r3, [sp, #12]
 8004430:	3307      	adds	r3, #7
 8004432:	f023 0307 	bic.w	r3, r3, #7
 8004436:	3308      	adds	r3, #8
 8004438:	9303      	str	r3, [sp, #12]
 800443a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800443c:	443b      	add	r3, r7
 800443e:	9309      	str	r3, [sp, #36]	@ 0x24
 8004440:	e76a      	b.n	8004318 <_vfiprintf_r+0x78>
 8004442:	fb0c 3202 	mla	r2, ip, r2, r3
 8004446:	460c      	mov	r4, r1
 8004448:	2001      	movs	r0, #1
 800444a:	e7a8      	b.n	800439e <_vfiprintf_r+0xfe>
 800444c:	2300      	movs	r3, #0
 800444e:	3401      	adds	r4, #1
 8004450:	9305      	str	r3, [sp, #20]
 8004452:	4619      	mov	r1, r3
 8004454:	f04f 0c0a 	mov.w	ip, #10
 8004458:	4620      	mov	r0, r4
 800445a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800445e:	3a30      	subs	r2, #48	@ 0x30
 8004460:	2a09      	cmp	r2, #9
 8004462:	d903      	bls.n	800446c <_vfiprintf_r+0x1cc>
 8004464:	2b00      	cmp	r3, #0
 8004466:	d0c6      	beq.n	80043f6 <_vfiprintf_r+0x156>
 8004468:	9105      	str	r1, [sp, #20]
 800446a:	e7c4      	b.n	80043f6 <_vfiprintf_r+0x156>
 800446c:	fb0c 2101 	mla	r1, ip, r1, r2
 8004470:	4604      	mov	r4, r0
 8004472:	2301      	movs	r3, #1
 8004474:	e7f0      	b.n	8004458 <_vfiprintf_r+0x1b8>
 8004476:	ab03      	add	r3, sp, #12
 8004478:	9300      	str	r3, [sp, #0]
 800447a:	462a      	mov	r2, r5
 800447c:	4b12      	ldr	r3, [pc, #72]	@ (80044c8 <_vfiprintf_r+0x228>)
 800447e:	a904      	add	r1, sp, #16
 8004480:	4630      	mov	r0, r6
 8004482:	f7fd fda3 	bl	8001fcc <_printf_float>
 8004486:	4607      	mov	r7, r0
 8004488:	1c78      	adds	r0, r7, #1
 800448a:	d1d6      	bne.n	800443a <_vfiprintf_r+0x19a>
 800448c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800448e:	07d9      	lsls	r1, r3, #31
 8004490:	d405      	bmi.n	800449e <_vfiprintf_r+0x1fe>
 8004492:	89ab      	ldrh	r3, [r5, #12]
 8004494:	059a      	lsls	r2, r3, #22
 8004496:	d402      	bmi.n	800449e <_vfiprintf_r+0x1fe>
 8004498:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800449a:	f7fe fad3 	bl	8002a44 <__retarget_lock_release_recursive>
 800449e:	89ab      	ldrh	r3, [r5, #12]
 80044a0:	065b      	lsls	r3, r3, #25
 80044a2:	f53f af1f 	bmi.w	80042e4 <_vfiprintf_r+0x44>
 80044a6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80044a8:	e71e      	b.n	80042e8 <_vfiprintf_r+0x48>
 80044aa:	ab03      	add	r3, sp, #12
 80044ac:	9300      	str	r3, [sp, #0]
 80044ae:	462a      	mov	r2, r5
 80044b0:	4b05      	ldr	r3, [pc, #20]	@ (80044c8 <_vfiprintf_r+0x228>)
 80044b2:	a904      	add	r1, sp, #16
 80044b4:	4630      	mov	r0, r6
 80044b6:	f7fe f821 	bl	80024fc <_printf_i>
 80044ba:	e7e4      	b.n	8004486 <_vfiprintf_r+0x1e6>
 80044bc:	08004aff 	.word	0x08004aff
 80044c0:	08004b09 	.word	0x08004b09
 80044c4:	08001fcd 	.word	0x08001fcd
 80044c8:	0800427d 	.word	0x0800427d
 80044cc:	08004b05 	.word	0x08004b05

080044d0 <__swbuf_r>:
 80044d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80044d2:	460e      	mov	r6, r1
 80044d4:	4614      	mov	r4, r2
 80044d6:	4605      	mov	r5, r0
 80044d8:	b118      	cbz	r0, 80044e2 <__swbuf_r+0x12>
 80044da:	6a03      	ldr	r3, [r0, #32]
 80044dc:	b90b      	cbnz	r3, 80044e2 <__swbuf_r+0x12>
 80044de:	f7fe f9b9 	bl	8002854 <__sinit>
 80044e2:	69a3      	ldr	r3, [r4, #24]
 80044e4:	60a3      	str	r3, [r4, #8]
 80044e6:	89a3      	ldrh	r3, [r4, #12]
 80044e8:	071a      	lsls	r2, r3, #28
 80044ea:	d501      	bpl.n	80044f0 <__swbuf_r+0x20>
 80044ec:	6923      	ldr	r3, [r4, #16]
 80044ee:	b943      	cbnz	r3, 8004502 <__swbuf_r+0x32>
 80044f0:	4621      	mov	r1, r4
 80044f2:	4628      	mov	r0, r5
 80044f4:	f000 f82a 	bl	800454c <__swsetup_r>
 80044f8:	b118      	cbz	r0, 8004502 <__swbuf_r+0x32>
 80044fa:	f04f 37ff 	mov.w	r7, #4294967295
 80044fe:	4638      	mov	r0, r7
 8004500:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004502:	6823      	ldr	r3, [r4, #0]
 8004504:	6922      	ldr	r2, [r4, #16]
 8004506:	1a98      	subs	r0, r3, r2
 8004508:	6963      	ldr	r3, [r4, #20]
 800450a:	b2f6      	uxtb	r6, r6
 800450c:	4283      	cmp	r3, r0
 800450e:	4637      	mov	r7, r6
 8004510:	dc05      	bgt.n	800451e <__swbuf_r+0x4e>
 8004512:	4621      	mov	r1, r4
 8004514:	4628      	mov	r0, r5
 8004516:	f7ff fde9 	bl	80040ec <_fflush_r>
 800451a:	2800      	cmp	r0, #0
 800451c:	d1ed      	bne.n	80044fa <__swbuf_r+0x2a>
 800451e:	68a3      	ldr	r3, [r4, #8]
 8004520:	3b01      	subs	r3, #1
 8004522:	60a3      	str	r3, [r4, #8]
 8004524:	6823      	ldr	r3, [r4, #0]
 8004526:	1c5a      	adds	r2, r3, #1
 8004528:	6022      	str	r2, [r4, #0]
 800452a:	701e      	strb	r6, [r3, #0]
 800452c:	6962      	ldr	r2, [r4, #20]
 800452e:	1c43      	adds	r3, r0, #1
 8004530:	429a      	cmp	r2, r3
 8004532:	d004      	beq.n	800453e <__swbuf_r+0x6e>
 8004534:	89a3      	ldrh	r3, [r4, #12]
 8004536:	07db      	lsls	r3, r3, #31
 8004538:	d5e1      	bpl.n	80044fe <__swbuf_r+0x2e>
 800453a:	2e0a      	cmp	r6, #10
 800453c:	d1df      	bne.n	80044fe <__swbuf_r+0x2e>
 800453e:	4621      	mov	r1, r4
 8004540:	4628      	mov	r0, r5
 8004542:	f7ff fdd3 	bl	80040ec <_fflush_r>
 8004546:	2800      	cmp	r0, #0
 8004548:	d0d9      	beq.n	80044fe <__swbuf_r+0x2e>
 800454a:	e7d6      	b.n	80044fa <__swbuf_r+0x2a>

0800454c <__swsetup_r>:
 800454c:	b538      	push	{r3, r4, r5, lr}
 800454e:	4b29      	ldr	r3, [pc, #164]	@ (80045f4 <__swsetup_r+0xa8>)
 8004550:	4605      	mov	r5, r0
 8004552:	6818      	ldr	r0, [r3, #0]
 8004554:	460c      	mov	r4, r1
 8004556:	b118      	cbz	r0, 8004560 <__swsetup_r+0x14>
 8004558:	6a03      	ldr	r3, [r0, #32]
 800455a:	b90b      	cbnz	r3, 8004560 <__swsetup_r+0x14>
 800455c:	f7fe f97a 	bl	8002854 <__sinit>
 8004560:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004564:	0719      	lsls	r1, r3, #28
 8004566:	d422      	bmi.n	80045ae <__swsetup_r+0x62>
 8004568:	06da      	lsls	r2, r3, #27
 800456a:	d407      	bmi.n	800457c <__swsetup_r+0x30>
 800456c:	2209      	movs	r2, #9
 800456e:	602a      	str	r2, [r5, #0]
 8004570:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004574:	81a3      	strh	r3, [r4, #12]
 8004576:	f04f 30ff 	mov.w	r0, #4294967295
 800457a:	e033      	b.n	80045e4 <__swsetup_r+0x98>
 800457c:	0758      	lsls	r0, r3, #29
 800457e:	d512      	bpl.n	80045a6 <__swsetup_r+0x5a>
 8004580:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8004582:	b141      	cbz	r1, 8004596 <__swsetup_r+0x4a>
 8004584:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8004588:	4299      	cmp	r1, r3
 800458a:	d002      	beq.n	8004592 <__swsetup_r+0x46>
 800458c:	4628      	mov	r0, r5
 800458e:	f7ff f8a7 	bl	80036e0 <_free_r>
 8004592:	2300      	movs	r3, #0
 8004594:	6363      	str	r3, [r4, #52]	@ 0x34
 8004596:	89a3      	ldrh	r3, [r4, #12]
 8004598:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800459c:	81a3      	strh	r3, [r4, #12]
 800459e:	2300      	movs	r3, #0
 80045a0:	6063      	str	r3, [r4, #4]
 80045a2:	6923      	ldr	r3, [r4, #16]
 80045a4:	6023      	str	r3, [r4, #0]
 80045a6:	89a3      	ldrh	r3, [r4, #12]
 80045a8:	f043 0308 	orr.w	r3, r3, #8
 80045ac:	81a3      	strh	r3, [r4, #12]
 80045ae:	6923      	ldr	r3, [r4, #16]
 80045b0:	b94b      	cbnz	r3, 80045c6 <__swsetup_r+0x7a>
 80045b2:	89a3      	ldrh	r3, [r4, #12]
 80045b4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80045b8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80045bc:	d003      	beq.n	80045c6 <__swsetup_r+0x7a>
 80045be:	4621      	mov	r1, r4
 80045c0:	4628      	mov	r0, r5
 80045c2:	f000 f883 	bl	80046cc <__smakebuf_r>
 80045c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80045ca:	f013 0201 	ands.w	r2, r3, #1
 80045ce:	d00a      	beq.n	80045e6 <__swsetup_r+0x9a>
 80045d0:	2200      	movs	r2, #0
 80045d2:	60a2      	str	r2, [r4, #8]
 80045d4:	6962      	ldr	r2, [r4, #20]
 80045d6:	4252      	negs	r2, r2
 80045d8:	61a2      	str	r2, [r4, #24]
 80045da:	6922      	ldr	r2, [r4, #16]
 80045dc:	b942      	cbnz	r2, 80045f0 <__swsetup_r+0xa4>
 80045de:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80045e2:	d1c5      	bne.n	8004570 <__swsetup_r+0x24>
 80045e4:	bd38      	pop	{r3, r4, r5, pc}
 80045e6:	0799      	lsls	r1, r3, #30
 80045e8:	bf58      	it	pl
 80045ea:	6962      	ldrpl	r2, [r4, #20]
 80045ec:	60a2      	str	r2, [r4, #8]
 80045ee:	e7f4      	b.n	80045da <__swsetup_r+0x8e>
 80045f0:	2000      	movs	r0, #0
 80045f2:	e7f7      	b.n	80045e4 <__swsetup_r+0x98>
 80045f4:	2000000c 	.word	0x2000000c

080045f8 <_raise_r>:
 80045f8:	291f      	cmp	r1, #31
 80045fa:	b538      	push	{r3, r4, r5, lr}
 80045fc:	4605      	mov	r5, r0
 80045fe:	460c      	mov	r4, r1
 8004600:	d904      	bls.n	800460c <_raise_r+0x14>
 8004602:	2316      	movs	r3, #22
 8004604:	6003      	str	r3, [r0, #0]
 8004606:	f04f 30ff 	mov.w	r0, #4294967295
 800460a:	bd38      	pop	{r3, r4, r5, pc}
 800460c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800460e:	b112      	cbz	r2, 8004616 <_raise_r+0x1e>
 8004610:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004614:	b94b      	cbnz	r3, 800462a <_raise_r+0x32>
 8004616:	4628      	mov	r0, r5
 8004618:	f000 f830 	bl	800467c <_getpid_r>
 800461c:	4622      	mov	r2, r4
 800461e:	4601      	mov	r1, r0
 8004620:	4628      	mov	r0, r5
 8004622:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004626:	f000 b817 	b.w	8004658 <_kill_r>
 800462a:	2b01      	cmp	r3, #1
 800462c:	d00a      	beq.n	8004644 <_raise_r+0x4c>
 800462e:	1c59      	adds	r1, r3, #1
 8004630:	d103      	bne.n	800463a <_raise_r+0x42>
 8004632:	2316      	movs	r3, #22
 8004634:	6003      	str	r3, [r0, #0]
 8004636:	2001      	movs	r0, #1
 8004638:	e7e7      	b.n	800460a <_raise_r+0x12>
 800463a:	2100      	movs	r1, #0
 800463c:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8004640:	4620      	mov	r0, r4
 8004642:	4798      	blx	r3
 8004644:	2000      	movs	r0, #0
 8004646:	e7e0      	b.n	800460a <_raise_r+0x12>

08004648 <raise>:
 8004648:	4b02      	ldr	r3, [pc, #8]	@ (8004654 <raise+0xc>)
 800464a:	4601      	mov	r1, r0
 800464c:	6818      	ldr	r0, [r3, #0]
 800464e:	f7ff bfd3 	b.w	80045f8 <_raise_r>
 8004652:	bf00      	nop
 8004654:	2000000c 	.word	0x2000000c

08004658 <_kill_r>:
 8004658:	b538      	push	{r3, r4, r5, lr}
 800465a:	4d07      	ldr	r5, [pc, #28]	@ (8004678 <_kill_r+0x20>)
 800465c:	2300      	movs	r3, #0
 800465e:	4604      	mov	r4, r0
 8004660:	4608      	mov	r0, r1
 8004662:	4611      	mov	r1, r2
 8004664:	602b      	str	r3, [r5, #0]
 8004666:	f7fc fd97 	bl	8001198 <_kill>
 800466a:	1c43      	adds	r3, r0, #1
 800466c:	d102      	bne.n	8004674 <_kill_r+0x1c>
 800466e:	682b      	ldr	r3, [r5, #0]
 8004670:	b103      	cbz	r3, 8004674 <_kill_r+0x1c>
 8004672:	6023      	str	r3, [r4, #0]
 8004674:	bd38      	pop	{r3, r4, r5, pc}
 8004676:	bf00      	nop
 8004678:	20000348 	.word	0x20000348

0800467c <_getpid_r>:
 800467c:	f7fc bd84 	b.w	8001188 <_getpid>

08004680 <__swhatbuf_r>:
 8004680:	b570      	push	{r4, r5, r6, lr}
 8004682:	460c      	mov	r4, r1
 8004684:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004688:	2900      	cmp	r1, #0
 800468a:	b096      	sub	sp, #88	@ 0x58
 800468c:	4615      	mov	r5, r2
 800468e:	461e      	mov	r6, r3
 8004690:	da0d      	bge.n	80046ae <__swhatbuf_r+0x2e>
 8004692:	89a3      	ldrh	r3, [r4, #12]
 8004694:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8004698:	f04f 0100 	mov.w	r1, #0
 800469c:	bf14      	ite	ne
 800469e:	2340      	movne	r3, #64	@ 0x40
 80046a0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80046a4:	2000      	movs	r0, #0
 80046a6:	6031      	str	r1, [r6, #0]
 80046a8:	602b      	str	r3, [r5, #0]
 80046aa:	b016      	add	sp, #88	@ 0x58
 80046ac:	bd70      	pop	{r4, r5, r6, pc}
 80046ae:	466a      	mov	r2, sp
 80046b0:	f000 f848 	bl	8004744 <_fstat_r>
 80046b4:	2800      	cmp	r0, #0
 80046b6:	dbec      	blt.n	8004692 <__swhatbuf_r+0x12>
 80046b8:	9901      	ldr	r1, [sp, #4]
 80046ba:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80046be:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80046c2:	4259      	negs	r1, r3
 80046c4:	4159      	adcs	r1, r3
 80046c6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80046ca:	e7eb      	b.n	80046a4 <__swhatbuf_r+0x24>

080046cc <__smakebuf_r>:
 80046cc:	898b      	ldrh	r3, [r1, #12]
 80046ce:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80046d0:	079d      	lsls	r5, r3, #30
 80046d2:	4606      	mov	r6, r0
 80046d4:	460c      	mov	r4, r1
 80046d6:	d507      	bpl.n	80046e8 <__smakebuf_r+0x1c>
 80046d8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80046dc:	6023      	str	r3, [r4, #0]
 80046de:	6123      	str	r3, [r4, #16]
 80046e0:	2301      	movs	r3, #1
 80046e2:	6163      	str	r3, [r4, #20]
 80046e4:	b003      	add	sp, #12
 80046e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80046e8:	ab01      	add	r3, sp, #4
 80046ea:	466a      	mov	r2, sp
 80046ec:	f7ff ffc8 	bl	8004680 <__swhatbuf_r>
 80046f0:	9f00      	ldr	r7, [sp, #0]
 80046f2:	4605      	mov	r5, r0
 80046f4:	4639      	mov	r1, r7
 80046f6:	4630      	mov	r0, r6
 80046f8:	f7ff f866 	bl	80037c8 <_malloc_r>
 80046fc:	b948      	cbnz	r0, 8004712 <__smakebuf_r+0x46>
 80046fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004702:	059a      	lsls	r2, r3, #22
 8004704:	d4ee      	bmi.n	80046e4 <__smakebuf_r+0x18>
 8004706:	f023 0303 	bic.w	r3, r3, #3
 800470a:	f043 0302 	orr.w	r3, r3, #2
 800470e:	81a3      	strh	r3, [r4, #12]
 8004710:	e7e2      	b.n	80046d8 <__smakebuf_r+0xc>
 8004712:	89a3      	ldrh	r3, [r4, #12]
 8004714:	6020      	str	r0, [r4, #0]
 8004716:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800471a:	81a3      	strh	r3, [r4, #12]
 800471c:	9b01      	ldr	r3, [sp, #4]
 800471e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8004722:	b15b      	cbz	r3, 800473c <__smakebuf_r+0x70>
 8004724:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004728:	4630      	mov	r0, r6
 800472a:	f000 f81d 	bl	8004768 <_isatty_r>
 800472e:	b128      	cbz	r0, 800473c <__smakebuf_r+0x70>
 8004730:	89a3      	ldrh	r3, [r4, #12]
 8004732:	f023 0303 	bic.w	r3, r3, #3
 8004736:	f043 0301 	orr.w	r3, r3, #1
 800473a:	81a3      	strh	r3, [r4, #12]
 800473c:	89a3      	ldrh	r3, [r4, #12]
 800473e:	431d      	orrs	r5, r3
 8004740:	81a5      	strh	r5, [r4, #12]
 8004742:	e7cf      	b.n	80046e4 <__smakebuf_r+0x18>

08004744 <_fstat_r>:
 8004744:	b538      	push	{r3, r4, r5, lr}
 8004746:	4d07      	ldr	r5, [pc, #28]	@ (8004764 <_fstat_r+0x20>)
 8004748:	2300      	movs	r3, #0
 800474a:	4604      	mov	r4, r0
 800474c:	4608      	mov	r0, r1
 800474e:	4611      	mov	r1, r2
 8004750:	602b      	str	r3, [r5, #0]
 8004752:	f7fc fd48 	bl	80011e6 <_fstat>
 8004756:	1c43      	adds	r3, r0, #1
 8004758:	d102      	bne.n	8004760 <_fstat_r+0x1c>
 800475a:	682b      	ldr	r3, [r5, #0]
 800475c:	b103      	cbz	r3, 8004760 <_fstat_r+0x1c>
 800475e:	6023      	str	r3, [r4, #0]
 8004760:	bd38      	pop	{r3, r4, r5, pc}
 8004762:	bf00      	nop
 8004764:	20000348 	.word	0x20000348

08004768 <_isatty_r>:
 8004768:	b538      	push	{r3, r4, r5, lr}
 800476a:	4d06      	ldr	r5, [pc, #24]	@ (8004784 <_isatty_r+0x1c>)
 800476c:	2300      	movs	r3, #0
 800476e:	4604      	mov	r4, r0
 8004770:	4608      	mov	r0, r1
 8004772:	602b      	str	r3, [r5, #0]
 8004774:	f7fc fd47 	bl	8001206 <_isatty>
 8004778:	1c43      	adds	r3, r0, #1
 800477a:	d102      	bne.n	8004782 <_isatty_r+0x1a>
 800477c:	682b      	ldr	r3, [r5, #0]
 800477e:	b103      	cbz	r3, 8004782 <_isatty_r+0x1a>
 8004780:	6023      	str	r3, [r4, #0]
 8004782:	bd38      	pop	{r3, r4, r5, pc}
 8004784:	20000348 	.word	0x20000348

08004788 <_init>:
 8004788:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800478a:	bf00      	nop
 800478c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800478e:	bc08      	pop	{r3}
 8004790:	469e      	mov	lr, r3
 8004792:	4770      	bx	lr

08004794 <_fini>:
 8004794:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004796:	bf00      	nop
 8004798:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800479a:	bc08      	pop	{r3}
 800479c:	469e      	mov	lr, r3
 800479e:	4770      	bx	lr
